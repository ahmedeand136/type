{
  "info": {
    "_postman_id": "cc95bdb3-8ce9-4a61-b66c-9b3e801191d3",
    "name": "Cumulocity",
    "description": "# REST implementation\n\nThis section describes the aspects common to all REST-based interfaces of Cumulocity. The interfaces are based on the [Hypertext Transfer Protocol 1.1](https://tools.ietf.org/html/rfc2616) using [HTTPS](http://en.wikipedia.org/wiki/HTTP_Secure).\n\n## HTTP usage\n\n### Application management\n\nCumulocity uses a so-called \"application key\" to distinguish requests coming from devices and traffic from applications. If you write an application, pass the following header as part of all requests:\n\n```markup\nX-Cumulocity-Application-Key: <APPLICATION_KEY>\n```\n\nFor example, if you registered your application in the Cumulocity Administration application with the key \"myapp\", your requests should contain the header:\n\n```markup\nX-Cumulocity-Application-Key: myapp\n```\n\nThis makes your application subscribable and billable. If you implement a device, do not pass the key.\n\n> **&#9432; Info:** Make sure that you pass the key in **all** requests coming from an application. If you leave out the key,\n> the request will be considered as a device request, and the corresponding device will be marked as \"available\".\n\n### Limited HTTP clients\n\nIf you use an HTTP client that can only perform GET and POST methods in HTTP, you can emulate the other methods through an additional \"X-HTTP-METHOD\" header. Simply issue a POST request and add the header, specifying the actual REST method to be executed. For example, to emulate the \"PUT\" (modify) method, you can use:\n\n```http\nPOST ...\nX-HTTP-METHOD: PUT\n```\n\n### Processing mode\n\nEvery update request (PUT, POST, DELETE) executes with a so-called *processing mode*. The processing modes are as follows:\n\n|Processing mode|Description|\n|---|---|\n|PERSISTENT (default)|All updates will be send both to the Cumulocity database and to real-time processing.|\n|TRANSIENT|Updates will be sent only to real-time processing. As part of real-time processing, the user can decide case by case through scripts whether updates should be stored to the database or not.|\n|QUIESCENT|The QUIESCENT processing mode behaves like the PERSISTENT processing mode with the exception that no real-time notifications will be sent. Currently, the QUIESCENT processing mode is applicable for measurements, events and managed objects.|\n|CEP| With the CEP processing mode, requests will only be processed by CEP or Apama. Currently, the CEP processing mode is applicable for measurements and events only.|\n\nTo explicitly control the processing mode of an update request, you can use the \"X-Cumulocity-Processing-Mode\" header with a value of either \"PERSISTENT\", \"TRANSIENT\", \"QUIESCENT\" or \"CEP\":\n\n```markup\nX-Cumulocity-Processing-Mode: PERSISTENT\n```\n\n> **&#9432; Info:** Events are always delivered to CEP/Apama for all processing modes. This is independent from real-time notifications.\n\n### Authorization\n\nAll requests issued to Cumulocity are subject to authorization. To determine the required permissions, see the \"Required role\" entries for the individual requests. To learn more about the different permissions and the concept of ownership in Cumulocity, see [Getting started > Technical concepts > Security aspects > Access control > Managing roles and assigning permissions](https://www.cumulocity.com/docs/concepts/security/#managing-roles-and-assigning-permissions) in the Cumulocity user documentation.\n\n### Media types\n\nEach type of data is associated with an own media type. The general format of media types is:\n\n```markup\napplication/vnd.com.nsn.cumulocity.<TYPE>+json;ver=<VERSION>;charset=UTF-8\n```\n\nEach media type contains a parameter `ver` indicating the version of the type. At the time of writing, the latest version is \"0.9\". As an example, the media type for an error message in the current version is:\n\n```markup\napplication/vnd.com.nsn.cumulocity.error+json;ver=0.9;charset=UTF-8\n```\n\nMedia types are used in HTTP \"Content-Type\" and \"Accept\" headers. If you specify an \"Accept\" header in a POST or PUT request, the response will contain the newly created or updated object. If you do not specify the header, the response body will be empty.\n\nIf a media type without the `ver` parameter is given, the oldest available version will be returned by the server. If the \"Accept\" header contains the same media type in multiple versions, the server will return a representation in the latest supported version.\n\nNote that media type values should be treated as case insensitive.\n\n### Date format\n\nData exchanged with Cumulocity in HTTP requests and responses is encoded in [JSON format](http://www.ietf.org/rfc/rfc4627.txt) and [UTF-8](http://en.wikipedia.org/wiki/UTF-8) character encoding. Timestamps and dates are accepted and emitted by Cumulocity in [ISO 8601](http://www.w3.org/TR/NOTE-datetime) format:\n\n```markup\nDate: YYYY-MM-DD\nTime: hh:mm:ss±hh:mm\nTimestamp: YYYY-MM-DDThh:mm:ss±hh:mm\n```\n\nTo avoid ambiguity, all times and timestamps must include timezone information. Please take into account that the plus character \"+\" must be encoded as \"%2B\".\n\n### Response Codes\n\nCumulocity uses conventional HTTP response codes to indicate the success or failure of an API request. Codes in the `2xx` range indicate success. Codes in the `4xx` range indicate a user error. The response provides information on why the request failed (for example, a required parameter was omitted). Codes in the `5xx` range indicate an error with Cumulocity's servers ([these are very rare](https://cumulocity.com/docs/service-terms/service-level/)).\n\n#### HTTP status code summary\n\n|Code|Message|Description|\n|:---:|:---|:---|\n|200|OK|Everything worked as expected.|\n|201|Created|A managed object was created.|\n|204|No content|An object was removed.|\n|400|Bad Request|The request was unacceptable, often due to missing a required parameter.|\n|401|Unauthorized|Authentication has failed, or credentials were required but not provided.|\n|403|Forbidden|The authenticated user doesn't have permissions to perform the request.|\n|404|Not Found|The requested resource doesn't exist.|\n|405|Method not allowed|The employed HTTP method cannot be used on this resource (for example, using PUT on a read-only resource).|\n|406|Not Acceptable|The server could not produce a response matching the list of accepted types defined in the request.|\n|409|Conflict| The data is correct but it breaks some constraints (for example, application version limit is exceeded). |\n|422|Invalid data| Invalid data was sent on the request and/or a query could not be understood.                             |\n|422|Unprocessable Entity| The requested resource cannot be updated or mandatory fields are missing on the executed operation.      |\n|500<br>503|Server Errors| Something went wrong on Cumulocity's end.                                                            |\n\n## REST usage\n\n### Interpretation of HTTP verbs\n\nThe semantics described in the [HTTP specification](http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9) are used:\n\n* POST creates a new resource. In the response \"Location\" header, the URI of the newly created resource is returned.\n* GET retrieves a resource.\n* PUT updates an existing resource with the contents of the request.\n* DELETE removes a resource. The response will be \"204 No Content\".\n\nIf a PUT request only contains parts of a resource (also known as fragments), only those parts are updated. To remove such a part, use a PUT request with a null value for it:\n\n```json\n{\n  \"resourcePartName\": null\n}\n```\n\n> **&#9432; Info:** A PUT request cannot update sub-resources that are identified by a separate URI.\n\n### URI space and URI templates\n\nClients should not make assumptions on the layout of URIs used in requests, but construct URIs from previously returned URIs or URI templates. The [root interface](#tag/Platform-API) provides the entry point for clients.\n\nURI templates contain placeholders in curly braces (for example, `{type}`), which must be filled by the client to produce a URI. As an example, see the following excerpt from the event API response:\n\n```json\n{\n  \"events\": {\n      \"self\": \"https://<TENANT_DOMAIN>/event\"\n  },\n  \"eventsForSourceAndType\": \"https://<TENANT_DOMAIN>/event/events?type={type}&source={source}\"\n}\n```\n\nThe client must fill the `{type}` and `{source}` placeholders with the desired type and source devices of the events to be returned. The meaning of these placeholders is documented in the respective interface descriptions.\n\n### Interface structure\n\nIn general, Cumulocity REST resources are modeled according to the following pattern:\n\n* The starting point are API resources, which will provide access to the actual data through URIs and URI templates to collection resources. For example, the above event API resource provides the `events` URI and the `eventsForSourceAndType` URI to access collections of events.\n* Collection resources aggregate member resources and allow creating new member resources in the collection. For example, through the `events` collection resource, new events can be created.\n* Finally, individual resources can be edited.\n\n#### Query result paging\n\nCollection resources support paging of data to avoid passing huge data volumes in one block from client to server. GET requests to collections accept two query parameters:\n\n* `currentPage` defines the slice of data to be returned, starting with 1. By default, the first page is returned.\n* `pageSize` indicates how many entries of the collection should be returned. By default, 5 entries are returned. The upper limit for one page is currently 2,000 documents. Any larger requested page size is trimmed to the upper limit.\n* `withTotalElements` will yield the total number of elements in the statistics object. This is only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n* `withTotalPages` will yield the total number of pages in the statistics object. This is only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n\nFor convenience, collection resources provide `next` and `prev` links to retrieve the next and previous pages of the results. The following is an example response for managed object collections (the contents of the array `managedObjects` have been omitted):\n\n```json\n{\n  \"self\" : \"https://<TENANT_DOMAIN>/inventory/managedObjects?pageSize=5&currentPage=2\",\n  \"managedObjects\" : [...],\n  \"statistics\" : {\n    \"totalPages\" : 7,\n    \"pageSize\" : 5,\n    \"currentPage\" : 2,\n    \"totalElements\" : 34\n  },\n  \"prev\" : \"https://<TENANT_DOMAIN>/inventory/managedObjects?pageSize=5&currentPage=1\",\n  \"next\" : \"https://<TENANT_DOMAIN>/inventory/managedObjects?pageSize=5&currentPage=3\"\n}\n```\n\nThe `totalPages` and `totalElements` properties can be expensive to compute, hence they are not returned by default for [range queries](https://en.wikipedia.org/wiki/Range_query_(database)). To include any of them in the result, add the query parameters `withTotalPages=true` and/or `withTotalElements=true`.\n\n> **&#9432; Info:** If inventory roles are applied to a user, a query by the user may return less than `pageSize` results even if there are more results in total.\n\n> **&#9432; Info:** To improve performance, the `totalPages` and `totalElements` statistics are cached for 10 seconds.\n\n#### Query result paging for users with restricted access\n\nIf a user does not have a global role for reading data from the API resource but rather has [inventory roles](https://www.cumulocity.com/docs/standard-tenant/managing-permissions/#inventory-roles) for reading only particular documents, there are some differences in query result paging:\n\n* In some circumstances the response may contain less than `pageSize` and `totalElements` elements though there is more data in the database accessible for the user.\n* In some circumstances `next` and `prev` links may appear in the response though there is no more data in the database accessible for the user.\n* The property `currentPage` of the response does not contain the page number but the offset of the next element not yet processed by the querying mechanism.\n* The query parameters `withTotalPages=true` and `withTotalElements=true` have no effect, and the value of the `totalPages` and `totalElements` properties is always null.\n\nThe above behavior results from the fact that the querying mechanism is iterating maximally over 10 * max(pageSize, 100) documents per request, and it stops even though the full page of data accessible for the user could not be collected. When the next page is requested the querying mechanism starts the iteration where it completed the previous time.\n\n#### Query result by time interval\n\nUse the following query parameters to obtain data for a specified time interval:\n\n* `dateFrom` - Start date or date and time.\n* `dateTo` - End date or date and time.\n\nExample formats:\n\n```markup\ndateTo=2019-04-20\ndateTo=2019-04-20T08:30:00.000Z\n```\n\nParameters are optional. Values provided with those parameters are closed open range ( `[ dateFrom, dateTo )` ) . `dateFrom` is inclusive and `dateTo` is exclusive.\n\n> **⚠️ Important:** If your servers are not running in UTC (Coordinated Universal Time), any date passed without timezone will be handled as UTC, regardless of the server local timezone. This might lead to a difference regarding the date/time range included in the results.\n\n### Root interface\n\nTo discover the URIs to the various interfaces of Cumulocity, it provides a \"root\" interface.\nThis root interface aggregates all the underlying API resources.\nSee the [Platform API](#tag/Platform-API) endpoint.\nFor more information on the different API resources, consult the respective API sections.\n\n## Generic media types\n\n### Error\n\nThe error type provides further information on the reason of a failed request.\n\nContent-Type: application/vnd.com.nsn.cumulocity.error+json\n\n|Name|Type|Description|\n|---|---|---|\n|error|string|Error type formatted as `<RESOURCE_TYPE>/<ERROR_NAME>`. For example, an object not found in the inventory is reported as `inventory/notFound`.|\n|info|string|URL to an error description on the Internet.|\n|message|string|Short text description of the error|\n\n### Paging statistics\n\nPaging statistics for collection of resources.\n\nContent-Type: application/vnd.com.nsn.cumulocity.pagingstatistics+json\n\n|Name|Type|Description|\n|---|---|---|\n|currentPage|integer|The current returned page within the full result set, starting at \"1\".|\n|pageSize|integer|Maximum number of records contained in this query.|\n|totalElements|integer|The total number of results (elements).|\n|totalPages|integer|The total number of paginated results (pages).|\n\n> **&#9432; Info:** The `totalPages` and `totalElements` properties are not returned by default in the response. To include any of them, add the query parameters `withTotalPages=true` and/or `withTotalElements=true`. Be aware of [differences in query result paging for users with restricted access](#query-result-paging-for-users-with-restricted-access).\n\n> **&#9432; Info:** To improve performance, the `totalPages` and `totalElements` statistics are cached for 10 seconds.\n\n# Fragment library\n\nVisit the [Device management > Device integration > Fragment library](https://www.cumulocity.com/docs/device-integration/fragment-library/) in the Cumulocity user documentation.\n\n# Login options\n\nWhen you sign up for an account on the [Cumulocity platform](https://www.cumulocity.com/), for example, by using a free trial, you will be provided with a dedicated URL address for your tenant. All requests to the platform must be authenticated employing your tenant ID, Cumulocity user (c8yuser for short) and password. Cumulocity offers the following forms of authentication:\n\n* Basic authentication (Basic)\n* OAI-Secure authentication (OAI-Secure)\n* SSO with authentication code grant (SSO)\n* JWT authentication with an access token from a IAM (JWT-IAM)\n\nYou can check your login options with a GET call to the endpoint <kbd><a href=\"#tag/Login-options\">/tenant/loginOptions</a></kbd>.\n",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "39166420",
    "_collection_link": "https://interstellar-trinity-644134.postman.co/workspace/6d27fae5-913b-4744-8330-2d0f3eb3f063/collection/39166420-cc95bdb3-8ce9-4a61-b66c-9b3e801191d3?action=share&source=collection_link&creator=39166420"
  },
  "item": [
    {
      "name": "platform",
      "item": [
        {
          "name": "Retrieve URIs to collection platform objects",
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "username",
                  "value": "{{basicAuthUsername}}",
                  "type": "string"
                },
                {
                  "key": "password",
                  "value": "{{basicAuthPassword}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/vnd.com.nsn.cumulocity.platformapi+json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/platform",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "platform"
              ]
            },
            "description": "Retrieve URIs and URI templates to collections of platform objects."
          },
          "response": [
            {
              "name": "The request has succeeded and the URIs are sent in the response.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.platformapi+json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/platform",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "platform"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.com.nsn.cumulocity.platformapi+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"self\": \"<uri>\",\n  \"alarm\": {\n    \"alarms\": {\n      \"self\": \"<uri>\",\n      \"alarms\": [\n        {\n          \"count\": \"<integer>\",\n          \"creationTime\": \"<dateTime>\",\n          \"firstOccurrenceTime\": \"<dateTime>\",\n          \"id\": \"<string>\",\n          \"lastUpdated\": \"<dateTime>\",\n          \"self\": \"<uri>\",\n          \"severity\": \"CRITICAL\",\n          \"source\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"status\": \"ACKNOWLEDGED\",\n          \"text\": \"<string>\",\n          \"time\": \"<dateTime>\",\n          \"type\": \"<string>\"\n        }\n      ]\n    },\n    \"alarmsForSource\": \"<string>\",\n    \"alarmsForStatus\": \"<string>\",\n    \"alarmsForSourceAndStatusAndTime\": \"<string>\",\n    \"alarmsForStatusAndTime\": \"<string>\",\n    \"alarmsForSourceAndTime\": \"<string>\",\n    \"alarmsForTime\": \"<string>\",\n    \"alarmsForSourceAndStatus\": \"<string>\",\n    \"self\": \"<uri>\"\n  },\n  \"audit\": {\n    \"auditRecords\": {\n      \"self\": \"<uri>\",\n      \"auditRecords\": [\n        {\n          \"activity\": \"<string>\",\n          \"source\": {\n            \"id\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"text\": \"<string>\",\n          \"time\": \"<dateTime>\",\n          \"type\": \"Group\",\n          \"application\": \"<string>\",\n          \"c8y_Metadata\": {\n            \"action\": \"SUBSCRIBE\"\n          },\n          \"changes\": [\n            {\n              \"attribute\": \"<string>\",\n              \"changeType\": \"ADDED\",\n              \"newValue\": \"<string>\",\n              \"previousValue\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"creationTime\": \"<dateTime>\",\n          \"id\": \"<string>\",\n          \"self\": \"<uri>\",\n          \"severity\": \"INFORMATION\",\n          \"user\": \"<string>\"\n        }\n      ]\n    },\n    \"auditRecordsForApplication\": \"<string>\",\n    \"auditRecordsForType\": \"<string>\",\n    \"auditRecordsForUser\": \"<string>\",\n    \"auditRecordsForTypeAndApplication\": \"<string>\",\n    \"auditRecordsForTypeAndUserAndApplication\": \"<string>\",\n    \"auditRecordsForUserAndApplication\": \"<string>\",\n    \"auditRecordsForUserAndType\": \"<string>\",\n    \"self\": \"<uri>\"\n  },\n  \"deviceControl\": {\n    \"operations\": {\n      \"self\": \"<uri>\",\n      \"operations\": [\n        {\n          \"operation\": {\n            \"id\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        }\n      ]\n    },\n    \"operationsByStatus\": \"<string>\",\n    \"operationsByAgentId\": \"<string>\",\n    \"operationsByAgentIdAndStatus\": \"<string>\",\n    \"operationsByDeviceId\": \"<string>\",\n    \"operationsByDeviceIdAndStatus\": \"<string>\",\n    \"self\": \"<uri>\"\n  },\n  \"event\": {\n    \"events\": {\n      \"self\": \"<uri>\",\n      \"events\": [\n        {\n          \"creationTime\": \"<dateTime>\",\n          \"lastUpdated\": \"<dateTime>\",\n          \"id\": \"<string>\",\n          \"self\": \"<uri>\",\n          \"source\": {\n            \"id\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"text\": \"<string>\",\n          \"time\": \"<dateTime>\",\n          \"type\": \"<string>\"\n        }\n      ]\n    },\n    \"eventsForSource\": \"<string>\",\n    \"eventsForSourceAndType\": \"<string>\",\n    \"eventsForType\": \"<string>\",\n    \"eventsForFragmentType\": \"<string>\",\n    \"eventsForTime\": \"<string>\",\n    \"eventsForSourceAndTime\": \"<string>\",\n    \"self\": \"<uri>\"\n  },\n  \"identity\": {\n    \"externalId\": \"<uri>\",\n    \"externalIdsOfGlobalId\": \"<uri>\",\n    \"self\": \"<uri>\"\n  },\n  \"inventory\": {\n    \"managedObjectsForFragmentType\": \"<string>\",\n    \"managedObjectsForType\": \"<string>\",\n    \"managedObjectsForListOfIds\": \"<string>\",\n    \"managedObjects\": {\n      \"references\": [\n        {\n          \"creationTime\": \"<dateTime>\",\n          \"id\": \"<string>\",\n          \"lastUpdated\": \"<dateTime>\",\n          \"name\": \"<string>\",\n          \"owner\": \"<string>\",\n          \"self\": \"<uri>\",\n          \"type\": \"<string>\",\n          \"childAdditions\": {\n            \"count\": \"<integer>\",\n            \"references\": [\n              {\n                \"managedObject\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"self\": \"<uri>\"\n                },\n                \"self\": \"<uri>\"\n              }\n            ],\n            \"self\": \"<string>\"\n          },\n          \"childAssets\": {\n            \"count\": \"<integer>\",\n            \"references\": [\n              {\n                \"managedObject\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"self\": \"<uri>\"\n                },\n                \"self\": \"<uri>\"\n              }\n            ],\n            \"self\": \"<string>\"\n          },\n          \"childDevices\": {\n            \"count\": \"<integer>\",\n            \"references\": [\n              {\n                \"managedObject\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"self\": \"<uri>\"\n                },\n                \"self\": \"<uri>\"\n              }\n            ],\n            \"self\": \"<string>\"\n          },\n          \"additionParents\": {\n            \"references\": [\n              {\n                \"managedObject\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"self\": \"<uri>\"\n                },\n                \"self\": \"<uri>\"\n              }\n            ],\n            \"self\": \"<string>\"\n          },\n          \"assetParents\": {\n            \"references\": [\n              {\n                \"managedObject\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"self\": \"<uri>\"\n                },\n                \"self\": \"<uri>\"\n              }\n            ],\n            \"self\": \"<string>\"\n          },\n          \"deviceParents\": {\n            \"references\": [\n              {\n                \"managedObject\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"self\": \"<uri>\"\n                },\n                \"self\": \"<uri>\"\n              }\n            ],\n            \"self\": \"<string>\"\n          },\n          \"c8y_IsDevice\": {},\n          \"c8y_LatestMeasurements\": {\n            \"tempor_3_\": {\n              \"in_b1_\": {\n                \"value\": \"<number>\",\n                \"unit\": \"<string>\",\n                \"time\": \"<dateTime>\"\n              }\n            }\n          },\n          \"c8y_IsDeviceGroup\": {},\n          \"c8y_DeviceTypes\": [\n            \"<string>\"\n          ],\n          \"c8y_SupportedOperations\": [\n            \"<string>\"\n          ],\n          \"in2a6\": {\n            \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n            \"x-additionalPropertiesName\": \"customFragments\"\n          },\n          \"voluptatee\": {\n            \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n            \"x-additionalPropertiesName\": \"customFragments\"\n          }\n        }\n      ],\n      \"self\": \"<uri>\"\n    },\n    \"self\": \"<uri>\"\n  },\n  \"measurement\": {\n    \"measurements\": {\n      \"measurements\": [\n        {\n          \"source\": {\n            \"id\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"type\": \"<string>\",\n          \"time\": \"<dateTime>\",\n          \"id\": \"<string>\",\n          \"self\": \"<uri>\",\n          \"c8y_Steam\": {\n            \"Temperature\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\"\n            }\n          }\n        }\n      ],\n      \"self\": \"<uri>\"\n    },\n    \"measurementsForSource\": \"<string>\",\n    \"measurementsForSourceAndType\": \"<string>\",\n    \"measurementsForType\": \"<string>\",\n    \"measurementsForValueFragmentType\": \"<string>\",\n    \"measurementsForDate\": \"<string>\",\n    \"measurementsForSourceAndDate\": \"<string>\",\n    \"measurementsForDateAndFragmentType\": \"<string>\",\n    \"measurementsForSourceAndValueFragmentTypeAndValueFragmentSeries\": \"<string>\",\n    \"self\": \"<uri>\"\n  },\n  \"tenant\": {\n    \"options\": {\n      \"self\": \"<uri>\",\n      \"options\": [\n        {\n          \"category\": \"<string>\",\n          \"key\": \"<string>\",\n          \"value\": \"<string>\",\n          \"self\": \"<uri>\"\n        }\n      ]\n    },\n    \"self\": \"<uri>\",\n    \"tenants\": {\n      \"self\": \"<uri>\",\n      \"tenants\": [\n        {\n          \"adminEmail\": \"<email>\",\n          \"adminName\": \"<string>\",\n          \"allowCreateTenants\": false,\n          \"applications\": {\n            \"references\": [\n              {\n                \"availability\": \"PRIVATE\",\n                \"contextPath\": \"<string>\",\n                \"description\": \"<string>\",\n                \"id\": \"<string>\",\n                \"key\": \"<string>\",\n                \"name\": \"<string>\",\n                \"owner\": {\n                  \"self\": \"<uri>\",\n                  \"tenant\": {\n                    \"id\": \"<string>\"\n                  }\n                },\n                \"self\": \"<uri>\",\n                \"type\": \"MICROSERVICE\",\n                \"manifest\": {\n                  \"apiVersion\": \"<string>\",\n                  \"billingMode\": \"RESOURCES\",\n                  \"contextPath\": \"<string>\",\n                  \"extensions\": [\n                    {\n                      \"path\": \"<string>\",\n                      \"type\": \"<string>\"\n                    }\n                  ],\n                  \"isolation\": \"MULTI_TENANT\",\n                  \"livenessProbe\": {\n                    \"failureThreshold\": \"<integer>\",\n                    \"periodSeconds\": \"<integer>\",\n                    \"timeoutSeconds\": \"<integer>\",\n                    \"successThreshold\": \"<integer>\",\n                    \"initialDelaySeconds\": \"<integer>\",\n                    \"httpGet\": {\n                      \"path\": \"<string>\",\n                      \"port\": \"<integer>\"\n                    }\n                  },\n                  \"provider\": {\n                    \"name\": \"<string>\"\n                  },\n                  \"readinessProbe\": {\n                    \"failureThreshold\": \"<integer>\",\n                    \"periodSeconds\": \"<integer>\",\n                    \"timeoutSeconds\": \"<integer>\",\n                    \"successThreshold\": \"<integer>\",\n                    \"initialDelaySeconds\": \"<integer>\",\n                    \"httpGet\": {\n                      \"path\": \"<string>\",\n                      \"port\": \"<integer>\"\n                    }\n                  },\n                  \"requestResources\": {\n                    \"cpu\": \"<string>\",\n                    \"memory\": \"<string>\"\n                  },\n                  \"resources\": {\n                    \"cpu\": \"<string>\",\n                    \"memory\": \"<string>\"\n                  },\n                  \"roles\": [\n                    \"<string>\"\n                  ],\n                  \"requiredRoles\": [\n                    \"<string>\"\n                  ],\n                  \"scale\": \"NONE\",\n                  \"settings\": [\n                    {\n                      \"key\": \"<string>\",\n                      \"valueSchema\": {\n                        \"type\": \"<string>\"\n                      },\n                      \"defaultValue\": \"<string>\",\n                      \"editable\": \"<boolean>\",\n                      \"inheritFromOwner\": \"<boolean>\"\n                    }\n                  ],\n                  \"settingsCategory\": \"<string>\",\n                  \"version\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\"\n                ],\n                \"breadcrumbs\": \"<boolean>\",\n                \"contentSecurityPolicy\": \"<string>\",\n                \"dynamicOptionsUrl\": \"<string>\",\n                \"globalTitle\": \"<string>\",\n                \"legacy\": \"<boolean>\",\n                \"rightDrawer\": \"<boolean>\",\n                \"upgrade\": \"<boolean>\",\n                \"activeVersionId\": \"<string>\",\n                \"resourcesUrl\": \"<string>\"\n              }\n            ],\n            \"self\": \"<uri>\"\n          },\n          \"company\": \"<string>\",\n          \"contactName\": \"<string>\",\n          \"contactPhone\": \"<string>\",\n          \"creationTime\": \"<dateTime>\",\n          \"customProperties\": {\n            \"language\": \"<string>\",\n            \"voluptate3c4\": {\n              \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n              \"x-additionalPropertiesName\": \"customProperties\"\n            }\n          },\n          \"domain\": \"<hostname>\",\n          \"id\": \"<string>\",\n          \"ownedApplications\": {\n            \"references\": [\n              {\n                \"availability\": \"PRIVATE\",\n                \"contextPath\": \"<string>\",\n                \"description\": \"<string>\",\n                \"id\": \"<string>\",\n                \"key\": \"<string>\",\n                \"name\": \"<string>\",\n                \"owner\": {\n                  \"self\": \"<uri>\",\n                  \"tenant\": {\n                    \"id\": \"<string>\"\n                  }\n                },\n                \"self\": \"<uri>\",\n                \"type\": \"HOSTED\",\n                \"manifest\": {\n                  \"apiVersion\": \"<string>\",\n                  \"billingMode\": \"RESOURCES\",\n                  \"contextPath\": \"<string>\",\n                  \"extensions\": [\n                    {\n                      \"path\": \"<string>\",\n                      \"type\": \"<string>\"\n                    }\n                  ],\n                  \"isolation\": \"MULTI_TENANT\",\n                  \"livenessProbe\": {\n                    \"failureThreshold\": \"<integer>\",\n                    \"periodSeconds\": \"<integer>\",\n                    \"timeoutSeconds\": \"<integer>\",\n                    \"successThreshold\": \"<integer>\",\n                    \"initialDelaySeconds\": \"<integer>\",\n                    \"httpGet\": {\n                      \"path\": \"<string>\",\n                      \"port\": \"<integer>\"\n                    }\n                  },\n                  \"provider\": {\n                    \"name\": \"<string>\"\n                  },\n                  \"readinessProbe\": {\n                    \"failureThreshold\": \"<integer>\",\n                    \"periodSeconds\": \"<integer>\",\n                    \"timeoutSeconds\": \"<integer>\",\n                    \"successThreshold\": \"<integer>\",\n                    \"initialDelaySeconds\": \"<integer>\",\n                    \"httpGet\": {\n                      \"path\": \"<string>\",\n                      \"port\": \"<integer>\"\n                    }\n                  },\n                  \"requestResources\": {\n                    \"cpu\": \"<string>\",\n                    \"memory\": \"<string>\"\n                  },\n                  \"resources\": {\n                    \"cpu\": \"<string>\",\n                    \"memory\": \"<string>\"\n                  },\n                  \"roles\": [\n                    \"<string>\"\n                  ],\n                  \"requiredRoles\": [\n                    \"<string>\"\n                  ],\n                  \"scale\": \"NONE\",\n                  \"settings\": [\n                    {\n                      \"key\": \"<string>\",\n                      \"valueSchema\": {\n                        \"type\": \"<string>\"\n                      },\n                      \"defaultValue\": \"<string>\",\n                      \"editable\": \"<boolean>\",\n                      \"inheritFromOwner\": \"<boolean>\"\n                    }\n                  ],\n                  \"settingsCategory\": \"<string>\",\n                  \"version\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\"\n                ],\n                \"breadcrumbs\": \"<boolean>\",\n                \"contentSecurityPolicy\": \"<string>\",\n                \"dynamicOptionsUrl\": \"<string>\",\n                \"globalTitle\": \"<string>\",\n                \"legacy\": \"<boolean>\",\n                \"rightDrawer\": \"<boolean>\",\n                \"upgrade\": \"<boolean>\",\n                \"activeVersionId\": \"<string>\",\n                \"resourcesUrl\": \"<string>\"\n              }\n            ],\n            \"self\": \"<uri>\"\n          },\n          \"parent\": \"<string>\",\n          \"self\": \"<uri>\",\n          \"status\": \"ACTIVE\"\n        }\n      ]\n    },\n    \"tenantApplications\": \"<string>\",\n    \"tenantApplicationForId\": \"<string>\",\n    \"tenantForId\": \"<string>\",\n    \"tenantOptionsForCategory\": \"<string>\",\n    \"tenantOptionForCategoryAndKey\": \"<string>\",\n    \"tenantSystemOptions\": \"<string>\",\n    \"tenantSystemOptionsForCategoryAndKey\": \"<string>\"\n  },\n  \"user\": {\n    \"self\": \"<uri>\",\n    \"users\": \"<string>\",\n    \"userByName\": \"<string>\",\n    \"currentUser\": \"<string>\",\n    \"groups\": \"<string>\",\n    \"groupByName\": \"<string>\",\n    \"roles\": \"<string>\"\n  }\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "alarm",
      "item": [
        {
          "name": "alarms",
          "item": [
            {
              "name": "{id}",
              "item": [
                {
                  "name": "Retrieve a specific alarm",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.alarm+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/alarm/alarms/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "alarm",
                        "alarms",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the alarm."
                        }
                      ]
                    },
                    "description": "Retrieve a specific alarm by a given ID.\n\n<section><h5>Required roles</h5>\nROLE_ALARM_READ <b>OR</b> owner of the source <b>OR</b> ALARM_READ permission on the source\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the alarm is sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.alarm+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/alarm/alarms/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "alarm",
                            "alarms",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.alarm+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"count\": \"<integer>\",\n  \"creationTime\": \"<dateTime>\",\n  \"firstOccurrenceTime\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"lastUpdated\": \"<dateTime>\",\n  \"self\": \"<uri>\",\n  \"severity\": \"MINOR\",\n  \"source\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"self\": \"<uri>\"\n  },\n  \"status\": \"CLEARED\",\n  \"text\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"type\": \"<string>\"\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/alarm/alarms/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "alarm",
                            "alarms",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not authorized to perform this operation.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/alarm/alarms/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "alarm",
                            "alarms",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Alarm not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/alarm/alarms/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "alarm",
                            "alarms",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Update a specific alarm",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.alarm+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.alarm+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"severity\": \"MAJOR\",\n  \"status\": \"CLEARED\",\n  \"text\": \"<string>\",\n  \"utbf5\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  },\n  \"Loremdf\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/alarm/alarms/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "alarm",
                        "alarms",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the alarm."
                        }
                      ]
                    },
                    "description": "Update a specific alarm by a given ID.\nOnly text, status, severity and custom properties can be modified. A request will be rejected when non-modifiable properties are provided in the request body.\n\n> **&#9432; Info:** Changes to alarms will generate a new audit record. The audit record will include the username and application that triggered the update, if applicable. If the update operation doesn’t change anything (that is, the request body contains data that is identical to the already present in the database), there will be no audit record added and no notifications will be sent.\n\n<section><h5>Required roles</h5>\nROLE_ALARM_ADMIN <b>OR</b> owner of the source <b>OR</b> ALARM_ADMIN permission on the source\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "An alarm was updated.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.alarm+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.alarm+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"severity\": \"MAJOR\",\n  \"status\": \"CLEARED\",\n  \"text\": \"<string>\",\n  \"utbf5\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  },\n  \"Loremdf\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/alarm/alarms/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "alarm",
                            "alarms",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.alarm+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"count\": \"<integer>\",\n  \"creationTime\": \"<dateTime>\",\n  \"firstOccurrenceTime\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"lastUpdated\": \"<dateTime>\",\n  \"self\": \"<uri>\",\n  \"severity\": \"MINOR\",\n  \"source\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"self\": \"<uri>\"\n  },\n  \"status\": \"CLEARED\",\n  \"text\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"type\": \"<string>\"\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.alarm+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"severity\": \"MAJOR\",\n  \"status\": \"CLEARED\",\n  \"text\": \"<string>\",\n  \"utbf5\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  },\n  \"Loremdf\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/alarm/alarms/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "alarm",
                            "alarms",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not authorized to perform this operation.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.alarm+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"severity\": \"MAJOR\",\n  \"status\": \"CLEARED\",\n  \"text\": \"<string>\",\n  \"utbf5\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  },\n  \"Loremdf\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/alarm/alarms/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "alarm",
                            "alarms",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Alarm not found.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.alarm+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"severity\": \"MAJOR\",\n  \"status\": \"CLEARED\",\n  \"text\": \"<string>\",\n  \"utbf5\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  },\n  \"Loremdf\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/alarm/alarms/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "alarm",
                            "alarms",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unprocessable Entity – invalid payload.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.alarm+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"severity\": \"MAJOR\",\n  \"status\": \"CLEARED\",\n  \"text\": \"<string>\",\n  \"utbf5\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  },\n  \"Loremdf\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/alarm/alarms/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "alarm",
                            "alarms",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                      "code": 422,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            },
            {
              "name": "count",
              "item": [
                {
                  "name": "Retrieve the total number of alarms",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "text/plain, application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/alarm/alarms/count?dateFrom=<dateTime>&dateTo=<dateTime>&resolved=false&severity=MAJOR&source=<string>&status=CLEARED&type=<string>,<string>&withSourceAssets=false&withSourceDevices=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "alarm",
                        "alarms",
                        "count"
                      ],
                      "query": [
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the alarm occurrence."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the alarm occurrence."
                        },
                        {
                          "key": "resolved",
                          "value": "false",
                          "description": "When set to `true` only alarms with status CLEARED will be fetched, whereas `false` will fetch all alarms with status ACTIVE or ACKNOWLEDGED. Takes precedence over the `status` parameter."
                        },
                        {
                          "key": "severity",
                          "value": "MAJOR",
                          "description": "The severity of the alarm to search for.\n>**&#9432; Info:** If you query for multiple alarm severities at once, comma-separate the values.\n"
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the alarm is associated."
                        },
                        {
                          "key": "status",
                          "value": "CLEARED",
                          "description": "The status of the alarm to search for. Should not be used when `resolved` parameter is provided.\n>**&#9432; Info:** If you query for multiple alarm statuses at once, comma-separate the values.\n"
                        },
                        {
                          "key": "type",
                          "value": "<string>,<string>",
                          "description": "The types of alarm to search for.\n>**&#9432; Info:** If you query for multiple alarm types at once, comma-separate the values. Space characters in alarm types must be escaped.\n"
                        },
                        {
                          "key": "withSourceAssets",
                          "value": "false",
                          "description": "When set to `true` also alarms for related source assets will be included in the request. When this parameter is provided a `source` must be specified."
                        },
                        {
                          "key": "withSourceDevices",
                          "value": "false",
                          "description": "When set to `true` also alarms for related source devices will be included in the request. When this parameter is provided a `source` must be specified."
                        }
                      ]
                    },
                    "description": "Count the total number of active alarms on your tenant.\n\n<section><h5>Required roles</h5>\nThe role ROLE_ALARM_READ is not required, but if a user has this role, all the alarms on the tenant are counted. Otherwise, inventory role permissions are used to count the alarms and the limit is 100.\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the number of active alarms is sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "text/plain, application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/alarm/alarms/count?dateFrom=<dateTime>&dateTo=<dateTime>&resolved=false&severity=MAJOR&source=<string>&status=CLEARED&type=<string>,<string>&withSourceAssets=false&withSourceDevices=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "alarm",
                            "alarms",
                            "count"
                          ],
                          "query": [
                            {
                              "key": "dateFrom",
                              "value": "<dateTime>",
                              "description": "Start date or date and time of the alarm occurrence."
                            },
                            {
                              "key": "dateTo",
                              "value": "<dateTime>",
                              "description": "End date or date and time of the alarm occurrence."
                            },
                            {
                              "key": "resolved",
                              "value": "false",
                              "description": "When set to `true` only alarms with status CLEARED will be fetched, whereas `false` will fetch all alarms with status ACTIVE or ACKNOWLEDGED. Takes precedence over the `status` parameter."
                            },
                            {
                              "key": "severity",
                              "value": "MAJOR",
                              "description": "The severity of the alarm to search for.\n>**&#9432; Info:** If you query for multiple alarm severities at once, comma-separate the values.\n"
                            },
                            {
                              "key": "source",
                              "value": "<string>",
                              "description": "The managed object ID to which the alarm is associated."
                            },
                            {
                              "key": "status",
                              "value": "CLEARED",
                              "description": "The status of the alarm to search for. Should not be used when `resolved` parameter is provided.\n>**&#9432; Info:** If you query for multiple alarm statuses at once, comma-separate the values.\n"
                            },
                            {
                              "key": "type",
                              "value": "<string>,<string>",
                              "description": "The types of alarm to search for.\n>**&#9432; Info:** If you query for multiple alarm types at once, comma-separate the values. Space characters in alarm types must be escaped.\n"
                            },
                            {
                              "key": "withSourceAssets",
                              "value": "false",
                              "description": "When set to `true` also alarms for related source assets will be included in the request. When this parameter is provided a `source` must be specified."
                            },
                            {
                              "key": "withSourceDevices",
                              "value": "false",
                              "description": "When set to `true` also alarms for related source devices will be included in the request. When this parameter is provided a `source` must be specified."
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain, application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "<integer>"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/alarm/alarms/count?dateFrom=<dateTime>&dateTo=<dateTime>&resolved=false&severity=MAJOR&source=<string>&status=CLEARED&type=<string>,<string>&withSourceAssets=false&withSourceDevices=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "alarm",
                            "alarms",
                            "count"
                          ],
                          "query": [
                            {
                              "key": "dateFrom",
                              "value": "<dateTime>",
                              "description": "Start date or date and time of the alarm occurrence."
                            },
                            {
                              "key": "dateTo",
                              "value": "<dateTime>",
                              "description": "End date or date and time of the alarm occurrence."
                            },
                            {
                              "key": "resolved",
                              "value": "false",
                              "description": "When set to `true` only alarms with status CLEARED will be fetched, whereas `false` will fetch all alarms with status ACTIVE or ACKNOWLEDGED. Takes precedence over the `status` parameter."
                            },
                            {
                              "key": "severity",
                              "value": "MAJOR",
                              "description": "The severity of the alarm to search for.\n>**&#9432; Info:** If you query for multiple alarm severities at once, comma-separate the values.\n"
                            },
                            {
                              "key": "source",
                              "value": "<string>",
                              "description": "The managed object ID to which the alarm is associated."
                            },
                            {
                              "key": "status",
                              "value": "CLEARED",
                              "description": "The status of the alarm to search for. Should not be used when `resolved` parameter is provided.\n>**&#9432; Info:** If you query for multiple alarm statuses at once, comma-separate the values.\n"
                            },
                            {
                              "key": "type",
                              "value": "<string>,<string>",
                              "description": "The types of alarm to search for.\n>**&#9432; Info:** If you query for multiple alarm types at once, comma-separate the values. Space characters in alarm types must be escaped.\n"
                            },
                            {
                              "key": "withSourceAssets",
                              "value": "false",
                              "description": "When set to `true` also alarms for related source assets will be included in the request. When this parameter is provided a `source` must be specified."
                            },
                            {
                              "key": "withSourceDevices",
                              "value": "false",
                              "description": "When set to `true` also alarms for related source devices will be included in the request. When this parameter is provided a `source` must be specified."
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Create an alarm",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Cumulocity-Processing-Mode",
                    "value": "PERSISTENT",
                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.com.nsn.cumulocity.alarm+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.alarm+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"source\": {\n    \"id\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"text\": \"<string>\",\n  \"severity\": \"WARNING\",\n  \"time\": \"<dateTime>\",\n  \"status\": \"CLEARED\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/alarm/alarms",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "alarm",
                    "alarms"
                  ]
                },
                "description": "An alarm must be associated with a source (managed object) identified by ID.<br>\nIn general, each alarm may consist of:\n\n*   A status showing whether the alarm is ACTIVE, ACKNOWLEDGED or CLEARED.\n*   A time stamp to indicate when the alarm was last updated.\n*   The severity of the alarm: CRITICAL, MAJOR, MINOR or WARNING.\n*   A history of changes to the event in form of audit logs.\n\n### Alarm suppression\n\nIf the source device is in maintenance mode, the alarm is not created and not reported to the Cumulocity event processing engine. When sending a POST request to create a new alarm and if the source device is in maintenance mode, the self link of the alarm will be:\n\n```json\n\"self\": \"https://<TENANT_DOMAIN>/alarm/alarms/null\"\n```\n\n### Alarm de-duplication\n\nIf an ACTIVE or ACKNOWLEDGED alarm with the same source and type exists, no new alarm is created.\nInstead, the existing alarm is updated by incrementing the `count` property; the `time` property is also updated.\nAny other changes are ignored, and the alarm history is not updated. Alarms with status CLEARED are not de-duplicated.\nThe first occurrence of the alarm is recorded in the `firstOccurrenceTime` property.\n\n<section><h5>Required roles</h5>\nROLE_ALARM_ADMIN <b>OR</b> owner of the source <b>OR</b> ALARM_ADMIN permission on the source\n</section>\n"
              },
              "response": [
                {
                  "name": "An alarm was created.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.alarm+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.alarm+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"source\": {\n    \"id\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"text\": \"<string>\",\n  \"severity\": \"WARNING\",\n  \"time\": \"<dateTime>\",\n  \"status\": \"CLEARED\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/alarm/alarms",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "alarm",
                        "alarms"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.alarm+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"count\": \"<integer>\",\n  \"creationTime\": \"<dateTime>\",\n  \"firstOccurrenceTime\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"lastUpdated\": \"<dateTime>\",\n  \"self\": \"<uri>\",\n  \"severity\": \"MINOR\",\n  \"source\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"self\": \"<uri>\"\n  },\n  \"status\": \"CLEARED\",\n  \"text\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"type\": \"<string>\"\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.alarm+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"source\": {\n    \"id\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"text\": \"<string>\",\n  \"severity\": \"WARNING\",\n  \"time\": \"<dateTime>\",\n  \"status\": \"CLEARED\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/alarm/alarms",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "alarm",
                        "alarms"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Not authorized to perform this operation.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.alarm+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"source\": {\n    \"id\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"text\": \"<string>\",\n  \"severity\": \"WARNING\",\n  \"time\": \"<dateTime>\",\n  \"status\": \"CLEARED\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/alarm/alarms",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "alarm",
                        "alarms"
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Unprocessable Entity – invalid payload.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.alarm+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"source\": {\n    \"id\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"text\": \"<string>\",\n  \"severity\": \"WARNING\",\n  \"time\": \"<dateTime>\",\n  \"status\": \"CLEARED\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/alarm/alarms",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "alarm",
                        "alarms"
                      ]
                    }
                  },
                  "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                  "code": 422,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Retrieve all alarms",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.alarmcollection+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/alarm/alarms?createdFrom=<dateTime>&createdTo=<dateTime>&currentPage=1&dateFrom=<dateTime>&dateTo=<dateTime>&lastUpdatedFrom=<dateTime>&lastUpdatedTo=<dateTime>&pageSize=5&resolved=false&severity=MAJOR&source=<string>&status=CLEARED&type=<string>,<string>&withSourceAssets=false&withSourceDevices=false&withTotalElements=false&withTotalPages=false",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "alarm",
                    "alarms"
                  ],
                  "query": [
                    {
                      "key": "createdFrom",
                      "value": "<dateTime>",
                      "description": "Start date or date and time of the alarm creation."
                    },
                    {
                      "key": "createdTo",
                      "value": "<dateTime>",
                      "description": "End date or date and time of the alarm creation."
                    },
                    {
                      "key": "currentPage",
                      "value": "1",
                      "description": "The current page of the paginated results."
                    },
                    {
                      "key": "dateFrom",
                      "value": "<dateTime>",
                      "description": "Start date or date and time of the alarm occurrence."
                    },
                    {
                      "key": "dateTo",
                      "value": "<dateTime>",
                      "description": "End date or date and time of the alarm occurrence."
                    },
                    {
                      "key": "lastUpdatedFrom",
                      "value": "<dateTime>",
                      "description": "Start date or date and time of the last update made."
                    },
                    {
                      "key": "lastUpdatedTo",
                      "value": "<dateTime>",
                      "description": "End date or date and time of the last update made."
                    },
                    {
                      "key": "pageSize",
                      "value": "5",
                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                    },
                    {
                      "key": "resolved",
                      "value": "false",
                      "description": "When set to `true` only alarms with status CLEARED will be fetched, whereas `false` will fetch all alarms with status ACTIVE or ACKNOWLEDGED. Takes precedence over the `status` parameter."
                    },
                    {
                      "key": "severity",
                      "value": "MAJOR",
                      "description": "The severity of the alarm to search for.\n>**&#9432; Info:** If you query for multiple alarm severities at once, comma-separate the values.\n"
                    },
                    {
                      "key": "source",
                      "value": "<string>",
                      "description": "The managed object ID to which the alarm is associated."
                    },
                    {
                      "key": "status",
                      "value": "CLEARED",
                      "description": "The status of the alarm to search for. Should not be used when `resolved` parameter is provided.\n>**&#9432; Info:** If you query for multiple alarm statuses at once, comma-separate the values.\n"
                    },
                    {
                      "key": "type",
                      "value": "<string>,<string>",
                      "description": "The types of alarm to search for.\n>**&#9432; Info:** If you query for multiple alarm types at once, comma-separate the values. Space characters in alarm types must be escaped.\n"
                    },
                    {
                      "key": "withSourceAssets",
                      "value": "false",
                      "description": "When set to `true` also alarms for related source assets will be included in the request. When this parameter is provided a `source` must be specified."
                    },
                    {
                      "key": "withSourceDevices",
                      "value": "false",
                      "description": "When set to `true` also alarms for related source devices will be included in the request. When this parameter is provided a `source` must be specified."
                    },
                    {
                      "key": "withTotalElements",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                    },
                    {
                      "key": "withTotalPages",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                    }
                  ]
                },
                "description": "Retrieve all alarms on your tenant, or a specific subset based on queries. The results are sorted by the newest alarms first.\n\n#### Query parameters\n\nThe query parameter `withTotalPages` only works when the user has the ROLE_ALARM_READ role, otherwise it is ignored.\n\n<section><h5>Required roles</h5>\nThe role ROLE_ALARM_READ is not required, but if a user has this role, all the alarms on the tenant are returned. If a user has access to alarms through inventory roles, only those alarms are returned.\n</section>\n"
              },
              "response": [
                {
                  "name": "The request has succeeded and all alarms are sent in the response.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.alarmcollection+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/alarm/alarms?createdFrom=<dateTime>&createdTo=<dateTime>&currentPage=1&dateFrom=<dateTime>&dateTo=<dateTime>&lastUpdatedFrom=<dateTime>&lastUpdatedTo=<dateTime>&pageSize=5&resolved=false&severity=MAJOR&source=<string>&status=CLEARED&type=<string>,<string>&withSourceAssets=false&withSourceDevices=false&withTotalElements=false&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "alarm",
                        "alarms"
                      ],
                      "query": [
                        {
                          "key": "createdFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the alarm creation."
                        },
                        {
                          "key": "createdTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the alarm creation."
                        },
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the alarm occurrence."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the alarm occurrence."
                        },
                        {
                          "key": "lastUpdatedFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the last update made."
                        },
                        {
                          "key": "lastUpdatedTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the last update made."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "resolved",
                          "value": "false",
                          "description": "When set to `true` only alarms with status CLEARED will be fetched, whereas `false` will fetch all alarms with status ACTIVE or ACKNOWLEDGED. Takes precedence over the `status` parameter."
                        },
                        {
                          "key": "severity",
                          "value": "MAJOR",
                          "description": "The severity of the alarm to search for.\n>**&#9432; Info:** If you query for multiple alarm severities at once, comma-separate the values.\n"
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the alarm is associated."
                        },
                        {
                          "key": "status",
                          "value": "CLEARED",
                          "description": "The status of the alarm to search for. Should not be used when `resolved` parameter is provided.\n>**&#9432; Info:** If you query for multiple alarm statuses at once, comma-separate the values.\n"
                        },
                        {
                          "key": "type",
                          "value": "<string>,<string>",
                          "description": "The types of alarm to search for.\n>**&#9432; Info:** If you query for multiple alarm types at once, comma-separate the values. Space characters in alarm types must be escaped.\n"
                        },
                        {
                          "key": "withSourceAssets",
                          "value": "false",
                          "description": "When set to `true` also alarms for related source assets will be included in the request. When this parameter is provided a `source` must be specified."
                        },
                        {
                          "key": "withSourceDevices",
                          "value": "false",
                          "description": "When set to `true` also alarms for related source devices will be included in the request. When this parameter is provided a `source` must be specified."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.alarmcollection+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"alarms\": [\n    {\n      \"count\": \"<integer>\",\n      \"creationTime\": \"<dateTime>\",\n      \"firstOccurrenceTime\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"lastUpdated\": \"<dateTime>\",\n      \"self\": \"<uri>\",\n      \"severity\": \"CRITICAL\",\n      \"source\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"self\": \"<uri>\"\n      },\n      \"status\": \"ACKNOWLEDGED\",\n      \"text\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"count\": \"<integer>\",\n      \"creationTime\": \"<dateTime>\",\n      \"firstOccurrenceTime\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"lastUpdated\": \"<dateTime>\",\n      \"self\": \"<uri>\",\n      \"severity\": \"MAJOR\",\n      \"source\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"self\": \"<uri>\"\n      },\n      \"status\": \"ACKNOWLEDGED\",\n      \"text\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  }\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/alarm/alarms?createdFrom=<dateTime>&createdTo=<dateTime>&currentPage=1&dateFrom=<dateTime>&dateTo=<dateTime>&lastUpdatedFrom=<dateTime>&lastUpdatedTo=<dateTime>&pageSize=5&resolved=false&severity=MAJOR&source=<string>&status=CLEARED&type=<string>,<string>&withSourceAssets=false&withSourceDevices=false&withTotalElements=false&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "alarm",
                        "alarms"
                      ],
                      "query": [
                        {
                          "key": "createdFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the alarm creation."
                        },
                        {
                          "key": "createdTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the alarm creation."
                        },
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the alarm occurrence."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the alarm occurrence."
                        },
                        {
                          "key": "lastUpdatedFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the last update made."
                        },
                        {
                          "key": "lastUpdatedTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the last update made."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "resolved",
                          "value": "false",
                          "description": "When set to `true` only alarms with status CLEARED will be fetched, whereas `false` will fetch all alarms with status ACTIVE or ACKNOWLEDGED. Takes precedence over the `status` parameter."
                        },
                        {
                          "key": "severity",
                          "value": "MAJOR",
                          "description": "The severity of the alarm to search for.\n>**&#9432; Info:** If you query for multiple alarm severities at once, comma-separate the values.\n"
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the alarm is associated."
                        },
                        {
                          "key": "status",
                          "value": "CLEARED",
                          "description": "The status of the alarm to search for. Should not be used when `resolved` parameter is provided.\n>**&#9432; Info:** If you query for multiple alarm statuses at once, comma-separate the values.\n"
                        },
                        {
                          "key": "type",
                          "value": "<string>,<string>",
                          "description": "The types of alarm to search for.\n>**&#9432; Info:** If you query for multiple alarm types at once, comma-separate the values. Space characters in alarm types must be escaped.\n"
                        },
                        {
                          "key": "withSourceAssets",
                          "value": "false",
                          "description": "When set to `true` also alarms for related source assets will be included in the request. When this parameter is provided a `source` must be specified."
                        },
                        {
                          "key": "withSourceDevices",
                          "value": "false",
                          "description": "When set to `true` also alarms for related source devices will be included in the request. When this parameter is provided a `source` must be specified."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Update alarm collections",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "X-Cumulocity-Processing-Mode",
                    "value": "PERSISTENT",
                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.com.nsn.cumulocity.alarm+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"status\": \"ACTIVE\",\n  \"consectetur7f\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  },\n  \"Lorem_1d9\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  }\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/alarm/alarms?createdFrom=<dateTime>&createdTo=<dateTime>&dateFrom=<dateTime>&dateTo=<dateTime>&resolved=false&severity=MAJOR&source=<string>&status=CLEARED&withSourceAssets=false&withSourceDevices=false",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "alarm",
                    "alarms"
                  ],
                  "query": [
                    {
                      "key": "createdFrom",
                      "value": "<dateTime>",
                      "description": "Start date or date and time of the alarm creation."
                    },
                    {
                      "key": "createdTo",
                      "value": "<dateTime>",
                      "description": "End date or date and time of the alarm creation."
                    },
                    {
                      "key": "dateFrom",
                      "value": "<dateTime>",
                      "description": "Start date or date and time of the alarm occurrence."
                    },
                    {
                      "key": "dateTo",
                      "value": "<dateTime>",
                      "description": "End date or date and time of the alarm occurrence."
                    },
                    {
                      "key": "resolved",
                      "value": "false",
                      "description": "When set to `true` only alarms with status CLEARED will be fetched, whereas `false` will fetch all alarms with status ACTIVE or ACKNOWLEDGED. Takes precedence over the `status` parameter."
                    },
                    {
                      "key": "severity",
                      "value": "MAJOR",
                      "description": "The severity of the alarm to search for.\n>**&#9432; Info:** If you query for multiple alarm severities at once, comma-separate the values.\n"
                    },
                    {
                      "key": "source",
                      "value": "<string>",
                      "description": "The managed object ID to which the alarm is associated."
                    },
                    {
                      "key": "status",
                      "value": "CLEARED",
                      "description": "The status of the alarm to search for. Should not be used when `resolved` parameter is provided.\n>**&#9432; Info:** If you query for multiple alarm statuses at once, comma-separate the values.\n"
                    },
                    {
                      "key": "withSourceAssets",
                      "value": "false",
                      "description": "When set to `true` also alarms for related source assets will be included in the request. When this parameter is provided a `source` must be specified."
                    },
                    {
                      "key": "withSourceDevices",
                      "value": "false",
                      "description": "When set to `true` also alarms for related source devices will be included in the request. When this parameter is provided a `source` must be specified."
                    }
                  ]
                },
                "description": "Update alarm collections specified by query parameters. At least one query parameter is required to avoid accidentally updating all existing alarms.<br>\nCurrently, only the status of alarms can be modified.\n\n> **&#9432; Info:** Since this operation can take considerable time, the request returns after maximum 0.5 seconds of processing, and the update operation continues as a background process in the platform.\n\n<section><h5>Required roles</h5>\nROLE_ALARM_ADMIN\n</section>\n"
              },
              "response": [
                {
                  "name": "An alarm collection was updated.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.alarm+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"status\": \"ACTIVE\",\n  \"consectetur7f\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  },\n  \"Lorem_1d9\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/alarm/alarms?createdFrom=<dateTime>&createdTo=<dateTime>&dateFrom=<dateTime>&dateTo=<dateTime>&resolved=false&severity=MAJOR&source=<string>&status=CLEARED&withSourceAssets=false&withSourceDevices=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "alarm",
                        "alarms"
                      ],
                      "query": [
                        {
                          "key": "createdFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the alarm creation."
                        },
                        {
                          "key": "createdTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the alarm creation."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the alarm occurrence."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the alarm occurrence."
                        },
                        {
                          "key": "resolved",
                          "value": "false",
                          "description": "When set to `true` only alarms with status CLEARED will be fetched, whereas `false` will fetch all alarms with status ACTIVE or ACKNOWLEDGED. Takes precedence over the `status` parameter."
                        },
                        {
                          "key": "severity",
                          "value": "MAJOR",
                          "description": "The severity of the alarm to search for.\n>**&#9432; Info:** If you query for multiple alarm severities at once, comma-separate the values.\n"
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the alarm is associated."
                        },
                        {
                          "key": "status",
                          "value": "CLEARED",
                          "description": "The status of the alarm to search for. Should not be used when `resolved` parameter is provided.\n>**&#9432; Info:** If you query for multiple alarm statuses at once, comma-separate the values.\n"
                        },
                        {
                          "key": "withSourceAssets",
                          "value": "false",
                          "description": "When set to `true` also alarms for related source assets will be included in the request. When this parameter is provided a `source` must be specified."
                        },
                        {
                          "key": "withSourceDevices",
                          "value": "false",
                          "description": "When set to `true` also alarms for related source devices will be included in the request. When this parameter is provided a `source` must be specified."
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "An alarm collection is being updated in background.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.alarm+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"status\": \"ACTIVE\",\n  \"consectetur7f\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  },\n  \"Lorem_1d9\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/alarm/alarms?createdFrom=<dateTime>&createdTo=<dateTime>&dateFrom=<dateTime>&dateTo=<dateTime>&resolved=false&severity=MAJOR&source=<string>&status=CLEARED&withSourceAssets=false&withSourceDevices=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "alarm",
                        "alarms"
                      ],
                      "query": [
                        {
                          "key": "createdFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the alarm creation."
                        },
                        {
                          "key": "createdTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the alarm creation."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the alarm occurrence."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the alarm occurrence."
                        },
                        {
                          "key": "resolved",
                          "value": "false",
                          "description": "When set to `true` only alarms with status CLEARED will be fetched, whereas `false` will fetch all alarms with status ACTIVE or ACKNOWLEDGED. Takes precedence over the `status` parameter."
                        },
                        {
                          "key": "severity",
                          "value": "MAJOR",
                          "description": "The severity of the alarm to search for.\n>**&#9432; Info:** If you query for multiple alarm severities at once, comma-separate the values.\n"
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the alarm is associated."
                        },
                        {
                          "key": "status",
                          "value": "CLEARED",
                          "description": "The status of the alarm to search for. Should not be used when `resolved` parameter is provided.\n>**&#9432; Info:** If you query for multiple alarm statuses at once, comma-separate the values.\n"
                        },
                        {
                          "key": "withSourceAssets",
                          "value": "false",
                          "description": "When set to `true` also alarms for related source assets will be included in the request. When this parameter is provided a `source` must be specified."
                        },
                        {
                          "key": "withSourceDevices",
                          "value": "false",
                          "description": "When set to `true` also alarms for related source devices will be included in the request. When this parameter is provided a `source` must be specified."
                        }
                      ]
                    }
                  },
                  "status": "Accepted",
                  "code": 202,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.alarm+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"status\": \"ACTIVE\",\n  \"consectetur7f\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  },\n  \"Lorem_1d9\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/alarm/alarms?createdFrom=<dateTime>&createdTo=<dateTime>&dateFrom=<dateTime>&dateTo=<dateTime>&resolved=false&severity=MAJOR&source=<string>&status=CLEARED&withSourceAssets=false&withSourceDevices=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "alarm",
                        "alarms"
                      ],
                      "query": [
                        {
                          "key": "createdFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the alarm creation."
                        },
                        {
                          "key": "createdTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the alarm creation."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the alarm occurrence."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the alarm occurrence."
                        },
                        {
                          "key": "resolved",
                          "value": "false",
                          "description": "When set to `true` only alarms with status CLEARED will be fetched, whereas `false` will fetch all alarms with status ACTIVE or ACKNOWLEDGED. Takes precedence over the `status` parameter."
                        },
                        {
                          "key": "severity",
                          "value": "MAJOR",
                          "description": "The severity of the alarm to search for.\n>**&#9432; Info:** If you query for multiple alarm severities at once, comma-separate the values.\n"
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the alarm is associated."
                        },
                        {
                          "key": "status",
                          "value": "CLEARED",
                          "description": "The status of the alarm to search for. Should not be used when `resolved` parameter is provided.\n>**&#9432; Info:** If you query for multiple alarm statuses at once, comma-separate the values.\n"
                        },
                        {
                          "key": "withSourceAssets",
                          "value": "false",
                          "description": "When set to `true` also alarms for related source assets will be included in the request. When this parameter is provided a `source` must be specified."
                        },
                        {
                          "key": "withSourceDevices",
                          "value": "false",
                          "description": "When set to `true` also alarms for related source devices will be included in the request. When this parameter is provided a `source` must be specified."
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Not authorized to perform this operation.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.alarm+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"status\": \"ACTIVE\",\n  \"consectetur7f\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  },\n  \"Lorem_1d9\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/alarm/alarms?createdFrom=<dateTime>&createdTo=<dateTime>&dateFrom=<dateTime>&dateTo=<dateTime>&resolved=false&severity=MAJOR&source=<string>&status=CLEARED&withSourceAssets=false&withSourceDevices=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "alarm",
                        "alarms"
                      ],
                      "query": [
                        {
                          "key": "createdFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the alarm creation."
                        },
                        {
                          "key": "createdTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the alarm creation."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the alarm occurrence."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the alarm occurrence."
                        },
                        {
                          "key": "resolved",
                          "value": "false",
                          "description": "When set to `true` only alarms with status CLEARED will be fetched, whereas `false` will fetch all alarms with status ACTIVE or ACKNOWLEDGED. Takes precedence over the `status` parameter."
                        },
                        {
                          "key": "severity",
                          "value": "MAJOR",
                          "description": "The severity of the alarm to search for.\n>**&#9432; Info:** If you query for multiple alarm severities at once, comma-separate the values.\n"
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the alarm is associated."
                        },
                        {
                          "key": "status",
                          "value": "CLEARED",
                          "description": "The status of the alarm to search for. Should not be used when `resolved` parameter is provided.\n>**&#9432; Info:** If you query for multiple alarm statuses at once, comma-separate the values.\n"
                        },
                        {
                          "key": "withSourceAssets",
                          "value": "false",
                          "description": "When set to `true` also alarms for related source assets will be included in the request. When this parameter is provided a `source` must be specified."
                        },
                        {
                          "key": "withSourceDevices",
                          "value": "false",
                          "description": "When set to `true` also alarms for related source devices will be included in the request. When this parameter is provided a `source` must be specified."
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Unprocessable Entity – invalid payload.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.alarm+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"status\": \"ACTIVE\",\n  \"consectetur7f\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  },\n  \"Lorem_1d9\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/alarm/alarms?createdFrom=<dateTime>&createdTo=<dateTime>&dateFrom=<dateTime>&dateTo=<dateTime>&resolved=false&severity=MAJOR&source=<string>&status=CLEARED&withSourceAssets=false&withSourceDevices=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "alarm",
                        "alarms"
                      ],
                      "query": [
                        {
                          "key": "createdFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the alarm creation."
                        },
                        {
                          "key": "createdTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the alarm creation."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the alarm occurrence."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the alarm occurrence."
                        },
                        {
                          "key": "resolved",
                          "value": "false",
                          "description": "When set to `true` only alarms with status CLEARED will be fetched, whereas `false` will fetch all alarms with status ACTIVE or ACKNOWLEDGED. Takes precedence over the `status` parameter."
                        },
                        {
                          "key": "severity",
                          "value": "MAJOR",
                          "description": "The severity of the alarm to search for.\n>**&#9432; Info:** If you query for multiple alarm severities at once, comma-separate the values.\n"
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the alarm is associated."
                        },
                        {
                          "key": "status",
                          "value": "CLEARED",
                          "description": "The status of the alarm to search for. Should not be used when `resolved` parameter is provided.\n>**&#9432; Info:** If you query for multiple alarm statuses at once, comma-separate the values.\n"
                        },
                        {
                          "key": "withSourceAssets",
                          "value": "false",
                          "description": "When set to `true` also alarms for related source assets will be included in the request. When this parameter is provided a `source` must be specified."
                        },
                        {
                          "key": "withSourceDevices",
                          "value": "false",
                          "description": "When set to `true` also alarms for related source devices will be included in the request. When this parameter is provided a `source` must be specified."
                        }
                      ]
                    }
                  },
                  "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                  "code": 422,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Remove alarm collections",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Cumulocity-Processing-Mode",
                    "value": "PERSISTENT",
                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/alarm/alarms?createdFrom=<dateTime>&createdTo=<dateTime>&dateFrom=<dateTime>&dateTo=<dateTime>&resolved=false&severity=MAJOR&source=<string>&status=CLEARED&type=<string>,<string>&withSourceAssets=false&withSourceDevices=false",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "alarm",
                    "alarms"
                  ],
                  "query": [
                    {
                      "key": "createdFrom",
                      "value": "<dateTime>",
                      "description": "Start date or date and time of the alarm creation."
                    },
                    {
                      "key": "createdTo",
                      "value": "<dateTime>",
                      "description": "End date or date and time of the alarm creation."
                    },
                    {
                      "key": "dateFrom",
                      "value": "<dateTime>",
                      "description": "Start date or date and time of the alarm occurrence."
                    },
                    {
                      "key": "dateTo",
                      "value": "<dateTime>",
                      "description": "End date or date and time of the alarm occurrence."
                    },
                    {
                      "key": "resolved",
                      "value": "false",
                      "description": "When set to `true` only alarms with status CLEARED will be fetched, whereas `false` will fetch all alarms with status ACTIVE or ACKNOWLEDGED. Takes precedence over the `status` parameter."
                    },
                    {
                      "key": "severity",
                      "value": "MAJOR",
                      "description": "The severity of the alarm to search for.\n>**&#9432; Info:** If you query for multiple alarm severities at once, comma-separate the values.\n"
                    },
                    {
                      "key": "source",
                      "value": "<string>",
                      "description": "The managed object ID to which the alarm is associated."
                    },
                    {
                      "key": "status",
                      "value": "CLEARED",
                      "description": "The status of the alarm to search for. Should not be used when `resolved` parameter is provided.\n>**&#9432; Info:** If you query for multiple alarm statuses at once, comma-separate the values.\n"
                    },
                    {
                      "key": "type",
                      "value": "<string>,<string>",
                      "description": "The types of alarm to search for.\n>**&#9432; Info:** If you query for multiple alarm types at once, comma-separate the values. Space characters in alarm types must be escaped.\n"
                    },
                    {
                      "key": "withSourceAssets",
                      "value": "false",
                      "description": "When set to `true` also alarms for related source assets will be included in the request. When this parameter is provided a `source` must be specified."
                    },
                    {
                      "key": "withSourceDevices",
                      "value": "false",
                      "description": "When set to `true` also alarms for related source devices will be included in the request. When this parameter is provided a `source` must be specified."
                    }
                  ]
                },
                "description": "Remove alarm collections specified by query parameters.\n\n> **⚠️ Important:** DELETE requires at least one of the following parameters: `source`, `dateFrom`, `dateTo`, `createdFrom`, `createdTo`.\n> Also note that DELETE requests are not synchronous. The response could be returned before the delete request has been completed.\n\n<section><h5>Required roles</h5>\nROLE_ALARM_ADMIN\n</section>\n"
              },
              "response": [
                {
                  "name": "A collection of alarms was removed.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/alarm/alarms?createdFrom=<dateTime>&createdTo=<dateTime>&dateFrom=<dateTime>&dateTo=<dateTime>&resolved=false&severity=MAJOR&source=<string>&status=CLEARED&type=<string>,<string>&withSourceAssets=false&withSourceDevices=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "alarm",
                        "alarms"
                      ],
                      "query": [
                        {
                          "key": "createdFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the alarm creation."
                        },
                        {
                          "key": "createdTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the alarm creation."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the alarm occurrence."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the alarm occurrence."
                        },
                        {
                          "key": "resolved",
                          "value": "false",
                          "description": "When set to `true` only alarms with status CLEARED will be fetched, whereas `false` will fetch all alarms with status ACTIVE or ACKNOWLEDGED. Takes precedence over the `status` parameter."
                        },
                        {
                          "key": "severity",
                          "value": "MAJOR",
                          "description": "The severity of the alarm to search for.\n>**&#9432; Info:** If you query for multiple alarm severities at once, comma-separate the values.\n"
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the alarm is associated."
                        },
                        {
                          "key": "status",
                          "value": "CLEARED",
                          "description": "The status of the alarm to search for. Should not be used when `resolved` parameter is provided.\n>**&#9432; Info:** If you query for multiple alarm statuses at once, comma-separate the values.\n"
                        },
                        {
                          "key": "type",
                          "value": "<string>,<string>",
                          "description": "The types of alarm to search for.\n>**&#9432; Info:** If you query for multiple alarm types at once, comma-separate the values. Space characters in alarm types must be escaped.\n"
                        },
                        {
                          "key": "withSourceAssets",
                          "value": "false",
                          "description": "When set to `true` also alarms for related source assets will be included in the request. When this parameter is provided a `source` must be specified."
                        },
                        {
                          "key": "withSourceDevices",
                          "value": "false",
                          "description": "When set to `true` also alarms for related source devices will be included in the request. When this parameter is provided a `source` must be specified."
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/alarm/alarms?createdFrom=<dateTime>&createdTo=<dateTime>&dateFrom=<dateTime>&dateTo=<dateTime>&resolved=false&severity=MAJOR&source=<string>&status=CLEARED&type=<string>,<string>&withSourceAssets=false&withSourceDevices=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "alarm",
                        "alarms"
                      ],
                      "query": [
                        {
                          "key": "createdFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the alarm creation."
                        },
                        {
                          "key": "createdTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the alarm creation."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the alarm occurrence."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the alarm occurrence."
                        },
                        {
                          "key": "resolved",
                          "value": "false",
                          "description": "When set to `true` only alarms with status CLEARED will be fetched, whereas `false` will fetch all alarms with status ACTIVE or ACKNOWLEDGED. Takes precedence over the `status` parameter."
                        },
                        {
                          "key": "severity",
                          "value": "MAJOR",
                          "description": "The severity of the alarm to search for.\n>**&#9432; Info:** If you query for multiple alarm severities at once, comma-separate the values.\n"
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the alarm is associated."
                        },
                        {
                          "key": "status",
                          "value": "CLEARED",
                          "description": "The status of the alarm to search for. Should not be used when `resolved` parameter is provided.\n>**&#9432; Info:** If you query for multiple alarm statuses at once, comma-separate the values.\n"
                        },
                        {
                          "key": "type",
                          "value": "<string>,<string>",
                          "description": "The types of alarm to search for.\n>**&#9432; Info:** If you query for multiple alarm types at once, comma-separate the values. Space characters in alarm types must be escaped.\n"
                        },
                        {
                          "key": "withSourceAssets",
                          "value": "false",
                          "description": "When set to `true` also alarms for related source assets will be included in the request. When this parameter is provided a `source` must be specified."
                        },
                        {
                          "key": "withSourceDevices",
                          "value": "false",
                          "description": "When set to `true` also alarms for related source devices will be included in the request. When this parameter is provided a `source` must be specified."
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Not authorized to perform this operation.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/alarm/alarms?createdFrom=<dateTime>&createdTo=<dateTime>&dateFrom=<dateTime>&dateTo=<dateTime>&resolved=false&severity=MAJOR&source=<string>&status=CLEARED&type=<string>,<string>&withSourceAssets=false&withSourceDevices=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "alarm",
                        "alarms"
                      ],
                      "query": [
                        {
                          "key": "createdFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the alarm creation."
                        },
                        {
                          "key": "createdTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the alarm creation."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the alarm occurrence."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the alarm occurrence."
                        },
                        {
                          "key": "resolved",
                          "value": "false",
                          "description": "When set to `true` only alarms with status CLEARED will be fetched, whereas `false` will fetch all alarms with status ACTIVE or ACKNOWLEDGED. Takes precedence over the `status` parameter."
                        },
                        {
                          "key": "severity",
                          "value": "MAJOR",
                          "description": "The severity of the alarm to search for.\n>**&#9432; Info:** If you query for multiple alarm severities at once, comma-separate the values.\n"
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the alarm is associated."
                        },
                        {
                          "key": "status",
                          "value": "CLEARED",
                          "description": "The status of the alarm to search for. Should not be used when `resolved` parameter is provided.\n>**&#9432; Info:** If you query for multiple alarm statuses at once, comma-separate the values.\n"
                        },
                        {
                          "key": "type",
                          "value": "<string>,<string>",
                          "description": "The types of alarm to search for.\n>**&#9432; Info:** If you query for multiple alarm types at once, comma-separate the values. Space characters in alarm types must be escaped.\n"
                        },
                        {
                          "key": "withSourceAssets",
                          "value": "false",
                          "description": "When set to `true` also alarms for related source assets will be included in the request. When this parameter is provided a `source` must be specified."
                        },
                        {
                          "key": "withSourceDevices",
                          "value": "false",
                          "description": "When set to `true` also alarms for related source devices will be included in the request. When this parameter is provided a `source` must be specified."
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "Retrieve URIs to collections of alarms",
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "username",
                  "value": "{{basicAuthUsername}}",
                  "type": "string"
                },
                {
                  "key": "password",
                  "value": "{{basicAuthPassword}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/vnd.com.nsn.cumulocity.alarmapi+json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/alarm",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "alarm"
              ]
            },
            "description": "Retrieve URIs and URI templates to collections of alarms.\n\n<section><h5>Required roles</h5>\nROLE_ALARM_READ\n</section>\n"
          },
          "response": [
            {
              "name": "The request has succeeded and the URIs are sent in the response.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.alarmapi+json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/alarm",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "alarm"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.com.nsn.cumulocity.alarmapi+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"alarms\": {\n    \"self\": \"<uri>\",\n    \"alarms\": [\n      {\n        \"count\": \"<integer>\",\n        \"creationTime\": \"<dateTime>\",\n        \"firstOccurrenceTime\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"lastUpdated\": \"<dateTime>\",\n        \"self\": \"<uri>\",\n        \"severity\": \"CRITICAL\",\n        \"source\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"status\": \"CLEARED\",\n        \"text\": \"<string>\",\n        \"time\": \"<dateTime>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"count\": \"<integer>\",\n        \"creationTime\": \"<dateTime>\",\n        \"firstOccurrenceTime\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"lastUpdated\": \"<dateTime>\",\n        \"self\": \"<uri>\",\n        \"severity\": \"MINOR\",\n        \"source\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"status\": \"ACTIVE\",\n        \"text\": \"<string>\",\n        \"time\": \"<dateTime>\",\n        \"type\": \"<string>\",\n        \"culpa__\": {\n          \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n          \"x-additionalPropertiesName\": \"customFragments\"\n        },\n        \"nostrud_32e\": {\n          \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n          \"x-additionalPropertiesName\": \"customFragments\"\n        }\n      }\n    ]\n  },\n  \"alarmsForSource\": \"<string>\",\n  \"alarmsForStatus\": \"<string>\",\n  \"alarmsForSourceAndStatusAndTime\": \"<string>\",\n  \"alarmsForStatusAndTime\": \"<string>\",\n  \"alarmsForSourceAndTime\": \"<string>\",\n  \"alarmsForTime\": \"<string>\",\n  \"alarmsForSourceAndStatus\": \"<string>\",\n  \"self\": \"<uri>\"\n}"
            },
            {
              "name": "Authentication information is missing or invalid.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/alarm",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "alarm"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "devicecontrol",
      "item": [
        {
          "name": "operations",
          "item": [
            {
              "name": "{id}",
              "item": [
                {
                  "name": "Retrieve a specific operation",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.operation+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/operations/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "operations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the operation."
                        }
                      ]
                    },
                    "description": "Retrieve a specific operation (by a given ID).\n\n<section><h5>Required roles</h5>\nROLE_DEVICE_CONTROL_READ <b>OR</b> owner of the resource <b>OR</b> ADMIN permission on the device\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the operation is sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.operation+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/devicecontrol/operations/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "devicecontrol",
                            "operations",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.operation+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"bulkOperationId\": \"<integer>\",\n  \"creationTime\": \"<dateTime>\",\n  \"deviceId\": \"<string>\",\n  \"deviceExternalIDs\": {\n    \"externalIds\": [\n      {\n        \"externalId\": \"<string>\",\n        \"type\": \"<string>\",\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"externalId\": \"<string>\",\n        \"type\": \"<string>\",\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"self\": \"<uri>\"\n  },\n  \"failureReason\": \"<string>\",\n  \"id\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"status\": \"EXECUTING\",\n  \"amet_8be\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  },\n  \"sunt4eb\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  }\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/devicecontrol/operations/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "devicecontrol",
                            "operations",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Operation not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/devicecontrol/operations/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "devicecontrol",
                            "operations",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Update a specific operation status",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.operation+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.operation+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"status\": \"PENDING\",\n  \"deviceExternalIDs\": {\n    \"externalIds\": [\n      {\n        \"externalId\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"externalId\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ]\n  },\n  \"failureReason\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/operations/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "operations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the operation."
                        }
                      ]
                    },
                    "description": "Update a specific operation (by a given ID).\nYou can only update its status.\n\n<section><h5>Required roles</h5>\nROLE_DEVICE_CONTROL_ADMIN <b>OR</b> owner of the resource <b>OR</b> ADMIN permission on the device\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "An operation was updated.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.operation+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.operation+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"status\": \"PENDING\",\n  \"deviceExternalIDs\": {\n    \"externalIds\": [\n      {\n        \"externalId\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"externalId\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ]\n  },\n  \"failureReason\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/devicecontrol/operations/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "devicecontrol",
                            "operations",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.operation+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"bulkOperationId\": \"<integer>\",\n  \"creationTime\": \"<dateTime>\",\n  \"deviceId\": \"<string>\",\n  \"deviceExternalIDs\": {\n    \"externalIds\": [\n      {\n        \"externalId\": \"<string>\",\n        \"type\": \"<string>\",\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"externalId\": \"<string>\",\n        \"type\": \"<string>\",\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"self\": \"<uri>\"\n  },\n  \"failureReason\": \"<string>\",\n  \"id\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"status\": \"EXECUTING\",\n  \"amet_8be\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  },\n  \"sunt4eb\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  }\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.operation+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"status\": \"PENDING\",\n  \"deviceExternalIDs\": {\n    \"externalIds\": [\n      {\n        \"externalId\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"externalId\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ]\n  },\n  \"failureReason\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/devicecontrol/operations/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "devicecontrol",
                            "operations",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Operation not found.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.operation+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"status\": \"PENDING\",\n  \"deviceExternalIDs\": {\n    \"externalIds\": [\n      {\n        \"externalId\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"externalId\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ]\n  },\n  \"failureReason\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/devicecontrol/operations/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "devicecontrol",
                            "operations",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Validation error.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.operation+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"status\": \"PENDING\",\n  \"deviceExternalIDs\": {\n    \"externalIds\": [\n      {\n        \"externalId\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"externalId\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ]\n  },\n  \"failureReason\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/devicecontrol/operations/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "devicecontrol",
                            "operations",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                      "code": 422,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Create an operation",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Cumulocity-Processing-Mode",
                    "value": "PERSISTENT",
                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.com.nsn.cumulocity.operation+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.operation+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"deviceId\": \"<string>\",\n  \"deviceExternalIDs\": {\n    \"externalIds\": [\n      {\n        \"externalId\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"externalId\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ]\n  }\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/devicecontrol/operations",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "devicecontrol",
                    "operations"
                  ]
                },
                "description": "Create an operation.\n\nIt is possible to add custom fragments to operations, for example `com_cumulocity_model_WebCamDevice` is a custom object of the webcam operation.\n\nThere are some custom fragments which are used by web applications (like Device management) to provide additional context to operations, for example:\n* `description` - this fragment can be used to provide a brief user-friendly description of the operation which is later displayed in the operations list views within web applications.\n\n<section><h5>Required roles</h5>\nROLE_DEVICE_CONTROL_ADMIN <b>OR</b> owner of the device <b>OR</b> ADMIN permissions on the device\n</section>\n"
              },
              "response": [
                {
                  "name": "An operation was created.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.operation+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.operation+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"deviceId\": \"<string>\",\n  \"deviceExternalIDs\": {\n    \"externalIds\": [\n      {\n        \"externalId\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"externalId\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ]\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/operations",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "operations"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.operation+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"bulkOperationId\": \"<integer>\",\n  \"creationTime\": \"<dateTime>\",\n  \"deviceId\": \"<string>\",\n  \"deviceExternalIDs\": {\n    \"externalIds\": [\n      {\n        \"externalId\": \"<string>\",\n        \"type\": \"<string>\",\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"externalId\": \"<string>\",\n        \"type\": \"<string>\",\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"self\": \"<uri>\"\n  },\n  \"failureReason\": \"<string>\",\n  \"id\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"status\": \"EXECUTING\",\n  \"amet_8be\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  },\n  \"sunt4eb\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  }\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.operation+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"deviceId\": \"<string>\",\n  \"deviceExternalIDs\": {\n    \"externalIds\": [\n      {\n        \"externalId\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"externalId\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ]\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/operations",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "operations"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Unprocessable Entity – invalid payload.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.operation+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"deviceId\": \"<string>\",\n  \"deviceExternalIDs\": {\n    \"externalIds\": [\n      {\n        \"externalId\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"externalId\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ]\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/operations",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "operations"
                      ]
                    }
                  },
                  "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                  "code": 422,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Retrieve a list of operations",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.operationcollection+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/devicecontrol/operations?agentId=<string>&bulkOperationId=<integer>&currentPage=1&dateFrom=<dateTime>&dateTo=<dateTime>&deviceId=<string>&fragmentType=<string>&pageSize=5&revert=false&status=EXECUTING&withTotalElements=false&withTotalPages=false",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "devicecontrol",
                    "operations"
                  ],
                  "query": [
                    {
                      "key": "agentId",
                      "value": "<string>",
                      "description": "An agent ID that may be part of the operation. If this parameter is set, the operation response objects contain the `deviceExternalIDs` object."
                    },
                    {
                      "key": "bulkOperationId",
                      "value": "<integer>",
                      "description": "The bulk operation ID that this operation belongs to."
                    },
                    {
                      "key": "currentPage",
                      "value": "1",
                      "description": "The current page of the paginated results."
                    },
                    {
                      "key": "dateFrom",
                      "value": "<dateTime>",
                      "description": "Start date or date and time of the operation."
                    },
                    {
                      "key": "dateTo",
                      "value": "<dateTime>",
                      "description": "End date or date and time of the operation."
                    },
                    {
                      "key": "deviceId",
                      "value": "<string>",
                      "description": "The ID of the device the operation is performed for."
                    },
                    {
                      "key": "fragmentType",
                      "value": "<string>",
                      "description": "The type of fragment that must be part of the operation."
                    },
                    {
                      "key": "pageSize",
                      "value": "5",
                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                    },
                    {
                      "key": "revert",
                      "value": "false",
                      "description": "If you are using a range query (that is, at least one of the `dateFrom` or `dateTo` parameters is included in the request), then setting `revert=true` will sort the results by the newest operations first.\nBy default, the results are sorted by the oldest operations first.\n"
                    },
                    {
                      "key": "status",
                      "value": "EXECUTING",
                      "description": "Status of the operation."
                    },
                    {
                      "key": "withTotalElements",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                    },
                    {
                      "key": "withTotalPages",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                    }
                  ]
                },
                "description": "Retrieve a list of operations.\n\nNotes about operation collections:\n\n* The embedded operation object contains `deviceExternalIDs` only when queried with an `agentId` parameter.\n* The embedded operation object is filled with `deviceName`, but only when requesting resource: Get a collection of operations.\n* Operations are returned in the order of their ascending IDs.\n\n<section><h5>Required roles</h5>\nROLE_DEVICE_CONTROL_READ\n</section>\n"
              },
              "response": [
                {
                  "name": "The request has succeeded and the list of operations is sent in the response.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.operationcollection+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/operations?agentId=<string>&bulkOperationId=<integer>&currentPage=1&dateFrom=<dateTime>&dateTo=<dateTime>&deviceId=<string>&fragmentType=<string>&pageSize=5&revert=false&status=EXECUTING&withTotalElements=false&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "operations"
                      ],
                      "query": [
                        {
                          "key": "agentId",
                          "value": "<string>",
                          "description": "An agent ID that may be part of the operation. If this parameter is set, the operation response objects contain the `deviceExternalIDs` object."
                        },
                        {
                          "key": "bulkOperationId",
                          "value": "<integer>",
                          "description": "The bulk operation ID that this operation belongs to."
                        },
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the operation."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the operation."
                        },
                        {
                          "key": "deviceId",
                          "value": "<string>",
                          "description": "The ID of the device the operation is performed for."
                        },
                        {
                          "key": "fragmentType",
                          "value": "<string>",
                          "description": "The type of fragment that must be part of the operation."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "revert",
                          "value": "false",
                          "description": "If you are using a range query (that is, at least one of the `dateFrom` or `dateTo` parameters is included in the request), then setting `revert=true` will sort the results by the newest operations first.\nBy default, the results are sorted by the oldest operations first.\n"
                        },
                        {
                          "key": "status",
                          "value": "EXECUTING",
                          "description": "Status of the operation."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.operationcollection+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"next\": \"<string>\",\n  \"operations\": [\n    {\n      \"bulkOperationId\": \"<integer>\",\n      \"creationTime\": \"<dateTime>\",\n      \"deviceId\": \"<string>\",\n      \"deviceExternalIDs\": {\n        \"externalIds\": [\n          {\n            \"externalId\": \"<string>\",\n            \"type\": \"<string>\",\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          },\n          {\n            \"externalId\": \"<string>\",\n            \"type\": \"<string>\",\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          }\n        ],\n        \"self\": \"<uri>\"\n      },\n      \"failureReason\": \"<string>\",\n      \"id\": \"<string>\",\n      \"self\": \"<uri>\",\n      \"status\": \"FAILED\"\n    },\n    {\n      \"bulkOperationId\": \"<integer>\",\n      \"creationTime\": \"<dateTime>\",\n      \"deviceId\": \"<string>\",\n      \"deviceExternalIDs\": {\n        \"externalIds\": [\n          {\n            \"externalId\": \"<string>\",\n            \"type\": \"<string>\",\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          },\n          {\n            \"externalId\": \"<string>\",\n            \"type\": \"<string>\",\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          }\n        ],\n        \"self\": \"<uri>\"\n      },\n      \"failureReason\": \"<string>\",\n      \"id\": \"<string>\",\n      \"self\": \"<uri>\",\n      \"status\": \"SUCCESSFUL\"\n    }\n  ],\n  \"prev\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  }\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/operations?agentId=<string>&bulkOperationId=<integer>&currentPage=1&dateFrom=<dateTime>&dateTo=<dateTime>&deviceId=<string>&fragmentType=<string>&pageSize=5&revert=false&status=EXECUTING&withTotalElements=false&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "operations"
                      ],
                      "query": [
                        {
                          "key": "agentId",
                          "value": "<string>",
                          "description": "An agent ID that may be part of the operation. If this parameter is set, the operation response objects contain the `deviceExternalIDs` object."
                        },
                        {
                          "key": "bulkOperationId",
                          "value": "<integer>",
                          "description": "The bulk operation ID that this operation belongs to."
                        },
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the operation."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the operation."
                        },
                        {
                          "key": "deviceId",
                          "value": "<string>",
                          "description": "The ID of the device the operation is performed for."
                        },
                        {
                          "key": "fragmentType",
                          "value": "<string>",
                          "description": "The type of fragment that must be part of the operation."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "revert",
                          "value": "false",
                          "description": "If you are using a range query (that is, at least one of the `dateFrom` or `dateTo` parameters is included in the request), then setting `revert=true` will sort the results by the newest operations first.\nBy default, the results are sorted by the oldest operations first.\n"
                        },
                        {
                          "key": "status",
                          "value": "EXECUTING",
                          "description": "Status of the operation."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Delete a list of operations",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Cumulocity-Processing-Mode",
                    "value": "PERSISTENT",
                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/devicecontrol/operations?agentId=<string>&dateFrom=<dateTime>&dateTo=<dateTime>&deviceId=<string>&status=EXECUTING",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "devicecontrol",
                    "operations"
                  ],
                  "query": [
                    {
                      "key": "agentId",
                      "value": "<string>",
                      "description": "An agent ID that may be part of the operation."
                    },
                    {
                      "key": "dateFrom",
                      "value": "<dateTime>",
                      "description": "Start date or date and time of the operation."
                    },
                    {
                      "key": "dateTo",
                      "value": "<dateTime>",
                      "description": "End date or date and time of the operation."
                    },
                    {
                      "key": "deviceId",
                      "value": "<string>",
                      "description": "The ID of the device the operation is performed for."
                    },
                    {
                      "key": "status",
                      "value": "EXECUTING",
                      "description": "Status of the operation."
                    }
                  ]
                },
                "description": "Delete a list of operations.\n\nThe DELETE method allows for deletion of operation collections.\n\n<section><h5>Required roles</h5>\nROLE_DEVICE_CONTROL_ADMIN\n</section>\n"
              },
              "response": [
                {
                  "name": "A list of operations was removed.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/operations?agentId=<string>&dateFrom=<dateTime>&dateTo=<dateTime>&deviceId=<string>&status=EXECUTING",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "operations"
                      ],
                      "query": [
                        {
                          "key": "agentId",
                          "value": "<string>",
                          "description": "An agent ID that may be part of the operation."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the operation."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the operation."
                        },
                        {
                          "key": "deviceId",
                          "value": "<string>",
                          "description": "The ID of the device the operation is performed for."
                        },
                        {
                          "key": "status",
                          "value": "EXECUTING",
                          "description": "Status of the operation."
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/operations?agentId=<string>&dateFrom=<dateTime>&dateTo=<dateTime>&deviceId=<string>&status=EXECUTING",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "operations"
                      ],
                      "query": [
                        {
                          "key": "agentId",
                          "value": "<string>",
                          "description": "An agent ID that may be part of the operation."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the operation."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the operation."
                        },
                        {
                          "key": "deviceId",
                          "value": "<string>",
                          "description": "The ID of the device the operation is performed for."
                        },
                        {
                          "key": "status",
                          "value": "EXECUTING",
                          "description": "Status of the operation."
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Not authorized to perform this operation.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/operations?agentId=<string>&dateFrom=<dateTime>&dateTo=<dateTime>&deviceId=<string>&status=EXECUTING",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "operations"
                      ],
                      "query": [
                        {
                          "key": "agentId",
                          "value": "<string>",
                          "description": "An agent ID that may be part of the operation."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the operation."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the operation."
                        },
                        {
                          "key": "deviceId",
                          "value": "<string>",
                          "description": "The ID of the device the operation is performed for."
                        },
                        {
                          "key": "status",
                          "value": "EXECUTING",
                          "description": "Status of the operation."
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "newDeviceRequests",
          "item": [
            {
              "name": "{requestId}",
              "item": [
                {
                  "name": "Retrieve a specific new device request",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.newdevicerequest+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/newDeviceRequests/:requestId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "newDeviceRequests",
                        ":requestId"
                      ],
                      "variable": [
                        {
                          "key": "requestId",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the new device request."
                        }
                      ]
                    },
                    "description": "Retrieve a specific new device request (by a given ID).\n\n<section><h5>Required roles</h5>\nROLE_DEVICE_CONTROL_READ\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the new device request is sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.newdevicerequest+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/devicecontrol/newDeviceRequests/:requestId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "devicecontrol",
                            "newDeviceRequests",
                            ":requestId"
                          ],
                          "variable": [
                            {
                              "key": "requestId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.newdevicerequest+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"groupId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"status\": \"PENDING_ACCEPTANCE\",\n  \"owner\": \"<string>\",\n  \"creationTime\": \"<dateTime>\"\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/devicecontrol/newDeviceRequests/:requestId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "devicecontrol",
                            "newDeviceRequests",
                            ":requestId"
                          ],
                          "variable": [
                            {
                              "key": "requestId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "New device request not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/devicecontrol/newDeviceRequests/:requestId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "devicecontrol",
                            "newDeviceRequests",
                            ":requestId"
                          ],
                          "variable": [
                            {
                              "key": "requestId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Update a specific new device request status",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.newdevicerequest+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.newdevicerequest+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"status\": \"PENDING_ACCEPTANCE\",\n  \"securityToken\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/newDeviceRequests/:requestId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "newDeviceRequests",
                        ":requestId"
                      ],
                      "variable": [
                        {
                          "key": "requestId",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the new device request."
                        }
                      ]
                    },
                    "description": "Update a specific new device request (by a given ID).\nYou can only update its status.\n\n<section><h5>Required roles</h5>\nROLE_DEVICE_CONTROL_ADMIN\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "A new device request was updated.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.newdevicerequest+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.newdevicerequest+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"status\": \"PENDING_ACCEPTANCE\",\n  \"securityToken\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/devicecontrol/newDeviceRequests/:requestId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "devicecontrol",
                            "newDeviceRequests",
                            ":requestId"
                          ],
                          "variable": [
                            {
                              "key": "requestId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.newdevicerequest+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"groupId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"status\": \"PENDING_ACCEPTANCE\",\n  \"owner\": \"<string>\",\n  \"creationTime\": \"<dateTime>\"\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.newdevicerequest+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"status\": \"PENDING_ACCEPTANCE\",\n  \"securityToken\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/devicecontrol/newDeviceRequests/:requestId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "devicecontrol",
                            "newDeviceRequests",
                            ":requestId"
                          ],
                          "variable": [
                            {
                              "key": "requestId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "New device request not found.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.newdevicerequest+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"status\": \"PENDING_ACCEPTANCE\",\n  \"securityToken\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/devicecontrol/newDeviceRequests/:requestId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "devicecontrol",
                            "newDeviceRequests",
                            ":requestId"
                          ],
                          "variable": [
                            {
                              "key": "requestId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Delete a specific new device request",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/newDeviceRequests/:requestId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "newDeviceRequests",
                        ":requestId"
                      ],
                      "variable": [
                        {
                          "key": "requestId",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the new device request."
                        }
                      ]
                    },
                    "description": "Delete a specific new device request (by a given ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_ADMIN\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "A new device request was removed.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/devicecontrol/newDeviceRequests/:requestId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "devicecontrol",
                            "newDeviceRequests",
                            ":requestId"
                          ],
                          "variable": [
                            {
                              "key": "requestId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/devicecontrol/newDeviceRequests/:requestId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "devicecontrol",
                            "newDeviceRequests",
                            ":requestId"
                          ],
                          "variable": [
                            {
                              "key": "requestId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not authorized to perform this operation.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/devicecontrol/newDeviceRequests/:requestId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "devicecontrol",
                            "newDeviceRequests",
                            ":requestId"
                          ],
                          "variable": [
                            {
                              "key": "requestId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "New device request not found.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/devicecontrol/newDeviceRequests/:requestId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "devicecontrol",
                            "newDeviceRequests",
                            ":requestId"
                          ],
                          "variable": [
                            {
                              "key": "requestId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Create a new device request",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Cumulocity-Processing-Mode",
                    "value": "PERSISTENT",
                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.com.nsn.cumulocity.newdevicerequest+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.newdevicerequest+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id\": \"<string>\",\n  \"groupId\": \"<string>\",\n  \"type\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/devicecontrol/newDeviceRequests",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "devicecontrol",
                    "newDeviceRequests"
                  ]
                },
                "description": "Create a new device request.\n\n<section><h5>Required roles</h5>\nROLE_DEVICE_CONTROL_ADMIN\n</section>\n"
              },
              "response": [
                {
                  "name": "A new device request was created.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.newdevicerequest+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.newdevicerequest+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"id\": \"<string>\",\n  \"groupId\": \"<string>\",\n  \"type\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/newDeviceRequests",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "newDeviceRequests"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.newdevicerequest+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"groupId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"status\": \"PENDING_ACCEPTANCE\",\n  \"owner\": \"<string>\",\n  \"creationTime\": \"<dateTime>\"\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.newdevicerequest+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"id\": \"<string>\",\n  \"groupId\": \"<string>\",\n  \"type\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/newDeviceRequests",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "newDeviceRequests"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Unprocessable Entity – invalid payload.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.newdevicerequest+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"id\": \"<string>\",\n  \"groupId\": \"<string>\",\n  \"type\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/newDeviceRequests",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "newDeviceRequests"
                      ]
                    }
                  },
                  "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                  "code": 422,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Retrieve a list of new device requests",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.newdevicerequestcollection+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/devicecontrol/newDeviceRequests?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "devicecontrol",
                    "newDeviceRequests"
                  ],
                  "query": [
                    {
                      "key": "currentPage",
                      "value": "1",
                      "description": "The current page of the paginated results."
                    },
                    {
                      "key": "pageSize",
                      "value": "5",
                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                    },
                    {
                      "key": "withTotalElements",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                    },
                    {
                      "key": "withTotalPages",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                    }
                  ]
                },
                "description": "Retrieve a list of new device requests.\n\n<section><h5>Required roles</h5>\nROLE_DEVICE_CONTROL_READ\n</section>\n"
              },
              "response": [
                {
                  "name": "The request has succeeded and the list of new device requests sent in the response.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.newdevicerequestcollection+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/newDeviceRequests?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "newDeviceRequests"
                      ],
                      "query": [
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.newdevicerequestcollection+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"newDeviceRequests\": [\n    {\n      \"id\": \"<string>\",\n      \"groupId\": \"<string>\",\n      \"type\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"self\": \"<uri>\",\n      \"status\": \"PENDING_ACCEPTANCE\",\n      \"owner\": \"<string>\",\n      \"creationTime\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"groupId\": \"<string>\",\n      \"type\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"self\": \"<uri>\",\n      \"status\": \"WAITING_FOR_CONNECTION\",\n      \"owner\": \"<string>\",\n      \"creationTime\": \"<dateTime>\"\n    }\n  ],\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  }\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/newDeviceRequests?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "newDeviceRequests"
                      ],
                      "query": [
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "deviceCredentials",
          "item": [
            {
              "name": "Create device credentials",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Cumulocity-Processing-Mode",
                    "value": "PERSISTENT",
                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.com.nsn.cumulocity.devicecredentials+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.devicecredentials+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id\": \"<string>\",\n  \"securityToken\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/devicecontrol/deviceCredentials",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "devicecontrol",
                    "deviceCredentials"
                  ]
                },
                "description": "Create device credentials.\n\n<section><h5>Required roles</h5>\nROLE_DEVICE_BOOTSTRAP\n</section>\n"
              },
              "response": [
                {
                  "name": "Device credentials were created.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.devicecredentials+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.devicecredentials+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"id\": \"<string>\",\n  \"securityToken\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/deviceCredentials",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "deviceCredentials"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.devicecredentials+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"password\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"tenantId\": \"<string>\",\n  \"username\": \"<string>\"\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.devicecredentials+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"id\": \"<string>\",\n  \"securityToken\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/deviceCredentials",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "deviceCredentials"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "bulkNewDeviceRequests",
          "item": [
            {
              "name": "Create a bulk device credentials request",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Cumulocity-Processing-Mode",
                    "value": "PERSISTENT",
                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                  },
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.bulknewdevicerequest+json"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "file",
                      "contentType": "text/csv",
                      "description": "(Required) The CSV file to be uploaded.",
                      "type": "file",
                      "src": []
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/devicecontrol/bulkNewDeviceRequests",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "devicecontrol",
                    "bulkNewDeviceRequests"
                  ]
                },
                "description": "Create a bulk device credentials request.\n\nDevice credentials and basic device representation can be provided within a CSV file which must be UTF-8 or ANSI encoded. The CSV file must have two sections.\n\nThe first section is the first line of the CSV file. This line contains column names (headers):\n\n|Name|Mandatory|Description|\n|--- |--- |--- |\n|ID|Yes|The external ID of a device.|\n|CREDENTIALS|Yes*|Password for the device's user. Mandatory, unless AUTH_TYPE is \"CERTIFICATES\", then CREDENTIALS can be skipped.|\n|AUTH_TYPE|No|Required authentication type for the device's user. If the device uses credentials, this can be skipped or filled with \"BASIC\". Devices that use certificates must set \"CERTIFICATES\".|\n|TENANT|No|The ID of the tenant for which the registration is executed (only allowed for the management tenant).|\n|TYPE|No|The type of the device representation.|\n|NAME|No|The name of the device representation.|\n|ICCID|No|The ICCID of the device (SIM card number). If the ICCID appears in file, the import adds a fragment `c8y_Mobile.iccid`. The ICCID value is not mandatory for each row, see the example for an HTTP request below.|\n|IDTYPE|No|The type of the external ID. If IDTYPE doesn't appear in the file, the default value is used. The default value is `c8y_Serial`. The IDTYPE value is not mandatory for each row, see the example for an HTTP request below.|\n|PATH|No|The path in the groups hierarchy where the device is added. PATH contains the name of each group separated by `/`, that is: `main_group/sub_group/.../last_sub_group`. If a group does not exist, the import creates the group.|\n|SHELL|No|If this column contains a value of 1, the import adds the SHELL feature to the device (specifically the `c8y_SupportedOperations` fragment). The SHELL value is not mandatory for each row, see the example for an HTTP request below.|\n\nSection two is the rest of the CSV file. Section two contains the device information. The order and quantity of the values must be the same as of the headers.\n\nA separator is automatically obtained from the CSV file. Valid separator values are: `\\t` (tabulation mark), `;` (semicolon) and `,` (comma).\n\n> **⚠️ Important:** The CSV file needs the \"com_cumulocity_model_Agent.active\" header with a value of \"true\" to be added to the request.\n\n> **&#9432; Info:** A bulk registration creates an elementary representation of the device. Then, the device needs to update it to a full representation with its own status. The device is ready to use only after it is updated to the full representation. Also see [Device management > Device management application > Registering devices > Single device registration > Security token policy](https://www.cumulocity.com/docs/device-management-application/registering-devices/#security-token-policy) and [Device management > Device integration > Device integration using REST > Integration life cycle](https://www.cumulocity.com/docs/device-integration/rest/#integration-life-cycle).\n\nA CSV file can appear in many forms (with regard to the optional tenant column and the occurrence of device information):\n\n* If a user is logged in as the management tenant, then the columns ID, CREDENTIALS and TENANT are mandatory, and the device credentials will be created for the tenant mentioned in the TENANT column.\n* If a user is logged in as a different tenant, for example, as `sample_tenant`, then the columns ID and CREDENTIALS are mandatory (if the file contains the TENANT column, it is ignored and the device credentials will be created for the tenant that is logged in).\n* If a user wants to add information about the device, the columns TYPE and NAME must appear in the CSV file.\n* If a user wants to add information about a SIM card number, the columns TYPE, NAME and ICCID must appear in the CSV file.\n* If a user wants to change the type of external ID, the columns TYPE, NAME and IDTYPE must appear in the CSV file.\n* If a user wants to add a device to a group, the columns TYPE, NAME and PATH must appear in the CSV file.\n* If a user wants to add the SHELL feature, the columns TYPE, NAME and SHELL must appear in the CSV file and the column SHELL must contain a value of 1.\n\nIt is possible to define a custom [external ID](#tag/External-IDs) mapping and some custom device properties which are added to newly created devices during registration:\n\n* To add a custom external ID mapping, enter the external ID type as the header of the last column with the prefix \"external-\", for example, to add an external ID mapping of type `c8y_Imei`, enter `external-c8y_Imei` in the last column header. The value of this external ID type should be set in the corresponding column of the data rows.\n* To add a custom property to a registered device, enter the custom property name as a header, for example, \"myCustomProperty\", and the value would be in the rows below.\n\nThe custom device properties mapping has the following limitations:\n\n* Braces '{}' used in data rows will be interpreted as strings of \"{}\". The system will interpret the value as an object when some custom property is added, for example, put `com_cumulocity_model_Agent.active` into the headers row and `true` into the data row to create an object `\"com_cumulocity_model_Agent\": {\"active\": \"true\"}\"`.\n* It is not possible to add array values via bulk registration.\n\nExample file:\n\n```csv\nID;CREDENTIALS;TYPE;NAME;ICCID;IDTYPE;PATH;SHELL\nid_101;AbcD1234!1234AbcD;type_of_device;Device 101;111111111;;csv device/subgroup0;1\nid_102;AbcD1234!1234AbcD;type_of_device;Device 102;222222222;;csv device/subgroup0;0\nid_111;AbcD1234!1234AbcD;type_of_device;Device 111;333333333;c8y_Imei;csv device1/subgroup1;0\nid_112;AbcD1234!1234AbcD;type_of_device;Device 112;444444444;;csv device1/subgroup1;1\nid_121;AbcD1234!1234AbcD;type_of_device;Device 121;555555555;;csv device1/subgroup2;1\nid_122;AbcD1234!1234AbcD;type_of_device;Device 122;;;csv device1/subgroup2;\nid_131;AbcD1234!1234AbcD;type_of_device;Device 131;;;csv device1/subgroup3;\n```\n\nThere is also a simple registration method that creates all registration requests at once, then each one needs to go through regular acceptance.\nThis simple registration only makes use of the ID and PATH fields from the list above.\n\n<section><h5>Required roles</h5>\nROLE_DEVICE_CONTROL_ADMIN\n</section>\n"
              },
              "response": [
                {
                  "name": "A bulk of new device requests was created.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.bulknewdevicerequest+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "file",
                          "contentType": "text/csv",
                          "description": "(Required) The CSV file to be uploaded.",
                          "type": "file",
                          "src": []
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/bulkNewDeviceRequests",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "bulkNewDeviceRequests"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.bulknewdevicerequest+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"numberOfAll\": \"<integer>\",\n  \"numberOfCreated\": \"<integer>\",\n  \"numberOfFailed\": \"<integer>\",\n  \"numberOfSuccessful\": \"<integer>\",\n  \"credentialUpdatedList\": [\n    {\n      \"bulkNewDeviceStatus\": \"CREDENTIAL_UPDATED\",\n      \"deviceId\": \"<string>\"\n    },\n    {\n      \"bulkNewDeviceStatus\": \"CREDENTIAL_UPDATED\",\n      \"deviceId\": \"<string>\"\n    }\n  ],\n  \"failedCreationList\": [\n    {\n      \"bulkNewDeviceStatus\": \"CREATED\",\n      \"deviceId\": \"<string>\",\n      \"failureReason\": \"<string>\",\n      \"line\": \"<string>\"\n    },\n    {\n      \"bulkNewDeviceStatus\": \"CREATED\",\n      \"deviceId\": \"<string>\",\n      \"failureReason\": \"<string>\",\n      \"line\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "file",
                          "contentType": "text/csv",
                          "description": "(Required) The CSV file to be uploaded.",
                          "type": "file",
                          "src": []
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/bulkNewDeviceRequests",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "bulkNewDeviceRequests"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "bulkoperations",
          "item": [
            {
              "name": "{id}",
              "item": [
                {
                  "name": "Retrieve a specific bulk operation",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.bulkoperation+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/bulkoperations/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "bulkoperations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<integer>",
                          "description": "(Required) Unique identifier of the bulk operation."
                        }
                      ]
                    },
                    "description": "Retrieve a specific bulk operation (by a given ID).\n\n<section><h5>Required roles</h5>\nROLE_BULK_OPERATION_READ\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the bulk operation is sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.bulkoperation+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/devicecontrol/bulkoperations/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "devicecontrol",
                            "bulkoperations",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.bulkoperation+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"self\": \"<uri>\",\n  \"id\": \"<string>\",\n  \"groupId\": \"<string>\",\n  \"failedParentId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"creationRamp\": \"<float>\",\n  \"operationPrototype\": {},\n  \"status\": \"ACTIVE\",\n  \"generalStatus\": \"SCHEDULED\",\n  \"progress\": {\n    \"pending\": \"<integer>\",\n    \"failed\": \"<integer>\",\n    \"executing\": \"<integer>\",\n    \"successful\": \"<integer>\",\n    \"all\": \"<integer>\"\n  }\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/devicecontrol/bulkoperations/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "devicecontrol",
                            "bulkoperations",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Bulk operation not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/devicecontrol/bulkoperations/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "devicecontrol",
                            "bulkoperations",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Update a specific bulk operation",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.bulkoperation+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.bulkoperation+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"groupId\": \"<string>\",\n  \"failedParentId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"creationRamp\": \"<float>\",\n  \"operationPrototype\": {}\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/bulkoperations/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "bulkoperations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<integer>",
                          "description": "(Required) Unique identifier of the bulk operation."
                        }
                      ]
                    },
                    "description": "Update a specific bulk operation (by a given ID).\n\n<section><h5>Required roles</h5>\nROLE_BULK_OPERATION_ADMIN\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "A bulk operation was updated.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.bulkoperation+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.bulkoperation+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"groupId\": \"<string>\",\n  \"failedParentId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"creationRamp\": \"<float>\",\n  \"operationPrototype\": {}\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/devicecontrol/bulkoperations/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "devicecontrol",
                            "bulkoperations",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.bulkoperation+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"self\": \"<uri>\",\n  \"id\": \"<string>\",\n  \"groupId\": \"<string>\",\n  \"failedParentId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"creationRamp\": \"<float>\",\n  \"operationPrototype\": {},\n  \"status\": \"ACTIVE\",\n  \"generalStatus\": \"SCHEDULED\",\n  \"progress\": {\n    \"pending\": \"<integer>\",\n    \"failed\": \"<integer>\",\n    \"executing\": \"<integer>\",\n    \"successful\": \"<integer>\",\n    \"all\": \"<integer>\"\n  }\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.bulkoperation+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"groupId\": \"<string>\",\n  \"failedParentId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"creationRamp\": \"<float>\",\n  \"operationPrototype\": {}\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/devicecontrol/bulkoperations/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "devicecontrol",
                            "bulkoperations",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Bulk operation not found.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.bulkoperation+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"groupId\": \"<string>\",\n  \"failedParentId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"creationRamp\": \"<float>\",\n  \"operationPrototype\": {}\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/devicecontrol/bulkoperations/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "devicecontrol",
                            "bulkoperations",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Delete a specific bulk operation",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/bulkoperations/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "bulkoperations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<integer>",
                          "description": "(Required) Unique identifier of the bulk operation."
                        }
                      ]
                    },
                    "description": "Delete a specific bulk operation (by a given ID).\n\n<section><h5>Required roles</h5>\nROLE_BULK_OPERATION_ADMIN\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "A bulk operation was removed.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/devicecontrol/bulkoperations/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "devicecontrol",
                            "bulkoperations",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/devicecontrol/bulkoperations/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "devicecontrol",
                            "bulkoperations",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not authorized to perform this operation.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/devicecontrol/bulkoperations/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "devicecontrol",
                            "bulkoperations",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Bulk operation not found.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/devicecontrol/bulkoperations/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "devicecontrol",
                            "bulkoperations",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Create a bulk operation",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Cumulocity-Processing-Mode",
                    "value": "PERSISTENT",
                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.com.nsn.cumulocity.bulkoperation+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.bulkoperation+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"groupId\": \"<string>\",\n  \"failedParentId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"creationRamp\": \"<float>\",\n  \"operationPrototype\": {}\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/devicecontrol/bulkoperations",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "devicecontrol",
                    "bulkoperations"
                  ]
                },
                "description": "Create a bulk operation.\n\n<section><h5>Required roles</h5>\nROLE_BULK_OPERATION_ADMIN\n</section>\n"
              },
              "response": [
                {
                  "name": "A bulk operation was created.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.bulkoperation+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.bulkoperation+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"groupId\": \"<string>\",\n  \"failedParentId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"creationRamp\": \"<float>\",\n  \"operationPrototype\": {}\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/bulkoperations",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "bulkoperations"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.bulkoperation+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"self\": \"<uri>\",\n  \"id\": \"<string>\",\n  \"groupId\": \"<string>\",\n  \"failedParentId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"creationRamp\": \"<float>\",\n  \"operationPrototype\": {},\n  \"status\": \"ACTIVE\",\n  \"generalStatus\": \"SCHEDULED\",\n  \"progress\": {\n    \"pending\": \"<integer>\",\n    \"failed\": \"<integer>\",\n    \"executing\": \"<integer>\",\n    \"successful\": \"<integer>\",\n    \"all\": \"<integer>\"\n  }\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.bulkoperation+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"groupId\": \"<string>\",\n  \"failedParentId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"creationRamp\": \"<float>\",\n  \"operationPrototype\": {}\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/bulkoperations",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "bulkoperations"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve a list of bulk operations",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.bulkoperationcollection+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/devicecontrol/bulkoperations?currentPage=1&pageSize=5&withTotalElements=false",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "devicecontrol",
                    "bulkoperations"
                  ],
                  "query": [
                    {
                      "key": "currentPage",
                      "value": "1",
                      "description": "The current page of the paginated results."
                    },
                    {
                      "key": "pageSize",
                      "value": "5",
                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                    },
                    {
                      "key": "withTotalElements",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                    }
                  ]
                },
                "description": "Retrieve a list of bulk operations.\n\n<section><h5>Required roles</h5>\nROLE_BULK_OPERATION_READ\n</section>\n"
              },
              "response": [
                {
                  "name": "The request has succeeded and the list of bulk operations sent in the response.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.bulkoperationcollection+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/bulkoperations?currentPage=1&pageSize=5&withTotalElements=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "bulkoperations"
                      ],
                      "query": [
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.bulkoperationcollection+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"bulkOperations\": [\n    {\n      \"self\": \"<uri>\",\n      \"id\": \"<string>\",\n      \"groupId\": \"<string>\",\n      \"failedParentId\": \"<string>\",\n      \"startDate\": \"<dateTime>\",\n      \"creationRamp\": \"<float>\",\n      \"operationPrototype\": {},\n      \"status\": \"COMPLETED\",\n      \"generalStatus\": \"EXECUTING\",\n      \"progress\": {\n        \"pending\": \"<integer>\",\n        \"failed\": \"<integer>\",\n        \"executing\": \"<integer>\",\n        \"successful\": \"<integer>\",\n        \"all\": \"<integer>\"\n      }\n    },\n    {\n      \"self\": \"<uri>\",\n      \"id\": \"<string>\",\n      \"groupId\": \"<string>\",\n      \"failedParentId\": \"<string>\",\n      \"startDate\": \"<dateTime>\",\n      \"creationRamp\": \"<float>\",\n      \"operationPrototype\": {},\n      \"status\": \"DELETED\",\n      \"generalStatus\": \"EXECUTING_WITH_ERRORS\",\n      \"progress\": {\n        \"pending\": \"<integer>\",\n        \"failed\": \"<integer>\",\n        \"executing\": \"<integer>\",\n        \"successful\": \"<integer>\",\n        \"all\": \"<integer>\"\n      }\n    }\n  ],\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  }\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/bulkoperations?currentPage=1&pageSize=5&withTotalElements=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "bulkoperations"
                      ],
                      "query": [
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "deviceAccessToken",
          "item": [
            {
              "name": "Obtain device access token",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Ssl-Cert-Chain",
                    "value": "<string>",
                    "description": "Used to send a certificate chain in the header. Separate the chain with ` ` (a space character) and also each 64 bit block with ` ` (a space character).\n"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/devicecontrol/deviceAccessToken",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "devicecontrol",
                    "deviceAccessToken"
                  ]
                },
                "description": "Only those devices which are registered to use cert auth can authenticate via mTLS protocol and retrieve JWT token. Device access token API works only on port 8443 via mutual TLS (mTLS) connection.\nImmediate issuer of client certificate must present in Platform's truststore, if not then whole certificate chain needs to send in header and root or any intermediate certificate must be present in the Platform's truststore.\nWe must have the following:\n * private_key\n * client certificate\n * whole certificate chain (Optional - This API requires the client to send a custom header `X-SSL-CERT-CHAIN` only if the immediate issuer of the client's certificate is not uploaded as a trusted certificate on the platform. If the immediate issuer is already uploaded and trusted, the header can be omitted)\n"
              },
              "response": [
                {
                  "name": "Successfully retrieved device access token from device certificate.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Ssl-Cert-Chain",
                        "value": "<string>",
                        "description": "Used to send a certificate chain in the header. Separate the chain with ` ` (a space character) and also each 64 bit block with ` ` (a space character).\n"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/deviceAccessToken",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "deviceAccessToken"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"access_token\": \"<string>\"\n}"
                },
                {
                  "name": "Unable to parse certificate chain.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Ssl-Cert-Chain",
                        "value": "<string>",
                        "description": "Used to send a certificate chain in the header. Separate the chain with ` ` (a space character) and also each 64 bit block with ` ` (a space character).\n"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/deviceAccessToken",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "deviceAccessToken"
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "One or more certificates in the chain are revoked or the certificate chain is not valid. Revoked certificates are checked first, then the validity of the certificate chain.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Ssl-Cert-Chain",
                        "value": "<string>",
                        "description": "Used to send a certificate chain in the header. Separate the chain with ` ` (a space character) and also each 64 bit block with ` ` (a space character).\n"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/deviceAccessToken",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "deviceAccessToken"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Device access token feature is disabled.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Ssl-Cert-Chain",
                        "value": "<string>",
                        "description": "Used to send a certificate chain in the header. Separate the chain with ` ` (a space character) and also each 64 bit block with ` ` (a space character).\n"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/deviceAccessToken",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "deviceAccessToken"
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "The verification was not successful.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Ssl-Cert-Chain",
                        "value": "<string>",
                        "description": "Used to send a certificate chain in the header. Separate the chain with ` ` (a space character) and also each 64 bit block with ` ` (a space character).\n"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/devicecontrol/deviceAccessToken",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "devicecontrol",
                        "deviceAccessToken"
                      ]
                    }
                  },
                  "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                  "code": 422,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Retrieve URIs to collections of operations",
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "username",
                  "value": "{{basicAuthUsername}}",
                  "type": "string"
                },
                {
                  "key": "password",
                  "value": "{{basicAuthPassword}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/vnd.com.nsn.cumulocity.devicecontrolapi+json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/devicecontrol",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "devicecontrol"
              ]
            },
            "description": "Retrieve URIs to collections of operations.\n\n<section><h5>Required roles</h5>\nROLE_DEVICE_CONTROL_READ\n</section>\n"
          },
          "response": [
            {
              "name": "The request has succeeded and the URIs are sent in the response.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.devicecontrolapi+json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/devicecontrol",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "devicecontrol"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.com.nsn.cumulocity.devicecontrolapi+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"operations\": {\n    \"self\": \"<uri>\",\n    \"operations\": [\n      {\n        \"operation\": {\n          \"id\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"operation\": {\n          \"id\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ]\n  },\n  \"operationsByStatus\": \"<string>\",\n  \"operationsByAgentId\": \"<string>\",\n  \"operationsByAgentIdAndStatus\": \"<string>\",\n  \"operationsByDeviceId\": \"<string>\",\n  \"operationsByDeviceIdAndStatus\": \"<string>\",\n  \"self\": \"<uri>\"\n}"
            },
            {
              "name": "Authentication information is missing or invalid.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/devicecontrol",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "devicecontrol"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "application",
      "item": [
        {
          "name": "applications",
          "item": [
            {
              "name": "{id}",
              "item": [
                {
                  "name": "binaries",
                  "item": [
                    {
                      "name": "{binaryId}",
                      "item": [
                        {
                          "name": "Retrieve a specific application attachment",
                          "request": {
                            "auth": {
                              "type": "basic",
                              "basic": [
                                {
                                  "key": "username",
                                  "value": "{{basicAuthUsername}}",
                                  "type": "string"
                                },
                                {
                                  "key": "password",
                                  "value": "{{basicAuthPassword}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/zip"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/binaries/:binaryId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "binaries",
                                ":binaryId"
                              ],
                              "variable": [
                                {
                                  "key": "id",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of the application."
                                },
                                {
                                  "key": "binaryId",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of the binary."
                                }
                              ]
                            },
                            "description": "Retrieve a specific application attachment (by a given application ID and a given binary ID).\nThis method is not supported by microservice applications.\n\n<section><h5>Required roles</h5>\nROLE_APPLICATION_MANAGEMENT_ADMIN\n</section>\n"
                          },
                          "response": [
                            {
                              "name": "The request has succeeded and the application attachment is sent as a ZIP file in the response.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/zip"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/application/applications/:id/binaries/:binaryId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "application",
                                    "applications",
                                    ":id",
                                    "binaries",
                                    ":binaryId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "binaryId"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "text",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/zip"
                                }
                              ],
                              "cookie": [],
                              "body": "<binary>"
                            },
                            {
                              "name": "Authentication information is missing or invalid.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/application/applications/:id/binaries/:binaryId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "application",
                                    "applications",
                                    ":id",
                                    "binaries",
                                    ":binaryId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "binaryId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            }
                          ]
                        },
                        {
                          "name": "Delete a specific application attachment",
                          "request": {
                            "auth": {
                              "type": "basic",
                              "basic": [
                                {
                                  "key": "username",
                                  "value": "{{basicAuthUsername}}",
                                  "type": "string"
                                },
                                {
                                  "key": "password",
                                  "value": "{{basicAuthPassword}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/binaries/:binaryId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "binaries",
                                ":binaryId"
                              ],
                              "variable": [
                                {
                                  "key": "id",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of the application."
                                },
                                {
                                  "key": "binaryId",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of the binary."
                                }
                              ]
                            },
                            "description": "Delete  a specific application attachment (by a given application ID and a given binary ID).\nThis method is not supported by microservice applications.\n\n<section><h5>Required roles</h5>\nROLE_APPLICATION_MANAGEMENT_ADMIN <b>AND</b> tenant is the owner of the application\n</section>\n"
                          },
                          "response": [
                            {
                              "name": "An application binary was removed.",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/application/applications/:id/binaries/:binaryId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "application",
                                    "applications",
                                    ":id",
                                    "binaries",
                                    ":binaryId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "binaryId"
                                    }
                                  ]
                                }
                              },
                              "status": "No Content",
                              "code": 204,
                              "_postman_previewlanguage": "text",
                              "header": [],
                              "cookie": [],
                              "body": ""
                            },
                            {
                              "name": "Authentication information is missing or invalid.",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/application/applications/:id/binaries/:binaryId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "application",
                                    "applications",
                                    ":id",
                                    "binaries",
                                    ":binaryId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "binaryId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Not authorized to perform this operation.",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/application/applications/:id/binaries/:binaryId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "application",
                                    "applications",
                                    ":id",
                                    "binaries",
                                    ":binaryId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "binaryId"
                                    }
                                  ]
                                }
                              },
                              "status": "Forbidden",
                              "code": 403,
                              "_postman_previewlanguage": "text",
                              "header": [],
                              "cookie": [],
                              "body": ""
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Upload an application attachment",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "multipart/form-data"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.application+json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "file",
                              "contentType": "application/zip",
                              "description": "(Required) The ZIP file to be uploaded.",
                              "type": "file",
                              "src": []
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/application/applications/:id/binaries",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "applications",
                            ":id",
                            "binaries"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the application."
                            }
                          ]
                        },
                        "description": "Upload an application attachment (by a given application ID).\n\nFor the applications of type “microservice” and “web application” to be available for Cumulocity platform users, an attachment ZIP file must be uploaded.\n\nFor a microservice application, the ZIP file must consist of:\n\n* cumulocity.json - file describing the deployment\n* image.tar - executable Docker image\n\nFor a web application, the ZIP file must include an index.html file in the root directory.\n\n<section><h5>Required roles</h5>\nROLE_APPLICATION_MANAGEMENT_ADMIN <b>AND</b> tenant is the owner of the application\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The application attachments have been uploaded.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.application+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "formdata",
                              "formdata": [
                                {
                                  "key": "file",
                                  "contentType": "application/zip",
                                  "description": "(Required) The ZIP file to be uploaded.",
                                  "type": "file",
                                  "src": []
                                }
                              ]
                            },
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/binaries",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "binaries"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.application+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"availability\": \"PRIVATE\",\n  \"contextPath\": \"<string>\",\n  \"description\": \"<string>\",\n  \"id\": \"<string>\",\n  \"key\": \"<string>\",\n  \"name\": \"<string>\",\n  \"owner\": {\n    \"self\": \"<uri>\",\n    \"tenant\": {\n      \"id\": \"<string>\"\n    }\n  },\n  \"self\": \"<uri>\",\n  \"type\": \"MICROSERVICE\",\n  \"manifest\": {\n    \"apiVersion\": \"<string>\",\n    \"billingMode\": \"RESOURCES\",\n    \"contextPath\": \"<string>\",\n    \"extensions\": [\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"isolation\": \"MULTI_TENANT\",\n    \"livenessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"provider\": {\n      \"name\": \"<string>\"\n    },\n    \"readinessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"requestResources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"resources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"requiredRoles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"scale\": \"NONE\",\n    \"settings\": [\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      }\n    ],\n    \"settingsCategory\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"requiredRoles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"breadcrumbs\": \"<boolean>\",\n  \"contentSecurityPolicy\": \"<string>\",\n  \"dynamicOptionsUrl\": \"<string>\",\n  \"globalTitle\": \"<string>\",\n  \"legacy\": \"<boolean>\",\n  \"rightDrawer\": \"<boolean>\",\n  \"upgrade\": \"<boolean>\",\n  \"activeVersionId\": \"<string>\",\n  \"resourcesUrl\": \"<string>\"\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "formdata",
                              "formdata": [
                                {
                                  "key": "file",
                                  "contentType": "application/zip",
                                  "description": "(Required) The ZIP file to be uploaded.",
                                  "type": "file",
                                  "src": []
                                }
                              ]
                            },
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/binaries",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "binaries"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    },
                    {
                      "name": "Retrieve all application attachments",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.applicationbinaries+json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/application/applications/:id/binaries",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "applications",
                            ":id",
                            "binaries"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the application."
                            }
                          ]
                        },
                        "description": "Retrieve all application attachments.\nThis method is not supported by microservice applications.\n\n<section><h5>Required roles</h5>\nROLE_APPLICATION_MANAGEMENT_ADMIN\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The request has succeeded and the application attachments are sent in the response.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.applicationbinaries+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/binaries",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "binaries"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.applicationbinaries+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"attachments\": [\n    {\n      \"contextPath\": \"<string>\",\n      \"created\": \"<dateTime>\",\n      \"description\": \"<string>\",\n      \"downloadUrl\": \"<string>\",\n      \"id\": \"<string>\",\n      \"length\": \"<integer>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"contextPath\": \"<string>\",\n      \"created\": \"<dateTime>\",\n      \"description\": \"<string>\",\n      \"downloadUrl\": \"<string>\",\n      \"id\": \"<string>\",\n      \"length\": \"<integer>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/binaries",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "binaries"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Application not found.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/binaries",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "binaries"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "versions?version=1.0",
                  "item": [
                    {
                      "name": "Retrieve a specific version of an application",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.applicationVersion+json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/application/applications/:id/versions?version=1.0&version=<string>&tag=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "applications",
                            ":id",
                            "versions"
                          ],
                          "query": [
                            {
                              "key": "version",
                              "value": "1.0"
                            },
                            {
                              "key": "version",
                              "value": "<string>",
                              "description": "The version field of the application version."
                            },
                            {
                              "key": "tag",
                              "value": "<string>",
                              "description": "The tag of the application version."
                            }
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the application."
                            }
                          ]
                        },
                        "description": "Retrieve the selected version of an application in your tenant. To select the version, use only the version or only the tag query parameter.\n<section><h5>Required roles</h5> ROLE_APPLICATION_MANAGEMENT_READ </section>"
                      },
                      "response": [
                        {
                          "name": "The request has succeeded and the application version is sent in the response.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.applicationVersion+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/versions?version=<string>&tag=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "versions"
                              ],
                              "query": [
                                {
                                  "key": "version",
                                  "value": "<string>",
                                  "description": "The version field of the application version."
                                },
                                {
                                  "key": "tag",
                                  "value": "<string>",
                                  "description": "The tag of the application version."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.applicationVersion+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"version\": \"<string>\",\n  \"binaryId\": \"<string>\",\n  \"tag\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/versions?version=<string>&tag=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "versions"
                              ],
                              "query": [
                                {
                                  "key": "version",
                                  "value": "<string>",
                                  "description": "The version field of the application version."
                                },
                                {
                                  "key": "tag",
                                  "value": "<string>",
                                  "description": "The tag of the application version."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Application not found.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/versions?version=<string>&tag=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "versions"
                              ],
                              "query": [
                                {
                                  "key": "version",
                                  "value": "<string>",
                                  "description": "The version field of the application version."
                                },
                                {
                                  "key": "tag",
                                  "value": "<string>",
                                  "description": "The tag of the application version."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "both parameters (version and tag) are present.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/versions?version=<string>&tag=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "versions"
                              ],
                              "query": [
                                {
                                  "key": "version",
                                  "value": "<string>",
                                  "description": "The version field of the application version."
                                },
                                {
                                  "key": "tag",
                                  "value": "<string>",
                                  "description": "The tag of the application version."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                          "code": 422,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "versions",
                  "item": [
                    {
                      "name": "{version}",
                      "item": [
                        {
                          "name": "Replace an application version's tags",
                          "request": {
                            "auth": {
                              "type": "basic",
                              "basic": [
                                {
                                  "key": "username",
                                  "value": "{{basicAuthUsername}}",
                                  "type": "string"
                                },
                                {
                                  "key": "password",
                                  "value": "{{basicAuthPassword}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.applicationVersion+json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/versions/:version",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "versions",
                                ":version"
                              ],
                              "variable": [
                                {
                                  "key": "id",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of the application."
                                },
                                {
                                  "key": "version",
                                  "value": "<string>",
                                  "description": "(Required) Version of the application."
                                }
                              ]
                            },
                            "description": "Replaces the tags of a given application version in your tenant.\n\n<section><h5>Required roles</h5>\nROLE_APPLICATION_MANAGEMENT_ADMIN\n</section>\n"
                          },
                          "response": [
                            {
                              "name": "An application version was updated.",
                              "originalRequest": {
                                "method": "PUT",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.applicationVersion+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/application/applications/:id/versions/:version",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "application",
                                    "applications",
                                    ":id",
                                    "versions",
                                    ":version"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "version"
                                    }
                                  ]
                                }
                              },
                              "status": "Created",
                              "code": 201,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.applicationVersion+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"version\": \"<string>\",\n  \"binaryId\": \"<string>\",\n  \"tag\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
                            },
                            {
                              "name": "Authentication information is missing or invalid.",
                              "originalRequest": {
                                "method": "PUT",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/application/applications/:id/versions/:version",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "application",
                                    "applications",
                                    ":id",
                                    "versions",
                                    ":version"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "version"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Application version not found.",
                              "originalRequest": {
                                "method": "PUT",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/application/applications/:id/versions/:version",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "application",
                                    "applications",
                                    ":id",
                                    "versions",
                                    ":version"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "version"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Duplicate version/tag or versions limit exceeded.",
                              "originalRequest": {
                                "method": "PUT",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/application/applications/:id/versions/:version",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "application",
                                    "applications",
                                    ":id",
                                    "versions",
                                    ":version"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "version"
                                    }
                                  ]
                                }
                              },
                              "status": "Conflict",
                              "code": 409,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "tag contains unacceptable characters.",
                              "originalRequest": {
                                "method": "PUT",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/application/applications/:id/versions/:version",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "application",
                                    "applications",
                                    ":id",
                                    "versions",
                                    ":version"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "version"
                                    }
                                  ]
                                }
                              },
                              "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                              "code": 422,
                              "_postman_previewlanguage": "text",
                              "header": [],
                              "cookie": [],
                              "body": ""
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Retrieve all versions of an application",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.applicationVersionCollection+json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/application/applications/:id/versions",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "applications",
                            ":id",
                            "versions"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the application."
                            }
                          ]
                        },
                        "description": "Retrieve all versions of an application in your tenant.\n\n<section><h5>Required roles</h5>\nROLE_APPLICATION_MANAGEMENT_READ\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The request has succeeded and the list of application versions is sent in the response.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.applicationVersionCollection+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/versions",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "versions"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.applicationVersionCollection+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"versions\": [\n    {\n      \"version\": \"<string>\",\n      \"binaryId\": \"<string>\",\n      \"tag\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"version\": \"<string>\",\n      \"binaryId\": \"<string>\",\n      \"tag\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/versions",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "versions"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Application version not found.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/versions",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "versions"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "This application doesn't support versioning.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/versions",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "versions"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                          "code": 422,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "Create an application version",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "multipart/form-data"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.applicationVersion+json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "applicationBinary",
                              "contentType": "application/zip",
                              "description": "(Required) The ZIP file to be uploaded.",
                              "type": "file",
                              "src": []
                            },
                            {
                              "key": "applicationVersion",
                              "value": "<string>",
                              "description": "(Required) The JSON file with version information.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/application/applications/:id/versions",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "applications",
                            ":id",
                            "versions"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the application."
                            }
                          ]
                        },
                        "description": "Create an application version in your tenant.\n\nUploaded version and tags can only contain upper and lower case letters, integers and `.`,` + `,` -`. Other characters are prohibited.\n\n<section><h5>Required roles</h5>\nROLE_APPLICATION_MANAGEMENT_ADMIN\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "An application version was created.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.applicationVersion+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "formdata",
                              "formdata": [
                                {
                                  "key": "applicationBinary",
                                  "contentType": "application/zip",
                                  "description": "(Required) The ZIP file to be uploaded.",
                                  "type": "file",
                                  "src": []
                                },
                                {
                                  "key": "applicationVersion",
                                  "value": "<string>",
                                  "description": "(Required) The JSON file with version information.",
                                  "type": "text"
                                }
                              ]
                            },
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/versions",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "versions"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.applicationVersion+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"version\": \"<string>\",\n  \"binaryId\": \"<string>\",\n  \"tag\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "formdata",
                              "formdata": [
                                {
                                  "key": "applicationBinary",
                                  "contentType": "application/zip",
                                  "description": "(Required) The ZIP file to be uploaded.",
                                  "type": "file",
                                  "src": []
                                },
                                {
                                  "key": "applicationVersion",
                                  "value": "<string>",
                                  "description": "(Required) The JSON file with version information.",
                                  "type": "text"
                                }
                              ]
                            },
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/versions",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "versions"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Application version not found.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "formdata",
                              "formdata": [
                                {
                                  "key": "applicationBinary",
                                  "contentType": "application/zip",
                                  "description": "(Required) The ZIP file to be uploaded.",
                                  "type": "file",
                                  "src": []
                                },
                                {
                                  "key": "applicationVersion",
                                  "value": "<string>",
                                  "description": "(Required) The JSON file with version information.",
                                  "type": "text"
                                }
                              ]
                            },
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/versions",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "versions"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Duplicate version/tag or versions limit exceeded.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "formdata",
                              "formdata": [
                                {
                                  "key": "applicationBinary",
                                  "contentType": "application/zip",
                                  "description": "(Required) The ZIP file to be uploaded.",
                                  "type": "file",
                                  "src": []
                                },
                                {
                                  "key": "applicationVersion",
                                  "value": "<string>",
                                  "description": "(Required) The JSON file with version information.",
                                  "type": "text"
                                }
                              ]
                            },
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/versions",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "versions"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Conflict",
                          "code": 409,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "tag or version contains unacceptable characters.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "formdata",
                              "formdata": [
                                {
                                  "key": "applicationBinary",
                                  "contentType": "application/zip",
                                  "description": "(Required) The ZIP file to be uploaded.",
                                  "type": "file",
                                  "src": []
                                },
                                {
                                  "key": "applicationVersion",
                                  "value": "<string>",
                                  "description": "(Required) The JSON file with version information.",
                                  "type": "text"
                                }
                              ]
                            },
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/versions",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "versions"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                          "code": 422,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "Delete a specific version of an application",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/application/applications/:id/versions?version=<string>&tag=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "applications",
                            ":id",
                            "versions"
                          ],
                          "query": [
                            {
                              "key": "version",
                              "value": "<string>",
                              "description": "The version field of the application version."
                            },
                            {
                              "key": "tag",
                              "value": "<string>",
                              "description": "The tag of the application version."
                            }
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the application."
                            }
                          ]
                        },
                        "description": "Delete a specific version of an application in your tenant, by a given tag or version.\n\n<section><h5>Required roles</h5>\nROLE_APPLICATION_MANAGEMENT_READ\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "A version was removed.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/versions?version=<string>&tag=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "versions"
                              ],
                              "query": [
                                {
                                  "key": "version",
                                  "value": "<string>",
                                  "description": "The version field of the application version."
                                },
                                {
                                  "key": "tag",
                                  "value": "<string>",
                                  "description": "The tag of the application version."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/versions?version=<string>&tag=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "versions"
                              ],
                              "query": [
                                {
                                  "key": "version",
                                  "value": "<string>",
                                  "description": "The version field of the application version."
                                },
                                {
                                  "key": "tag",
                                  "value": "<string>",
                                  "description": "The tag of the application version."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Application version not found.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/versions?version=<string>&tag=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "versions"
                              ],
                              "query": [
                                {
                                  "key": "version",
                                  "value": "<string>",
                                  "description": "The version field of the application version."
                                },
                                {
                                  "key": "tag",
                                  "value": "<string>",
                                  "description": "The tag of the application version."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Version with tag latest cannot be removed.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/versions?version=<string>&tag=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "versions"
                              ],
                              "query": [
                                {
                                  "key": "version",
                                  "value": "<string>",
                                  "description": "The version field of the application version."
                                },
                                {
                                  "key": "tag",
                                  "value": "<string>",
                                  "description": "The tag of the application version."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Conflict",
                          "code": 409,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "both parameters (version and tag) are present.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/versions?version=<string>&tag=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "versions"
                              ],
                              "query": [
                                {
                                  "key": "version",
                                  "value": "<string>",
                                  "description": "The version field of the application version."
                                },
                                {
                                  "key": "tag",
                                  "value": "<string>",
                                  "description": "The tag of the application version."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                          "code": 422,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "bootstrapUser",
                  "item": [
                    {
                      "name": "Retrieve the bootstrap user for a specific application",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.user+json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/application/applications/:id/bootstrapUser",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "applications",
                            ":id",
                            "bootstrapUser"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the application."
                            }
                          ]
                        },
                        "description": "Retrieve the bootstrap user for a specific application (by a given ID).\n\nThis only works for microservice applications.\n\n<section><h5>Required roles</h5>\nROLE_APPLICATION_MANAGEMENT_ADMIN\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The request has succeeded and the bootstrap user of the application is sent in the response.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.user+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/bootstrapUser",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "bootstrapUser"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.user+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"name\": \"<string>\",\n  \"password\": \"<string>\",\n  \"tenant\": \"<string>\"\n}"
                        },
                        {
                          "name": "Bad request.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/bootstrapUser",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "bootstrapUser"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/bootstrapUser",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "bootstrapUser"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "clone",
                  "item": [
                    {
                      "name": "Copy an application",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.application+json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/application/applications/:id/clone?version=<string>&tag=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "applications",
                            ":id",
                            "clone"
                          ],
                          "query": [
                            {
                              "key": "version",
                              "value": "<string>",
                              "description": "The version field of the application version."
                            },
                            {
                              "key": "tag",
                              "value": "<string>",
                              "description": "The tag of the application version."
                            }
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the application."
                            }
                          ]
                        },
                        "description": "Copy an application (by a given ID).\n\nThis method is not supported by microservice applications.\n\nA request to the \"clone\" resource creates a new application based on an already existing one.\n\nThe properties are copied to the newly created application and the prefix \"clone\" is added to the properties `name`, `key` and `contextPath` in order to be unique.\n\nIf the target application is hosted and has an active version, the new application will have the active version with the same content.\n\nIf the original application is hosted with versions, then only one binary version is cloned. By default it is a version with the \"latest\" tag. You can also specify a target version directly by using exactly one of the query parameters `version` or `tag`.\n<section><h5>Required roles</h5>\nROLE_APPLICATION_MANAGEMENT_ADMIN\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "An application was copied.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.application+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/clone?version=<string>&tag=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "clone"
                              ],
                              "query": [
                                {
                                  "key": "version",
                                  "value": "<string>",
                                  "description": "The version field of the application version."
                                },
                                {
                                  "key": "tag",
                                  "value": "<string>",
                                  "description": "The tag of the application version."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.application+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"availability\": \"PRIVATE\",\n  \"contextPath\": \"<string>\",\n  \"description\": \"<string>\",\n  \"id\": \"<string>\",\n  \"key\": \"<string>\",\n  \"name\": \"<string>\",\n  \"owner\": {\n    \"self\": \"<uri>\",\n    \"tenant\": {\n      \"id\": \"<string>\"\n    }\n  },\n  \"self\": \"<uri>\",\n  \"type\": \"MICROSERVICE\",\n  \"manifest\": {\n    \"apiVersion\": \"<string>\",\n    \"billingMode\": \"RESOURCES\",\n    \"contextPath\": \"<string>\",\n    \"extensions\": [\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"isolation\": \"MULTI_TENANT\",\n    \"livenessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"provider\": {\n      \"name\": \"<string>\"\n    },\n    \"readinessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"requestResources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"resources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"requiredRoles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"scale\": \"NONE\",\n    \"settings\": [\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      }\n    ],\n    \"settingsCategory\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"requiredRoles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"breadcrumbs\": \"<boolean>\",\n  \"contentSecurityPolicy\": \"<string>\",\n  \"dynamicOptionsUrl\": \"<string>\",\n  \"globalTitle\": \"<string>\",\n  \"legacy\": \"<boolean>\",\n  \"rightDrawer\": \"<boolean>\",\n  \"upgrade\": \"<boolean>\",\n  \"activeVersionId\": \"<string>\",\n  \"resourcesUrl\": \"<string>\"\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/clone?version=<string>&tag=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "clone"
                              ],
                              "query": [
                                {
                                  "key": "version",
                                  "value": "<string>",
                                  "description": "The version field of the application version."
                                },
                                {
                                  "key": "tag",
                                  "value": "<string>",
                                  "description": "The tag of the application version."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Unprocessable Entity – method not supported",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/application/applications/:id/clone?version=<string>&tag=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "application",
                                "applications",
                                ":id",
                                "clone"
                              ],
                              "query": [
                                {
                                  "key": "version",
                                  "value": "<string>",
                                  "description": "The version field of the application version."
                                },
                                {
                                  "key": "tag",
                                  "value": "<string>",
                                  "description": "The tag of the application version."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                          "code": 422,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Retrieve a specific application",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.application+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/application/applications/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "application",
                        "applications",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the application."
                        }
                      ]
                    },
                    "description": "Retrieve a specific application (by a given ID).\n\n<section><h5>Required roles</h5>\nROLE_APPLICATION_MANAGEMENT_READ <b>OR</b> current user has explicit access to the application\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the application is sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.application+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/application/applications/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "applications",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.application+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"availability\": \"PRIVATE\",\n  \"contextPath\": \"<string>\",\n  \"description\": \"<string>\",\n  \"id\": \"<string>\",\n  \"key\": \"<string>\",\n  \"name\": \"<string>\",\n  \"owner\": {\n    \"self\": \"<uri>\",\n    \"tenant\": {\n      \"id\": \"<string>\"\n    }\n  },\n  \"self\": \"<uri>\",\n  \"type\": \"MICROSERVICE\",\n  \"manifest\": {\n    \"apiVersion\": \"<string>\",\n    \"billingMode\": \"RESOURCES\",\n    \"contextPath\": \"<string>\",\n    \"extensions\": [\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"isolation\": \"MULTI_TENANT\",\n    \"livenessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"provider\": {\n      \"name\": \"<string>\"\n    },\n    \"readinessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"requestResources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"resources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"requiredRoles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"scale\": \"NONE\",\n    \"settings\": [\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      }\n    ],\n    \"settingsCategory\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"requiredRoles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"breadcrumbs\": \"<boolean>\",\n  \"contentSecurityPolicy\": \"<string>\",\n  \"dynamicOptionsUrl\": \"<string>\",\n  \"globalTitle\": \"<string>\",\n  \"legacy\": \"<boolean>\",\n  \"rightDrawer\": \"<boolean>\",\n  \"upgrade\": \"<boolean>\",\n  \"activeVersionId\": \"<string>\",\n  \"resourcesUrl\": \"<string>\"\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/application/applications/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "applications",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Application not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/application/applications/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "applications",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Update a specific application",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.application+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.application+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"availability\": \"PRIVATE\",\n  \"contextPath\": \"<string>\",\n  \"description\": \"<string>\",\n  \"key\": \"<string>\",\n  \"name\": \"<string>\",\n  \"manifest\": {\n    \"apiVersion\": \"<string>\",\n    \"billingMode\": \"RESOURCES\",\n    \"contextPath\": \"<string>\",\n    \"extensions\": [\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"isolation\": \"MULTI_TENANT\",\n    \"livenessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"provider\": {\n      \"name\": \"<string>\"\n    },\n    \"readinessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"requestResources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"resources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"requiredRoles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"scale\": \"NONE\",\n    \"settings\": [\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      }\n    ],\n    \"settingsCategory\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"requiredRoles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"breadcrumbs\": \"<boolean>\",\n  \"contentSecurityPolicy\": \"<string>\",\n  \"dynamicOptionsUrl\": \"<string>\",\n  \"globalTitle\": \"<string>\",\n  \"legacy\": \"<boolean>\",\n  \"rightDrawer\": \"<boolean>\",\n  \"upgrade\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/application/applications/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "application",
                        "applications",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the application."
                        }
                      ]
                    },
                    "description": "Update a specific application (by a given ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_ADMIN\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "An application was updated.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.application+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.application+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"availability\": \"PRIVATE\",\n  \"contextPath\": \"<string>\",\n  \"description\": \"<string>\",\n  \"key\": \"<string>\",\n  \"name\": \"<string>\",\n  \"manifest\": {\n    \"apiVersion\": \"<string>\",\n    \"billingMode\": \"RESOURCES\",\n    \"contextPath\": \"<string>\",\n    \"extensions\": [\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"isolation\": \"MULTI_TENANT\",\n    \"livenessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"provider\": {\n      \"name\": \"<string>\"\n    },\n    \"readinessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"requestResources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"resources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"requiredRoles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"scale\": \"NONE\",\n    \"settings\": [\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      }\n    ],\n    \"settingsCategory\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"requiredRoles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"breadcrumbs\": \"<boolean>\",\n  \"contentSecurityPolicy\": \"<string>\",\n  \"dynamicOptionsUrl\": \"<string>\",\n  \"globalTitle\": \"<string>\",\n  \"legacy\": \"<boolean>\",\n  \"rightDrawer\": \"<boolean>\",\n  \"upgrade\": \"<boolean>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/application/applications/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "applications",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.application+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"availability\": \"PRIVATE\",\n  \"contextPath\": \"<string>\",\n  \"description\": \"<string>\",\n  \"id\": \"<string>\",\n  \"key\": \"<string>\",\n  \"name\": \"<string>\",\n  \"owner\": {\n    \"self\": \"<uri>\",\n    \"tenant\": {\n      \"id\": \"<string>\"\n    }\n  },\n  \"self\": \"<uri>\",\n  \"type\": \"MICROSERVICE\",\n  \"manifest\": {\n    \"apiVersion\": \"<string>\",\n    \"billingMode\": \"RESOURCES\",\n    \"contextPath\": \"<string>\",\n    \"extensions\": [\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"isolation\": \"MULTI_TENANT\",\n    \"livenessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"provider\": {\n      \"name\": \"<string>\"\n    },\n    \"readinessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"requestResources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"resources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"requiredRoles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"scale\": \"NONE\",\n    \"settings\": [\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      }\n    ],\n    \"settingsCategory\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"requiredRoles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"breadcrumbs\": \"<boolean>\",\n  \"contentSecurityPolicy\": \"<string>\",\n  \"dynamicOptionsUrl\": \"<string>\",\n  \"globalTitle\": \"<string>\",\n  \"legacy\": \"<boolean>\",\n  \"rightDrawer\": \"<boolean>\",\n  \"upgrade\": \"<boolean>\",\n  \"activeVersionId\": \"<string>\",\n  \"resourcesUrl\": \"<string>\"\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.application+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"availability\": \"PRIVATE\",\n  \"contextPath\": \"<string>\",\n  \"description\": \"<string>\",\n  \"key\": \"<string>\",\n  \"name\": \"<string>\",\n  \"manifest\": {\n    \"apiVersion\": \"<string>\",\n    \"billingMode\": \"RESOURCES\",\n    \"contextPath\": \"<string>\",\n    \"extensions\": [\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"isolation\": \"MULTI_TENANT\",\n    \"livenessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"provider\": {\n      \"name\": \"<string>\"\n    },\n    \"readinessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"requestResources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"resources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"requiredRoles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"scale\": \"NONE\",\n    \"settings\": [\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      }\n    ],\n    \"settingsCategory\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"requiredRoles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"breadcrumbs\": \"<boolean>\",\n  \"contentSecurityPolicy\": \"<string>\",\n  \"dynamicOptionsUrl\": \"<string>\",\n  \"globalTitle\": \"<string>\",\n  \"legacy\": \"<boolean>\",\n  \"rightDrawer\": \"<boolean>\",\n  \"upgrade\": \"<boolean>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/application/applications/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "applications",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Application not found.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.application+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"availability\": \"PRIVATE\",\n  \"contextPath\": \"<string>\",\n  \"description\": \"<string>\",\n  \"key\": \"<string>\",\n  \"name\": \"<string>\",\n  \"manifest\": {\n    \"apiVersion\": \"<string>\",\n    \"billingMode\": \"RESOURCES\",\n    \"contextPath\": \"<string>\",\n    \"extensions\": [\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"isolation\": \"MULTI_TENANT\",\n    \"livenessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"provider\": {\n      \"name\": \"<string>\"\n    },\n    \"readinessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"requestResources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"resources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"requiredRoles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"scale\": \"NONE\",\n    \"settings\": [\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      }\n    ],\n    \"settingsCategory\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"requiredRoles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"breadcrumbs\": \"<boolean>\",\n  \"contentSecurityPolicy\": \"<string>\",\n  \"dynamicOptionsUrl\": \"<string>\",\n  \"globalTitle\": \"<string>\",\n  \"legacy\": \"<boolean>\",\n  \"rightDrawer\": \"<boolean>\",\n  \"upgrade\": \"<boolean>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/application/applications/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "applications",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Delete an application",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/application/applications/:id?force=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "application",
                        "applications",
                        ":id"
                      ],
                      "query": [
                        {
                          "key": "force",
                          "value": "false",
                          "description": "Force deletion by unsubscribing all tenants from the application first and then deleting the application itself."
                        }
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the application."
                        }
                      ]
                    },
                    "description": "Delete an application (by a given ID).\nThis method is not supported by microservice applications.\n\n> **&#9432; Info:** With regards to a hosted application, there is a caching mechanism in place that keeps the information about the placement of application files (html, javascript, css, fonts, etc.). Removing a hosted application, in normal circumstances, will cause the subsequent requests for application files to fail with an HTTP 404 error because the application is removed synchronously, its files are immediately removed on the node serving the request and at the same time the information is propagated to other nodes – but in rare cases there might be a delay with this propagation. In such situations, the files of the removed application can be served from those nodes up until the aforementioned cache expires. For the same reason, the cache can also cause HTTP 404 errors when the application is updated as it will keep the path to the files of the old version of the application. The cache is filled on demand, so there should not be issues if application files were not accessed prior to the delete request. The expiration delay of the cache can differ, but should not take more than one minute.\n\n<section><h5>Required roles</h5>\nROLE_APPLICATION_MANAGEMENT_ADMIN <b>AND</b> tenant is the owner of the application\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "An application was removed.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/application/applications/:id?force=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "applications",
                            ":id"
                          ],
                          "query": [
                            {
                              "key": "force",
                              "value": "false",
                              "description": "Force deletion by unsubscribing all tenants from the application first and then deleting the application itself."
                            }
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/application/applications/:id?force=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "applications",
                            ":id"
                          ],
                          "query": [
                            {
                              "key": "force",
                              "value": "false",
                              "description": "Force deletion by unsubscribing all tenants from the application first and then deleting the application itself."
                            }
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not authorized to perform this operation.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/application/applications/:id?force=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "applications",
                            ":id"
                          ],
                          "query": [
                            {
                              "key": "force",
                              "value": "false",
                              "description": "Force deletion by unsubscribing all tenants from the application first and then deleting the application itself."
                            }
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Application not found.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/application/applications/:id?force=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "applications",
                            ":id"
                          ],
                          "query": [
                            {
                              "key": "force",
                              "value": "false",
                              "description": "Force deletion by unsubscribing all tenants from the application first and then deleting the application itself."
                            }
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Create an application",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Cumulocity-Processing-Mode",
                    "value": "PERSISTENT",
                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.com.nsn.cumulocity.application+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.application+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"key\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"MICROSERVICE\",\n  \"availability\": \"PRIVATE\",\n  \"contextPath\": \"<string>\",\n  \"description\": \"<string>\",\n  \"manifest\": {\n    \"apiVersion\": \"<string>\",\n    \"billingMode\": \"RESOURCES\",\n    \"contextPath\": \"<string>\",\n    \"extensions\": [\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"isolation\": \"MULTI_TENANT\",\n    \"livenessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"provider\": {\n      \"name\": \"<string>\"\n    },\n    \"readinessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"requestResources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"resources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"requiredRoles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"scale\": \"NONE\",\n    \"settings\": [\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      }\n    ],\n    \"settingsCategory\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"requiredRoles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"breadcrumbs\": \"<boolean>\",\n  \"contentSecurityPolicy\": \"<string>\",\n  \"dynamicOptionsUrl\": \"<string>\",\n  \"globalTitle\": \"<string>\",\n  \"legacy\": \"<boolean>\",\n  \"rightDrawer\": \"<boolean>\",\n  \"upgrade\": \"<boolean>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/application/applications",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "application",
                    "applications"
                  ]
                },
                "description": "Create an application on your tenant.\n\n<section><h5>Required roles</h5>\nROLE_APPLICATION_MANAGEMENT_ADMIN\n</section>\n"
              },
              "response": [
                {
                  "name": "An application was created.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.application+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.application+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"key\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"MICROSERVICE\",\n  \"availability\": \"PRIVATE\",\n  \"contextPath\": \"<string>\",\n  \"description\": \"<string>\",\n  \"manifest\": {\n    \"apiVersion\": \"<string>\",\n    \"billingMode\": \"RESOURCES\",\n    \"contextPath\": \"<string>\",\n    \"extensions\": [\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"isolation\": \"MULTI_TENANT\",\n    \"livenessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"provider\": {\n      \"name\": \"<string>\"\n    },\n    \"readinessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"requestResources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"resources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"requiredRoles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"scale\": \"NONE\",\n    \"settings\": [\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      }\n    ],\n    \"settingsCategory\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"requiredRoles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"breadcrumbs\": \"<boolean>\",\n  \"contentSecurityPolicy\": \"<string>\",\n  \"dynamicOptionsUrl\": \"<string>\",\n  \"globalTitle\": \"<string>\",\n  \"legacy\": \"<boolean>\",\n  \"rightDrawer\": \"<boolean>\",\n  \"upgrade\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/application/applications",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "application",
                        "applications"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.application+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"availability\": \"PRIVATE\",\n  \"contextPath\": \"<string>\",\n  \"description\": \"<string>\",\n  \"id\": \"<string>\",\n  \"key\": \"<string>\",\n  \"name\": \"<string>\",\n  \"owner\": {\n    \"self\": \"<uri>\",\n    \"tenant\": {\n      \"id\": \"<string>\"\n    }\n  },\n  \"self\": \"<uri>\",\n  \"type\": \"MICROSERVICE\",\n  \"manifest\": {\n    \"apiVersion\": \"<string>\",\n    \"billingMode\": \"RESOURCES\",\n    \"contextPath\": \"<string>\",\n    \"extensions\": [\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"isolation\": \"MULTI_TENANT\",\n    \"livenessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"provider\": {\n      \"name\": \"<string>\"\n    },\n    \"readinessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"requestResources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"resources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"requiredRoles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"scale\": \"NONE\",\n    \"settings\": [\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      }\n    ],\n    \"settingsCategory\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"requiredRoles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"breadcrumbs\": \"<boolean>\",\n  \"contentSecurityPolicy\": \"<string>\",\n  \"dynamicOptionsUrl\": \"<string>\",\n  \"globalTitle\": \"<string>\",\n  \"legacy\": \"<boolean>\",\n  \"rightDrawer\": \"<boolean>\",\n  \"upgrade\": \"<boolean>\",\n  \"activeVersionId\": \"<string>\",\n  \"resourcesUrl\": \"<string>\"\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.application+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"key\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"MICROSERVICE\",\n  \"availability\": \"PRIVATE\",\n  \"contextPath\": \"<string>\",\n  \"description\": \"<string>\",\n  \"manifest\": {\n    \"apiVersion\": \"<string>\",\n    \"billingMode\": \"RESOURCES\",\n    \"contextPath\": \"<string>\",\n    \"extensions\": [\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"isolation\": \"MULTI_TENANT\",\n    \"livenessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"provider\": {\n      \"name\": \"<string>\"\n    },\n    \"readinessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"requestResources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"resources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"requiredRoles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"scale\": \"NONE\",\n    \"settings\": [\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      }\n    ],\n    \"settingsCategory\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"requiredRoles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"breadcrumbs\": \"<boolean>\",\n  \"contentSecurityPolicy\": \"<string>\",\n  \"dynamicOptionsUrl\": \"<string>\",\n  \"globalTitle\": \"<string>\",\n  \"legacy\": \"<boolean>\",\n  \"rightDrawer\": \"<boolean>\",\n  \"upgrade\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/application/applications",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "application",
                        "applications"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Duplicate key/name.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.application+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"key\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"MICROSERVICE\",\n  \"availability\": \"PRIVATE\",\n  \"contextPath\": \"<string>\",\n  \"description\": \"<string>\",\n  \"manifest\": {\n    \"apiVersion\": \"<string>\",\n    \"billingMode\": \"RESOURCES\",\n    \"contextPath\": \"<string>\",\n    \"extensions\": [\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"isolation\": \"MULTI_TENANT\",\n    \"livenessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"provider\": {\n      \"name\": \"<string>\"\n    },\n    \"readinessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"requestResources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"resources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"requiredRoles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"scale\": \"NONE\",\n    \"settings\": [\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      }\n    ],\n    \"settingsCategory\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"requiredRoles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"breadcrumbs\": \"<boolean>\",\n  \"contentSecurityPolicy\": \"<string>\",\n  \"dynamicOptionsUrl\": \"<string>\",\n  \"globalTitle\": \"<string>\",\n  \"legacy\": \"<boolean>\",\n  \"rightDrawer\": \"<boolean>\",\n  \"upgrade\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/application/applications",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "application",
                        "applications"
                      ]
                    }
                  },
                  "status": "Conflict",
                  "code": 409,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Unprocessable Entity – invalid payload.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.application+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"key\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"MICROSERVICE\",\n  \"availability\": \"PRIVATE\",\n  \"contextPath\": \"<string>\",\n  \"description\": \"<string>\",\n  \"manifest\": {\n    \"apiVersion\": \"<string>\",\n    \"billingMode\": \"RESOURCES\",\n    \"contextPath\": \"<string>\",\n    \"extensions\": [\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"isolation\": \"MULTI_TENANT\",\n    \"livenessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"provider\": {\n      \"name\": \"<string>\"\n    },\n    \"readinessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"requestResources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"resources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"requiredRoles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"scale\": \"NONE\",\n    \"settings\": [\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      }\n    ],\n    \"settingsCategory\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"requiredRoles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"breadcrumbs\": \"<boolean>\",\n  \"contentSecurityPolicy\": \"<string>\",\n  \"dynamicOptionsUrl\": \"<string>\",\n  \"globalTitle\": \"<string>\",\n  \"legacy\": \"<boolean>\",\n  \"rightDrawer\": \"<boolean>\",\n  \"upgrade\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/application/applications",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "application",
                        "applications"
                      ]
                    }
                  },
                  "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                  "code": 422,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Retrieve all applications",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.applicationcollection+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/application/applications?currentPage=1&name=<string>&owner=<string>&pageSize=5&providedFor=<string>&subscriber=<string>&tenant=<string>&type=HOSTED&user=<string>&withTotalElements=false&withTotalPages=false&hasVersions=",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "application",
                    "applications"
                  ],
                  "query": [
                    {
                      "key": "currentPage",
                      "value": "1",
                      "description": "The current page of the paginated results."
                    },
                    {
                      "key": "name",
                      "value": "<string>",
                      "description": "The name of the application."
                    },
                    {
                      "key": "owner",
                      "value": "<string>",
                      "description": "The ID of the tenant that owns the applications."
                    },
                    {
                      "key": "pageSize",
                      "value": "5",
                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                    },
                    {
                      "key": "providedFor",
                      "value": "<string>",
                      "description": "The ID of a tenant that is subscribed to the applications but doesn't own them."
                    },
                    {
                      "key": "subscriber",
                      "value": "<string>",
                      "description": "The ID of a tenant that is subscribed to the applications."
                    },
                    {
                      "key": "tenant",
                      "value": "<string>",
                      "description": "The ID of a tenant that either owns the application or is subscribed to the applications."
                    },
                    {
                      "key": "type",
                      "value": "HOSTED",
                      "description": "The type of the application. It is possible to use multiple values separated by a comma. For example, `EXTERNAL,HOSTED` will return only applications with type `EXTERNAL` or `HOSTED`."
                    },
                    {
                      "key": "user",
                      "value": "<string>",
                      "description": "The ID of a user that has access to the applications."
                    },
                    {
                      "key": "withTotalElements",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                    },
                    {
                      "key": "withTotalPages",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                    },
                    {
                      "key": "hasVersions",
                      "value": "",
                      "description": "When set to `true`, the returned result contains applications with an `applicationVersions` field that is not empty. When set to `false`, the result will contain applications with an empty `applicationVersions` field."
                    }
                  ]
                },
                "description": "Retrieve all applications on your tenant.\n\n<section><h5>Required roles</h5>\nROLE_APPLICATION_MANAGEMENT_READ\n</section>\n"
              },
              "response": [
                {
                  "name": "The request has succeeded and the list of applications is sent in the response.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.applicationcollection+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/application/applications?currentPage=1&name=<string>&owner=<string>&pageSize=5&providedFor=<string>&subscriber=<string>&tenant=<string>&type=HOSTED&user=<string>&withTotalElements=false&withTotalPages=false&hasVersions=",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "application",
                        "applications"
                      ],
                      "query": [
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "name",
                          "value": "<string>",
                          "description": "The name of the application."
                        },
                        {
                          "key": "owner",
                          "value": "<string>",
                          "description": "The ID of the tenant that owns the applications."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "providedFor",
                          "value": "<string>",
                          "description": "The ID of a tenant that is subscribed to the applications but doesn't own them."
                        },
                        {
                          "key": "subscriber",
                          "value": "<string>",
                          "description": "The ID of a tenant that is subscribed to the applications."
                        },
                        {
                          "key": "tenant",
                          "value": "<string>",
                          "description": "The ID of a tenant that either owns the application or is subscribed to the applications."
                        },
                        {
                          "key": "type",
                          "value": "HOSTED",
                          "description": "The type of the application. It is possible to use multiple values separated by a comma. For example, `EXTERNAL,HOSTED` will return only applications with type `EXTERNAL` or `HOSTED`."
                        },
                        {
                          "key": "user",
                          "value": "<string>",
                          "description": "The ID of a user that has access to the applications."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "hasVersions",
                          "value": "",
                          "description": "When set to `true`, the returned result contains applications with an `applicationVersions` field that is not empty. When set to `false`, the result will contain applications with an empty `applicationVersions` field."
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.applicationcollection+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"applications\": [\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"MICROSERVICE\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"MULTI_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    },\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"HOSTED\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"PER_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    }\n  ],\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  }\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/application/applications?currentPage=1&name=<string>&owner=<string>&pageSize=5&providedFor=<string>&subscriber=<string>&tenant=<string>&type=HOSTED&user=<string>&withTotalElements=false&withTotalPages=false&hasVersions=",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "application",
                        "applications"
                      ],
                      "query": [
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "name",
                          "value": "<string>",
                          "description": "The name of the application."
                        },
                        {
                          "key": "owner",
                          "value": "<string>",
                          "description": "The ID of the tenant that owns the applications."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "providedFor",
                          "value": "<string>",
                          "description": "The ID of a tenant that is subscribed to the applications but doesn't own them."
                        },
                        {
                          "key": "subscriber",
                          "value": "<string>",
                          "description": "The ID of a tenant that is subscribed to the applications."
                        },
                        {
                          "key": "tenant",
                          "value": "<string>",
                          "description": "The ID of a tenant that either owns the application or is subscribed to the applications."
                        },
                        {
                          "key": "type",
                          "value": "HOSTED",
                          "description": "The type of the application. It is possible to use multiple values separated by a comma. For example, `EXTERNAL,HOSTED` will return only applications with type `EXTERNAL` or `HOSTED`."
                        },
                        {
                          "key": "user",
                          "value": "<string>",
                          "description": "The ID of a user that has access to the applications."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "hasVersions",
                          "value": "",
                          "description": "When set to `true`, the returned result contains applications with an `applicationVersions` field that is not empty. When set to `false`, the result will contain applications with an empty `applicationVersions` field."
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "applicationsByName",
          "item": [
            {
              "name": "{name}",
              "item": [
                {
                  "name": "Retrieve applications by name",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.applicationcollection+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/application/applicationsByName/:name",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "application",
                        "applicationsByName",
                        ":name"
                      ],
                      "variable": [
                        {
                          "key": "name",
                          "value": "<string>",
                          "description": "(Required) The name of the application."
                        }
                      ]
                    },
                    "description": "Retrieve applications by name.\n\n<section><h5>Required roles</h5>\nROLE_APPLICATION_MANAGEMENT_READ\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the applications are sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.applicationcollection+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/application/applicationsByName/:name",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "applicationsByName",
                            ":name"
                          ],
                          "variable": [
                            {
                              "key": "name"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.applicationcollection+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"applications\": [\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"HOSTED\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"PER_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    },\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"MICROSERVICE\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"PER_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    }\n  ],\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  }\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/application/applicationsByName/:name",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "applicationsByName",
                            ":name"
                          ],
                          "variable": [
                            {
                              "key": "name"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "applicationsByTenant",
          "item": [
            {
              "name": "{tenantId}",
              "item": [
                {
                  "name": "Retrieve applications by tenant",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.applicationcollection+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/application/applicationsByTenant/:tenantId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "application",
                        "applicationsByTenant",
                        ":tenantId"
                      ],
                      "variable": [
                        {
                          "key": "tenantId",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of a Cumulocity tenant."
                        }
                      ]
                    },
                    "description": "Retrieve applications subscribed or owned by a particular tenant (by a given tenant ID).\n\n<section><h5>Required roles</h5>\nROLE_APPLICATION_MANAGEMENT_READ\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the applications are sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.applicationcollection+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/application/applicationsByTenant/:tenantId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "applicationsByTenant",
                            ":tenantId"
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.applicationcollection+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"applications\": [\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"MICROSERVICE\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"PER_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    },\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"HOSTED\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"PER_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    }\n  ],\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  }\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/application/applicationsByTenant/:tenantId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "applicationsByTenant",
                            ":tenantId"
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "applicationsByOwner",
          "item": [
            {
              "name": "{tenantId}",
              "item": [
                {
                  "name": "Retrieve applications by owner",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.applicationcollection+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/application/applicationsByOwner/:tenantId?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "application",
                        "applicationsByOwner",
                        ":tenantId"
                      ],
                      "query": [
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantId",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of a Cumulocity tenant."
                        }
                      ]
                    },
                    "description": "Retrieve all applications owned by a particular tenant (by a given tenant ID).\n\n<section><h5>Required roles</h5>\nROLE_APPLICATION_MANAGEMENT_READ\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the applications are sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.applicationcollection+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/application/applicationsByOwner/:tenantId?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "applicationsByOwner",
                            ":tenantId"
                          ],
                          "query": [
                            {
                              "key": "currentPage",
                              "value": "1",
                              "description": "The current page of the paginated results."
                            },
                            {
                              "key": "pageSize",
                              "value": "5",
                              "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                            },
                            {
                              "key": "withTotalElements",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                            },
                            {
                              "key": "withTotalPages",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.applicationcollection+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"applications\": [\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"EXTERNAL\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"MULTI_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    },\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"HOSTED\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"MULTI_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    }\n  ],\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  }\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/application/applicationsByOwner/:tenantId?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "applicationsByOwner",
                            ":tenantId"
                          ],
                          "query": [
                            {
                              "key": "currentPage",
                              "value": "1",
                              "description": "The current page of the paginated results."
                            },
                            {
                              "key": "pageSize",
                              "value": "5",
                              "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                            },
                            {
                              "key": "withTotalElements",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                            },
                            {
                              "key": "withTotalPages",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "applicationsByUser",
          "item": [
            {
              "name": "{username}",
              "item": [
                {
                  "name": "Retrieve applications by user",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.applicationcollection+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/application/applicationsByUser/:username?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "application",
                        "applicationsByUser",
                        ":username"
                      ],
                      "query": [
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ],
                      "variable": [
                        {
                          "key": "username",
                          "value": "<string>",
                          "description": "(Required) The username of the a user."
                        }
                      ]
                    },
                    "description": "Retrieve all applications for a particular user (by a given username).\n\n<section><h5>Required roles</h5>\n(ROLE_USER_MANAGEMENT_OWN_READ <b>AND</b> is the current user) <b>OR</b> (ROLE_USER_MANAGEMENT_READ <b>AND</b> ROLE_APPLICATION_MANAGEMENT_READ)\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the applications are sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.applicationcollection+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/application/applicationsByUser/:username?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "applicationsByUser",
                            ":username"
                          ],
                          "query": [
                            {
                              "key": "currentPage",
                              "value": "1",
                              "description": "The current page of the paginated results."
                            },
                            {
                              "key": "pageSize",
                              "value": "5",
                              "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                            },
                            {
                              "key": "withTotalElements",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                            },
                            {
                              "key": "withTotalPages",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                            }
                          ],
                          "variable": [
                            {
                              "key": "username"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.applicationcollection+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"applications\": [\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"MICROSERVICE\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"PER_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    },\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"EXTERNAL\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"PER_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    }\n  ],\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  }\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/application/applicationsByUser/:username?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "applicationsByUser",
                            ":username"
                          ],
                          "query": [
                            {
                              "key": "currentPage",
                              "value": "1",
                              "description": "The current page of the paginated results."
                            },
                            {
                              "key": "pageSize",
                              "value": "5",
                              "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                            },
                            {
                              "key": "withTotalElements",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                            },
                            {
                              "key": "withTotalPages",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                            }
                          ],
                          "variable": [
                            {
                              "key": "username"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "currentApplication",
          "item": [
            {
              "name": "settings",
              "item": [
                {
                  "name": "Retrieve the current application settings",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.applicationsettings+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/application/currentApplication/settings",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "application",
                        "currentApplication",
                        "settings"
                      ]
                    },
                    "description": "Retrieve the current application settings.\nThis only works inside an application, for example, a microservice.\n\n<section><h5>Required roles</h5>\nMicroservice bootstrap user <b>OR</b> microservice service user required.\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the current application settings are sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.applicationsettings+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/application/currentApplication/settings",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "currentApplication",
                            "settings"
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.applicationsettings+json"
                        }
                      ],
                      "cookie": [],
                      "body": "[\n  {\n    \"key\": \"<string>\",\n    \"valueSchema\": {\n      \"type\": \"<string>\"\n    },\n    \"defaultValue\": \"<string>\",\n    \"editable\": \"<boolean>\",\n    \"inheritFromOwner\": \"<boolean>\"\n  },\n  {\n    \"key\": \"<string>\",\n    \"valueSchema\": {\n      \"type\": \"<string>\"\n    },\n    \"defaultValue\": \"<string>\",\n    \"editable\": \"<boolean>\",\n    \"inheritFromOwner\": \"<boolean>\"\n  }\n]"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/application/currentApplication/settings",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "currentApplication",
                            "settings"
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not enough permissions/roles to perform this operation.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/application/currentApplication/settings",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "currentApplication",
                            "settings"
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "subscriptions",
              "item": [
                {
                  "name": "Retrieve the subscribed users of the current application",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.applicationusercollection+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/application/currentApplication/subscriptions",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "application",
                        "currentApplication",
                        "subscriptions"
                      ]
                    },
                    "description": "Retrieve the subscribed users of the current application.\n\n<section><h5>Required roles</h5>\nMicroservice bootstrap user required.\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the list of subscribed users for the current application is sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.applicationusercollection+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/application/currentApplication/subscriptions",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "currentApplication",
                            "subscriptions"
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.applicationusercollection+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"users\": [\n    {\n      \"name\": \"<string>\",\n      \"password\": \"<string>\",\n      \"tenant\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"password\": \"<string>\",\n      \"tenant\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/application/currentApplication/subscriptions",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "application",
                            "currentApplication",
                            "subscriptions"
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Retrieve the current application",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.application+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/application/currentApplication",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "application",
                    "currentApplication"
                  ]
                },
                "description": "Retrieve the current application.\nThis only works inside an application, for example, a microservice.\n\n<section><h5>Required roles</h5>\nMicroservice bootstrap user required.\n</section>\n"
              },
              "response": [
                {
                  "name": "The request has succeeded and the current application sent in the response.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.application+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/application/currentApplication",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "application",
                        "currentApplication"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.application+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"availability\": \"PRIVATE\",\n  \"contextPath\": \"<string>\",\n  \"description\": \"<string>\",\n  \"id\": \"<string>\",\n  \"key\": \"<string>\",\n  \"name\": \"<string>\",\n  \"owner\": {\n    \"self\": \"<uri>\",\n    \"tenant\": {\n      \"id\": \"<string>\"\n    }\n  },\n  \"self\": \"<uri>\",\n  \"type\": \"MICROSERVICE\",\n  \"manifest\": {\n    \"apiVersion\": \"<string>\",\n    \"billingMode\": \"RESOURCES\",\n    \"contextPath\": \"<string>\",\n    \"extensions\": [\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"isolation\": \"MULTI_TENANT\",\n    \"livenessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"provider\": {\n      \"name\": \"<string>\"\n    },\n    \"readinessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"requestResources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"resources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"requiredRoles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"scale\": \"NONE\",\n    \"settings\": [\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      }\n    ],\n    \"settingsCategory\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"requiredRoles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"breadcrumbs\": \"<boolean>\",\n  \"contentSecurityPolicy\": \"<string>\",\n  \"dynamicOptionsUrl\": \"<string>\",\n  \"globalTitle\": \"<string>\",\n  \"legacy\": \"<boolean>\",\n  \"rightDrawer\": \"<boolean>\",\n  \"upgrade\": \"<boolean>\",\n  \"activeVersionId\": \"<string>\",\n  \"resourcesUrl\": \"<string>\"\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/application/currentApplication",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "application",
                        "currentApplication"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Not enough permissions/roles to perform this operation.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/application/currentApplication",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "application",
                        "currentApplication"
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Update the current application",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.com.nsn.cumulocity.application+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.application+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"availability\": \"PRIVATE\",\n  \"contextPath\": \"<string>\",\n  \"description\": \"<string>\",\n  \"key\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"HOSTED\",\n  \"manifest\": {\n    \"apiVersion\": \"<string>\",\n    \"billingMode\": \"RESOURCES\",\n    \"contextPath\": \"<string>\",\n    \"extensions\": [\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"isolation\": \"PER_TENANT\",\n    \"livenessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"provider\": {\n      \"name\": \"<string>\"\n    },\n    \"readinessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"requestResources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"resources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"requiredRoles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"scale\": \"NONE\",\n    \"settings\": [\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      }\n    ],\n    \"settingsCategory\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"requiredRoles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"breadcrumbs\": \"<boolean>\",\n  \"contentSecurityPolicy\": \"<string>\",\n  \"dynamicOptionsUrl\": \"<string>\",\n  \"globalTitle\": \"<string>\",\n  \"legacy\": \"<boolean>\",\n  \"rightDrawer\": \"<boolean>\",\n  \"upgrade\": \"<boolean>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/application/currentApplication",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "application",
                    "currentApplication"
                  ]
                },
                "description": "Update the current application.\nThis only works inside an application, for example, a microservice. This method is deprecated as it is only used by legacy microservices that are not running on Kubernetes.\n\n<section><h5>Required roles</h5>\nMicroservice bootstrap user required.\n</section>\n"
              },
              "response": [
                {
                  "name": "The current application was updated.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.application+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.application+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"availability\": \"PRIVATE\",\n  \"contextPath\": \"<string>\",\n  \"description\": \"<string>\",\n  \"key\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"HOSTED\",\n  \"manifest\": {\n    \"apiVersion\": \"<string>\",\n    \"billingMode\": \"RESOURCES\",\n    \"contextPath\": \"<string>\",\n    \"extensions\": [\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"isolation\": \"PER_TENANT\",\n    \"livenessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"provider\": {\n      \"name\": \"<string>\"\n    },\n    \"readinessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"requestResources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"resources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"requiredRoles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"scale\": \"NONE\",\n    \"settings\": [\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      }\n    ],\n    \"settingsCategory\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"requiredRoles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"breadcrumbs\": \"<boolean>\",\n  \"contentSecurityPolicy\": \"<string>\",\n  \"dynamicOptionsUrl\": \"<string>\",\n  \"globalTitle\": \"<string>\",\n  \"legacy\": \"<boolean>\",\n  \"rightDrawer\": \"<boolean>\",\n  \"upgrade\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/application/currentApplication",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "application",
                        "currentApplication"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.application+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"availability\": \"PRIVATE\",\n  \"contextPath\": \"<string>\",\n  \"description\": \"<string>\",\n  \"id\": \"<string>\",\n  \"key\": \"<string>\",\n  \"name\": \"<string>\",\n  \"owner\": {\n    \"self\": \"<uri>\",\n    \"tenant\": {\n      \"id\": \"<string>\"\n    }\n  },\n  \"self\": \"<uri>\",\n  \"type\": \"MICROSERVICE\",\n  \"manifest\": {\n    \"apiVersion\": \"<string>\",\n    \"billingMode\": \"RESOURCES\",\n    \"contextPath\": \"<string>\",\n    \"extensions\": [\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"isolation\": \"MULTI_TENANT\",\n    \"livenessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"provider\": {\n      \"name\": \"<string>\"\n    },\n    \"readinessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"requestResources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"resources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"requiredRoles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"scale\": \"NONE\",\n    \"settings\": [\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      }\n    ],\n    \"settingsCategory\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"requiredRoles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"breadcrumbs\": \"<boolean>\",\n  \"contentSecurityPolicy\": \"<string>\",\n  \"dynamicOptionsUrl\": \"<string>\",\n  \"globalTitle\": \"<string>\",\n  \"legacy\": \"<boolean>\",\n  \"rightDrawer\": \"<boolean>\",\n  \"upgrade\": \"<boolean>\",\n  \"activeVersionId\": \"<string>\",\n  \"resourcesUrl\": \"<string>\"\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.application+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"availability\": \"PRIVATE\",\n  \"contextPath\": \"<string>\",\n  \"description\": \"<string>\",\n  \"key\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"HOSTED\",\n  \"manifest\": {\n    \"apiVersion\": \"<string>\",\n    \"billingMode\": \"RESOURCES\",\n    \"contextPath\": \"<string>\",\n    \"extensions\": [\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"isolation\": \"PER_TENANT\",\n    \"livenessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"provider\": {\n      \"name\": \"<string>\"\n    },\n    \"readinessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"requestResources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"resources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"requiredRoles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"scale\": \"NONE\",\n    \"settings\": [\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      }\n    ],\n    \"settingsCategory\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"requiredRoles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"breadcrumbs\": \"<boolean>\",\n  \"contentSecurityPolicy\": \"<string>\",\n  \"dynamicOptionsUrl\": \"<string>\",\n  \"globalTitle\": \"<string>\",\n  \"legacy\": \"<boolean>\",\n  \"rightDrawer\": \"<boolean>\",\n  \"upgrade\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/application/currentApplication",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "application",
                        "currentApplication"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Not enough permissions/roles to perform this operation.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.application+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"availability\": \"PRIVATE\",\n  \"contextPath\": \"<string>\",\n  \"description\": \"<string>\",\n  \"key\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"HOSTED\",\n  \"manifest\": {\n    \"apiVersion\": \"<string>\",\n    \"billingMode\": \"RESOURCES\",\n    \"contextPath\": \"<string>\",\n    \"extensions\": [\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"isolation\": \"PER_TENANT\",\n    \"livenessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"provider\": {\n      \"name\": \"<string>\"\n    },\n    \"readinessProbe\": {\n      \"failureThreshold\": \"<integer>\",\n      \"periodSeconds\": \"<integer>\",\n      \"timeoutSeconds\": \"<integer>\",\n      \"successThreshold\": \"<integer>\",\n      \"initialDelaySeconds\": \"<integer>\",\n      \"httpGet\": {\n        \"path\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    },\n    \"requestResources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"resources\": {\n      \"cpu\": \"<string>\",\n      \"memory\": \"<string>\"\n    },\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"requiredRoles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"scale\": \"NONE\",\n    \"settings\": [\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"valueSchema\": {\n          \"type\": \"<string>\"\n        },\n        \"defaultValue\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"inheritFromOwner\": \"<boolean>\"\n      }\n    ],\n    \"settingsCategory\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"requiredRoles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"breadcrumbs\": \"<boolean>\",\n  \"contentSecurityPolicy\": \"<string>\",\n  \"dynamicOptionsUrl\": \"<string>\",\n  \"globalTitle\": \"<string>\",\n  \"legacy\": \"<boolean>\",\n  \"rightDrawer\": \"<boolean>\",\n  \"upgrade\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/application/currentApplication",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "application",
                        "currentApplication"
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Retrieve URIs to collections of applications",
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "username",
                  "value": "{{basicAuthUsername}}",
                  "type": "string"
                },
                {
                  "key": "password",
                  "value": "{{basicAuthPassword}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/vnd.com.nsn.cumulocity.applicationapi+json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/application",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "application"
              ]
            },
            "description": "Retrieve URIs and URI templates to collections of applications.\n\n<section><h5>Required roles</h5>\nROLE_APPLICATION_MANAGEMENT_READ\n</section>\n"
          },
          "response": [
            {
              "name": "The request has succeeded and and the URIs are sent in the response.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.applicationapi+json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/application",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "application"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.com.nsn.cumulocity.applicationapi+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"applications\": \"<string>\",\n  \"applicationById\": \"<string>\",\n  \"applicationsByName\": \"<string>\",\n  \"applicationsByTenant\": \"<string>\",\n  \"applicationsByOwner\": \"<string>\",\n  \"applicationsByUser\": \"<string>\",\n  \"self\": \"<uri>\"\n}"
            },
            {
              "name": "Authentication information is missing or invalid.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/application",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "application"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "audit",
      "item": [
        {
          "name": "auditRecords",
          "item": [
            {
              "name": "{id}",
              "item": [
                {
                  "name": "Retrieve a specific audit record",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.auditrecord+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/audit/auditRecords/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "audit",
                        "auditRecords",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the audit record."
                        }
                      ]
                    },
                    "description": "Retrieve a specific audit record by a given ID.\n\n<section><h5>Required roles</h5>\nROLE_AUDIT_READ <b>OR</b> AUDIT_READ permission on the source\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the audit record is sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.auditrecord+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/audit/auditRecords/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "audit",
                            "auditRecords",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.auditrecord+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"activity\": \"<string>\",\n  \"source\": {\n    \"id\": \"<string>\",\n    \"self\": \"<uri>\"\n  },\n  \"text\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"type\": \"BulkOperation\",\n  \"application\": \"<string>\",\n  \"c8y_Metadata\": {\n    \"action\": \"SUBSCRIBE\"\n  },\n  \"changes\": [\n    {\n      \"attribute\": \"<string>\",\n      \"changeType\": \"REPLACED\",\n      \"newValue\": \"<string>\",\n      \"previousValue\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"attribute\": \"<string>\",\n      \"changeType\": \"ADDED\",\n      \"newValue\": \"<string>\",\n      \"previousValue\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"creationTime\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"severity\": \"MINOR\",\n  \"user\": \"<string>\"\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/audit/auditRecords/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "audit",
                            "auditRecords",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Create an audit record",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.com.nsn.cumulocity.auditrecord+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.auditrecord+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"activity\": \"<string>\",\n  \"source\": {\n    \"id\": \"<string>\"\n  },\n  \"text\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"type\": \"InventoryRole\",\n  \"user\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/audit/auditRecords",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "audit",
                    "auditRecords"
                  ]
                },
                "description": "Create an audit record.\n\n<section><h5>Required roles</h5>\nROLE_AUDIT_ADMIN <b>OR</b> ROLE_SYSTEM <b>OR</b> AUDIT_ADMIN permission on the resource\n</section>\n"
              },
              "response": [
                {
                  "name": "An audit record was created.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.auditrecord+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.auditrecord+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"activity\": \"<string>\",\n  \"source\": {\n    \"id\": \"<string>\"\n  },\n  \"text\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"type\": \"InventoryRole\",\n  \"user\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/audit/auditRecords",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "audit",
                        "auditRecords"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.auditrecord+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"activity\": \"<string>\",\n  \"source\": {\n    \"id\": \"<string>\",\n    \"self\": \"<uri>\"\n  },\n  \"text\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"type\": \"BulkOperation\",\n  \"application\": \"<string>\",\n  \"c8y_Metadata\": {\n    \"action\": \"SUBSCRIBE\"\n  },\n  \"changes\": [\n    {\n      \"attribute\": \"<string>\",\n      \"changeType\": \"REPLACED\",\n      \"newValue\": \"<string>\",\n      \"previousValue\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"attribute\": \"<string>\",\n      \"changeType\": \"ADDED\",\n      \"newValue\": \"<string>\",\n      \"previousValue\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"creationTime\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"severity\": \"MINOR\",\n  \"user\": \"<string>\"\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.auditrecord+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"activity\": \"<string>\",\n  \"source\": {\n    \"id\": \"<string>\"\n  },\n  \"text\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"type\": \"InventoryRole\",\n  \"user\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/audit/auditRecords",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "audit",
                        "auditRecords"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve all audit records",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.auditrecordcollection+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/audit/auditRecords?application=<string>&currentPage=1&dateFrom=<dateTime>&dateTo=<dateTime>&pageSize=5&source=<string>&type=<string>&user=<string>&withTotalElements=false&withTotalPages=false",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "audit",
                    "auditRecords"
                  ],
                  "query": [
                    {
                      "key": "application",
                      "value": "<string>",
                      "description": "Name of the application from which the audit was carried out."
                    },
                    {
                      "key": "currentPage",
                      "value": "1",
                      "description": "The current page of the paginated results."
                    },
                    {
                      "key": "dateFrom",
                      "value": "<dateTime>",
                      "description": "Start date or date and time of the audit record (device time)."
                    },
                    {
                      "key": "dateTo",
                      "value": "<dateTime>",
                      "description": "End date or date and time of the audit record (device time)."
                    },
                    {
                      "key": "pageSize",
                      "value": "5",
                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                    },
                    {
                      "key": "source",
                      "value": "<string>",
                      "description": "The platform component ID to which the audit is associated."
                    },
                    {
                      "key": "type",
                      "value": "<string>",
                      "description": "The type of audit record to search for."
                    },
                    {
                      "key": "user",
                      "value": "<string>",
                      "description": "The username to search for."
                    },
                    {
                      "key": "withTotalElements",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                    },
                    {
                      "key": "withTotalPages",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                    }
                  ]
                },
                "description": "Retrieve all audit records registered on your tenant, or a specific subset based on queries.\n"
              },
              "response": [
                {
                  "name": "The request has succeeded and all audit records are sent in the response.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.auditrecordcollection+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/audit/auditRecords?application=<string>&currentPage=1&dateFrom=<dateTime>&dateTo=<dateTime>&pageSize=5&source=<string>&type=<string>&user=<string>&withTotalElements=false&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "audit",
                        "auditRecords"
                      ],
                      "query": [
                        {
                          "key": "application",
                          "value": "<string>",
                          "description": "Name of the application from which the audit was carried out."
                        },
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the audit record (device time)."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the audit record (device time)."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The platform component ID to which the audit is associated."
                        },
                        {
                          "key": "type",
                          "value": "<string>",
                          "description": "The type of audit record to search for."
                        },
                        {
                          "key": "user",
                          "value": "<string>",
                          "description": "The username to search for."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.auditrecordcollection+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"prev\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"next\": \"<string>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  },\n  \"auditRecords\": [\n    {\n      \"activity\": \"<string>\",\n      \"source\": {\n        \"id\": \"<string>\",\n        \"self\": \"<uri>\"\n      },\n      \"text\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"Report\",\n      \"application\": \"<string>\",\n      \"c8y_Metadata\": {\n        \"action\": \"SUBSCRIBE\"\n      },\n      \"changes\": [\n        {\n          \"attribute\": \"<string>\",\n          \"changeType\": \"REPLACED\",\n          \"newValue\": \"<string>\",\n          \"previousValue\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"attribute\": \"<string>\",\n          \"changeType\": \"REPLACED\",\n          \"newValue\": \"<string>\",\n          \"previousValue\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"creationTime\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"self\": \"<uri>\",\n      \"severity\": \"CRITICAL\",\n      \"user\": \"<string>\"\n    },\n    {\n      \"activity\": \"<string>\",\n      \"source\": {\n        \"id\": \"<string>\",\n        \"self\": \"<uri>\"\n      },\n      \"text\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"TenantAuthConfig\",\n      \"application\": \"<string>\",\n      \"c8y_Metadata\": {\n        \"action\": \"SUBSCRIBE\"\n      },\n      \"changes\": [\n        {\n          \"attribute\": \"<string>\",\n          \"changeType\": \"REPLACED\",\n          \"newValue\": \"<string>\",\n          \"previousValue\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"attribute\": \"<string>\",\n          \"changeType\": \"REPLACED\",\n          \"newValue\": \"<string>\",\n          \"previousValue\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"creationTime\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"self\": \"<uri>\",\n      \"severity\": \"INFORMATION\",\n      \"user\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/audit/auditRecords?application=<string>&currentPage=1&dateFrom=<dateTime>&dateTo=<dateTime>&pageSize=5&source=<string>&type=<string>&user=<string>&withTotalElements=false&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "audit",
                        "auditRecords"
                      ],
                      "query": [
                        {
                          "key": "application",
                          "value": "<string>",
                          "description": "Name of the application from which the audit was carried out."
                        },
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the audit record (device time)."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the audit record (device time)."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The platform component ID to which the audit is associated."
                        },
                        {
                          "key": "type",
                          "value": "<string>",
                          "description": "The type of audit record to search for."
                        },
                        {
                          "key": "user",
                          "value": "<string>",
                          "description": "The username to search for."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Retrieve URIs to collections of audits",
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "username",
                  "value": "{{basicAuthUsername}}",
                  "type": "string"
                },
                {
                  "key": "password",
                  "value": "{{basicAuthPassword}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/vnd.com.nsn.cumulocity.auditapi+json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/audit",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "audit"
              ]
            },
            "description": "Retrieve URIs and URI templates to collections of audit records.\n\n<section><h5>Required roles</h5>\nROLE_AUDIT_READ\n</section>\n"
          },
          "response": [
            {
              "name": "The request has succeeded and the URIs are sent in the response.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.auditapi+json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/audit",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "audit"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.com.nsn.cumulocity.auditapi+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"auditRecords\": {\n    \"self\": \"<uri>\",\n    \"auditRecords\": [\n      {\n        \"activity\": \"<string>\",\n        \"source\": {\n          \"id\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"text\": \"<string>\",\n        \"time\": \"<dateTime>\",\n        \"type\": \"TenantAuthConfig\",\n        \"application\": \"<string>\",\n        \"c8y_Metadata\": {\n          \"action\": \"DELETE\"\n        },\n        \"changes\": [\n          {\n            \"attribute\": \"<string>\",\n            \"changeType\": \"REPLACED\",\n            \"newValue\": \"<string>\",\n            \"previousValue\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"attribute\": \"<string>\",\n            \"changeType\": \"ADDED\",\n            \"newValue\": \"<string>\",\n            \"previousValue\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"creationTime\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"self\": \"<uri>\",\n        \"severity\": \"WARNING\",\n        \"user\": \"<string>\"\n      },\n      {\n        \"activity\": \"<string>\",\n        \"source\": {\n          \"id\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"text\": \"<string>\",\n        \"time\": \"<dateTime>\",\n        \"type\": \"Tenant\",\n        \"application\": \"<string>\",\n        \"c8y_Metadata\": {\n          \"action\": \"SCALE\"\n        },\n        \"changes\": [\n          {\n            \"attribute\": \"<string>\",\n            \"changeType\": \"ADDED\",\n            \"newValue\": \"<string>\",\n            \"previousValue\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"attribute\": \"<string>\",\n            \"changeType\": \"REPLACED\",\n            \"newValue\": \"<string>\",\n            \"previousValue\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"creationTime\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"self\": \"<uri>\",\n        \"severity\": \"MINOR\",\n        \"user\": \"<string>\"\n      }\n    ]\n  },\n  \"auditRecordsForApplication\": \"<string>\",\n  \"auditRecordsForType\": \"<string>\",\n  \"auditRecordsForUser\": \"<string>\",\n  \"auditRecordsForTypeAndApplication\": \"<string>\",\n  \"auditRecordsForTypeAndUserAndApplication\": \"<string>\",\n  \"auditRecordsForUserAndApplication\": \"<string>\",\n  \"auditRecordsForUserAndType\": \"<string>\",\n  \"self\": \"<uri>\"\n}"
            },
            {
              "name": "Authentication information is missing or invalid.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/audit",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "audit"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "event",
      "item": [
        {
          "name": "events",
          "item": [
            {
              "name": "{id}",
              "item": [
                {
                  "name": "binaries",
                  "item": [
                    {
                      "name": "Attach a file to a specific event",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "text/plain"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "file",
                          "file": {}
                        },
                        "url": {
                          "raw": "{{baseUrl}}/event/events/:id/binaries",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "event",
                            "events",
                            ":id",
                            "binaries"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the event."
                            }
                          ]
                        },
                        "description": "Upload a file (binary) as an attachment of a specific event by a given ID.\nThe size of the attachment is configurable, and the default size is 50 MiB. The default chunk size is 5MiB.\n\n> **&#9432; Info:** If there is a binary already attached to the event, the POST request results in a 409 error.\n\nWhen the file has been uploaded, the corresponding event contains the fragment `c8y_IsBinary` similar to:\n\n```json\n\"c8y_IsBinary\": {\n    \"name\": \"hello.txt\",\n    \"length\": 365,\n    \"type\": \"text/plain\"\n}\n```\n\nThere are two request body schemas you can use for your POST requests.\n`text/plain` is preselected (see below).\nIf you set it to `multipart/form-data` each value is sent as a block of data (body part), with a user agent-defined delimiter (`boundary`) separating each part.\nThe keys are given in the `Content-Disposition` header of each part.\n\n```http\nPOST /event/events/{id}/binaries\nHost: https://<TENANT_DOMAIN>\nAuthorization: <AUTHORIZATION>\nAccept: application/json\nContent-Type: multipart/form-data;boundary=\"boundary\"\n\n--boundary\nContent-Disposition: form-data; name=\"object\"\n\n{ \"name\": \"hello.txt\", \"type\": \"text/plain\" }\n--boundary\nContent-Disposition: form-data; name=\"file\"; filename=\"hello.txt\"\nContent-Type: text/plain\n\n<FILE_CONTENTS>\n--boundary--\n```\n\n<section><h5>Required roles</h5>\nROLE_EVENT_ADMIN <b>OR</b> owner of the source <b>OR</b> EVENT_ADMIN permission on the source\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "A file was uploaded.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "text/plain"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "file",
                              "file": {}
                            },
                            "url": {
                              "raw": "{{baseUrl}}/event/events/:id/binaries",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "event",
                                "events",
                                ":id",
                                "binaries"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"name\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"source\": \"<string>\",\n  \"type\": \"<string>\"\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "text/plain"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "file",
                              "file": {}
                            },
                            "url": {
                              "raw": "{{baseUrl}}/event/events/:id/binaries",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "event",
                                "events",
                                ":id",
                                "binaries"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Event not found.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "text/plain"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "file",
                              "file": {}
                            },
                            "url": {
                              "raw": "{{baseUrl}}/event/events/:id/binaries",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "event",
                                "events",
                                ":id",
                                "binaries"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "An attachment exists already.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "text/plain"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "file",
                              "file": {}
                            },
                            "url": {
                              "raw": "{{baseUrl}}/event/events/:id/binaries",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "event",
                                "events",
                                ":id",
                                "binaries"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Conflict",
                          "code": 409,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    },
                    {
                      "name": "Retrieve the attached file of a specific event",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/octet-stream"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/event/events/:id/binaries",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "event",
                            "events",
                            ":id",
                            "binaries"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the event."
                            }
                          ]
                        },
                        "description": "Retrieve the attached file (binary) of a specific event by a given ID.\n\n<section><h5>Required roles</h5>\nROLE_EVENT_READ <b>OR</b> EVENT_READ permission on the source\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The request has succeeded and the file is sent in the response.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/octet-stream"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/event/events/:id/binaries",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "event",
                                "events",
                                ":id",
                                "binaries"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/octet-stream"
                            }
                          ],
                          "cookie": [],
                          "body": "<binary>"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/event/events/:id/binaries",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "event",
                                "events",
                                ":id",
                                "binaries"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Attachment not found.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/event/events/:id/binaries",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "event",
                                "events",
                                ":id",
                                "binaries"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    },
                    {
                      "name": "Replace the attached file of a specific event",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "text/plain"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "file",
                          "file": {}
                        },
                        "url": {
                          "raw": "{{baseUrl}}/event/events/:id/binaries",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "event",
                            "events",
                            ":id",
                            "binaries"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the event."
                            }
                          ]
                        },
                        "description": "Upload and replace the attached file (binary) of a specific event by a given ID.<br>\nThe size of the attachment is configurable, and the default size is 50 MiB. The default chunk size is 5MiB.\n\n<section><h5>Required roles</h5>\nROLE_EVENT_ADMIN <b>OR</b> owner of the source <b>OR</b> EVENT_ADMIN permission on the source\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "A file was uploaded.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "text/plain"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "file",
                              "file": {}
                            },
                            "url": {
                              "raw": "{{baseUrl}}/event/events/:id/binaries",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "event",
                                "events",
                                ":id",
                                "binaries"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"name\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"source\": \"<string>\",\n  \"type\": \"<string>\"\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "text/plain"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "file",
                              "file": {}
                            },
                            "url": {
                              "raw": "{{baseUrl}}/event/events/:id/binaries",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "event",
                                "events",
                                ":id",
                                "binaries"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Event not found.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "text/plain"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "file",
                              "file": {}
                            },
                            "url": {
                              "raw": "{{baseUrl}}/event/events/:id/binaries",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "event",
                                "events",
                                ":id",
                                "binaries"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    },
                    {
                      "name": "Remove the attached file from a specific event",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/event/events/:id/binaries",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "event",
                            "events",
                            ":id",
                            "binaries"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the event."
                            }
                          ]
                        },
                        "description": "Remove the attached file (binary) from a specific event by a given ID.\n\n<section><h5>Required roles</h5>\nROLE_EVENT_ADMIN <b>OR</b> owner of the source <b>OR</b> EVENT_ADMIN permission on the source\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "A file was removed.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/event/events/:id/binaries",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "event",
                                "events",
                                ":id",
                                "binaries"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/event/events/:id/binaries",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "event",
                                "events",
                                ":id",
                                "binaries"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Event not found.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/event/events/:id/binaries",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "event",
                                "events",
                                ":id",
                                "binaries"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Retrieve a specific event",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.event+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/event/events/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "event",
                        "events",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the event."
                        }
                      ]
                    },
                    "description": "Retrieve a specific event by a given ID.\n\n<section><h5>Required roles</h5>\nROLE_EVENT_READ <b>OR</b> owner of the source <b>OR</b> EVENT_READ permission on the source\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the event is sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.event+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/event/events/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "event",
                            "events",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.event+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"creationTime\": \"<dateTime>\",\n  \"lastUpdated\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"source\": {\n    \"id\": \"<string>\",\n    \"self\": \"<uri>\"\n  },\n  \"text\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"type\": \"<string>\"\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/event/events/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "event",
                            "events",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Event not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/event/events/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "event",
                            "events",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Update a specific event",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.event+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.event+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"text\": \"<string>\",\n  \"et_cef\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  },\n  \"Ut_a\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  },\n  \"eu01\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/event/events/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "event",
                        "events",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the event."
                        }
                      ]
                    },
                    "description": "Update a specific event by a given ID. Only its text description and custom fragments can be updated.\n\n<section><h5>Required roles</h5>\nROLE_EVENT_ADMIN <b>OR</b> owner of the source <b>OR</b> EVENT_ADMIN permission on the source\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "An event was updated.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.event+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.event+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"text\": \"<string>\",\n  \"et_cef\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  },\n  \"Ut_a\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  },\n  \"eu01\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/event/events/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "event",
                            "events",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.event+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"creationTime\": \"<dateTime>\",\n  \"lastUpdated\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"source\": {\n    \"id\": \"<string>\",\n    \"self\": \"<uri>\"\n  },\n  \"text\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"type\": \"<string>\"\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.event+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"text\": \"<string>\",\n  \"et_cef\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  },\n  \"Ut_a\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  },\n  \"eu01\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/event/events/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "event",
                            "events",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Event not found.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.event+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"text\": \"<string>\",\n  \"et_cef\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  },\n  \"Ut_a\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  },\n  \"eu01\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/event/events/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "event",
                            "events",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unprocessable Entity – invalid payload.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.event+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"text\": \"<string>\",\n  \"et_cef\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  },\n  \"Ut_a\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  },\n  \"eu01\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/event/events/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "event",
                            "events",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                      "code": 422,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Remove a specific event",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/event/events/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "event",
                        "events",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the event."
                        }
                      ]
                    },
                    "description": "Remove a specific event by a given ID.\n\n<section><h5>Required roles</h5>\nROLE_EVENT_ADMIN <b>OR</b> owner of the source <b>OR</b> EVENT_ADMIN permission on the source\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "An event was removed.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/event/events/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "event",
                            "events",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/event/events/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "event",
                            "events",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not authorized to perform this operation.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/event/events/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "event",
                            "events",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Event not found.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/event/events/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "event",
                            "events",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Create an event",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Cumulocity-Processing-Mode",
                    "value": "PERSISTENT",
                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.com.nsn.cumulocity.event+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.event+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"source\": {\n    \"id\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"text\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/event/events",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "event",
                    "events"
                  ]
                },
                "description": "An event must be associated with a source (managed object) identified by an ID.<br>\nIn general, each event consists of:\n\n*  A type to identify the nature of the event.\n*  A time stamp to indicate when the event was last updated.\n*  A description of the event.\n*  The managed object which originated the event.\n\n<section><h5>Required roles</h5>\nROLE_EVENT_ADMIN <b>OR</b> owner of the source <b>OR</b> EVENT_ADMIN permission on the source\n</section>\n"
              },
              "response": [
                {
                  "name": "An event was created.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.event+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.event+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"source\": {\n    \"id\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"text\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/event/events",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "event",
                        "events"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.event+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"creationTime\": \"<dateTime>\",\n  \"lastUpdated\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"source\": {\n    \"id\": \"<string>\",\n    \"self\": \"<uri>\"\n  },\n  \"text\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"type\": \"<string>\"\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.event+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"source\": {\n    \"id\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"text\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/event/events",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "event",
                        "events"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Not authorized to perform this operation.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.event+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"source\": {\n    \"id\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"text\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/event/events",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "event",
                        "events"
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Unprocessable Entity – invalid payload.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.event+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"source\": {\n    \"id\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"text\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/event/events",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "event",
                        "events"
                      ]
                    }
                  },
                  "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                  "code": 422,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Retrieve all events",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.eventcollection+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/event/events?createdFrom=<dateTime>&createdTo=<dateTime>&currentPage=1&dateFrom=<dateTime>&dateTo=<dateTime>&fragmentType=<string>&fragmentValue=<string>&lastUpdatedFrom=<dateTime>&lastUpdatedTo=<dateTime>&pageSize=5&revert=false&source=<string>&type=<string>&withSourceAssets=false&withSourceDevices=false&withTotalElements=false&withTotalPages=false",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "event",
                    "events"
                  ],
                  "query": [
                    {
                      "key": "createdFrom",
                      "value": "<dateTime>",
                      "description": "Start date or date and time of the event's creation (set by the platform during creation)."
                    },
                    {
                      "key": "createdTo",
                      "value": "<dateTime>",
                      "description": "End date or date and time of the event's creation (set by the platform during creation)."
                    },
                    {
                      "key": "currentPage",
                      "value": "1",
                      "description": "The current page of the paginated results."
                    },
                    {
                      "key": "dateFrom",
                      "value": "<dateTime>",
                      "description": "Start date or date and time of the event occurrence (provided by the device)."
                    },
                    {
                      "key": "dateTo",
                      "value": "<dateTime>",
                      "description": "End date or date and time of the event occurrence (provided by the device)."
                    },
                    {
                      "key": "fragmentType",
                      "value": "<string>",
                      "description": "A characteristic which identifies a managed object or event, for example, geolocation, electricity sensor, relay state."
                    },
                    {
                      "key": "fragmentValue",
                      "value": "<string>",
                      "description": "Allows filtering events by the fragment's value, but only when provided together with `fragmentType`.\n\n> **⚠️ Important:** Only fragments with a string value are supported.\n"
                    },
                    {
                      "key": "lastUpdatedFrom",
                      "value": "<dateTime>",
                      "description": "Start date or date and time of the last update made."
                    },
                    {
                      "key": "lastUpdatedTo",
                      "value": "<dateTime>",
                      "description": "End date or date and time of the last update made."
                    },
                    {
                      "key": "pageSize",
                      "value": "5",
                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                    },
                    {
                      "key": "revert",
                      "value": "false",
                      "description": "If you are using a range query (that is, at least one of the `dateFrom` or `dateTo` parameters is included in the request), then setting `revert=true` will sort the results by the oldest events first.\nBy default, the results are sorted by the newest events first.\n"
                    },
                    {
                      "key": "source",
                      "value": "<string>",
                      "description": "The managed object ID to which the event is associated."
                    },
                    {
                      "key": "type",
                      "value": "<string>",
                      "description": "The type of event to search for."
                    },
                    {
                      "key": "withSourceAssets",
                      "value": "false",
                      "description": "When set to `true` also events for related source assets will be included in the request. When this parameter is provided a `source` must be specified."
                    },
                    {
                      "key": "withSourceDevices",
                      "value": "false",
                      "description": "When set to `true` also events for related source devices will be included in the request. When this parameter is provided a `source` must be specified."
                    },
                    {
                      "key": "withTotalElements",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                    },
                    {
                      "key": "withTotalPages",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                    }
                  ]
                },
                "description": "Retrieve all events on your tenant.\n\nIn case of executing [range queries](https://en.wikipedia.org/wiki/Range_query_(database)) between an upper and lower boundary, for example, querying using `dateFrom`–`dateTo` or `createdFrom`–`createdTo`, the newest registered events are returned first. It is possible to change the order using the query parameter `revert=true`.\n\n<section><h5>Required roles</h5>\nROLE_EVENT_READ\n</section>\n"
              },
              "response": [
                {
                  "name": "The request has succeeded and all events are sent in the response.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.eventcollection+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/event/events?createdFrom=<dateTime>&createdTo=<dateTime>&currentPage=1&dateFrom=<dateTime>&dateTo=<dateTime>&fragmentType=<string>&fragmentValue=<string>&lastUpdatedFrom=<dateTime>&lastUpdatedTo=<dateTime>&pageSize=5&revert=false&source=<string>&type=<string>&withSourceAssets=false&withSourceDevices=false&withTotalElements=false&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "event",
                        "events"
                      ],
                      "query": [
                        {
                          "key": "createdFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the event's creation (set by the platform during creation)."
                        },
                        {
                          "key": "createdTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the event's creation (set by the platform during creation)."
                        },
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the event occurrence (provided by the device)."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the event occurrence (provided by the device)."
                        },
                        {
                          "key": "fragmentType",
                          "value": "<string>",
                          "description": "A characteristic which identifies a managed object or event, for example, geolocation, electricity sensor, relay state."
                        },
                        {
                          "key": "fragmentValue",
                          "value": "<string>",
                          "description": "Allows filtering events by the fragment's value, but only when provided together with `fragmentType`.\n\n> **⚠️ Important:** Only fragments with a string value are supported.\n"
                        },
                        {
                          "key": "lastUpdatedFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the last update made."
                        },
                        {
                          "key": "lastUpdatedTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the last update made."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "revert",
                          "value": "false",
                          "description": "If you are using a range query (that is, at least one of the `dateFrom` or `dateTo` parameters is included in the request), then setting `revert=true` will sort the results by the oldest events first.\nBy default, the results are sorted by the newest events first.\n"
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the event is associated."
                        },
                        {
                          "key": "type",
                          "value": "<string>",
                          "description": "The type of event to search for."
                        },
                        {
                          "key": "withSourceAssets",
                          "value": "false",
                          "description": "When set to `true` also events for related source assets will be included in the request. When this parameter is provided a `source` must be specified."
                        },
                        {
                          "key": "withSourceDevices",
                          "value": "false",
                          "description": "When set to `true` also events for related source devices will be included in the request. When this parameter is provided a `source` must be specified."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.eventcollection+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"events\": [\n    {\n      \"creationTime\": \"<dateTime>\",\n      \"lastUpdated\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"self\": \"<uri>\",\n      \"source\": {\n        \"id\": \"<string>\",\n        \"self\": \"<uri>\"\n      },\n      \"text\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"creationTime\": \"<dateTime>\",\n      \"lastUpdated\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"self\": \"<uri>\",\n      \"source\": {\n        \"id\": \"<string>\",\n        \"self\": \"<uri>\"\n      },\n      \"text\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  }\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/event/events?createdFrom=<dateTime>&createdTo=<dateTime>&currentPage=1&dateFrom=<dateTime>&dateTo=<dateTime>&fragmentType=<string>&fragmentValue=<string>&lastUpdatedFrom=<dateTime>&lastUpdatedTo=<dateTime>&pageSize=5&revert=false&source=<string>&type=<string>&withSourceAssets=false&withSourceDevices=false&withTotalElements=false&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "event",
                        "events"
                      ],
                      "query": [
                        {
                          "key": "createdFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the event's creation (set by the platform during creation)."
                        },
                        {
                          "key": "createdTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the event's creation (set by the platform during creation)."
                        },
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the event occurrence (provided by the device)."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the event occurrence (provided by the device)."
                        },
                        {
                          "key": "fragmentType",
                          "value": "<string>",
                          "description": "A characteristic which identifies a managed object or event, for example, geolocation, electricity sensor, relay state."
                        },
                        {
                          "key": "fragmentValue",
                          "value": "<string>",
                          "description": "Allows filtering events by the fragment's value, but only when provided together with `fragmentType`.\n\n> **⚠️ Important:** Only fragments with a string value are supported.\n"
                        },
                        {
                          "key": "lastUpdatedFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the last update made."
                        },
                        {
                          "key": "lastUpdatedTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the last update made."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "revert",
                          "value": "false",
                          "description": "If you are using a range query (that is, at least one of the `dateFrom` or `dateTo` parameters is included in the request), then setting `revert=true` will sort the results by the oldest events first.\nBy default, the results are sorted by the newest events first.\n"
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the event is associated."
                        },
                        {
                          "key": "type",
                          "value": "<string>",
                          "description": "The type of event to search for."
                        },
                        {
                          "key": "withSourceAssets",
                          "value": "false",
                          "description": "When set to `true` also events for related source assets will be included in the request. When this parameter is provided a `source` must be specified."
                        },
                        {
                          "key": "withSourceDevices",
                          "value": "false",
                          "description": "When set to `true` also events for related source devices will be included in the request. When this parameter is provided a `source` must be specified."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Remove event collections",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Cumulocity-Processing-Mode",
                    "value": "PERSISTENT",
                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/event/events?createdFrom=<dateTime>&createdTo=<dateTime>&dateFrom=<dateTime>&dateTo=<dateTime>&fragmentType=<string>&source=<string>&type=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "event",
                    "events"
                  ],
                  "query": [
                    {
                      "key": "createdFrom",
                      "value": "<dateTime>",
                      "description": "Start date or date and time of the event's creation (set by the platform during creation)."
                    },
                    {
                      "key": "createdTo",
                      "value": "<dateTime>",
                      "description": "End date or date and time of the event's creation (set by the platform during creation)."
                    },
                    {
                      "key": "dateFrom",
                      "value": "<dateTime>",
                      "description": "Start date or date and time of the event occurrence (provided by the device)."
                    },
                    {
                      "key": "dateTo",
                      "value": "<dateTime>",
                      "description": "End date or date and time of the event occurrence (provided by the device)."
                    },
                    {
                      "key": "fragmentType",
                      "value": "<string>",
                      "description": "A characteristic which identifies a managed object or event, for example, geolocation, electricity sensor, relay state."
                    },
                    {
                      "key": "source",
                      "value": "<string>",
                      "description": "The managed object ID to which the event is associated."
                    },
                    {
                      "key": "type",
                      "value": "<string>",
                      "description": "The type of event to search for."
                    }
                  ]
                },
                "description": "Remove event collections specified by query parameters.\n\nDELETE requests are not synchronous. The response could be returned before the delete request has been completed. This may happen especially when the deleted event has a lot of associated data. After sending the request, the platform starts deleting the associated data in an asynchronous way. Finally, the requested event is deleted after all associated data has been deleted.\n\n> **⚠️ Important:** DELETE requires at least one of the following parameters: `source`, `dateFrom`, `dateTo`, `createdFrom`, `createdTo`.\n\n<section><h5>Required roles</h5>\nROLE_EVENT_ADMIN\n</section>\n"
              },
              "response": [
                {
                  "name": "A collection of events was removed.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/event/events?createdFrom=<dateTime>&createdTo=<dateTime>&dateFrom=<dateTime>&dateTo=<dateTime>&fragmentType=<string>&source=<string>&type=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "event",
                        "events"
                      ],
                      "query": [
                        {
                          "key": "createdFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the event's creation (set by the platform during creation)."
                        },
                        {
                          "key": "createdTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the event's creation (set by the platform during creation)."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the event occurrence (provided by the device)."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the event occurrence (provided by the device)."
                        },
                        {
                          "key": "fragmentType",
                          "value": "<string>",
                          "description": "A characteristic which identifies a managed object or event, for example, geolocation, electricity sensor, relay state."
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the event is associated."
                        },
                        {
                          "key": "type",
                          "value": "<string>",
                          "description": "The type of event to search for."
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/event/events?createdFrom=<dateTime>&createdTo=<dateTime>&dateFrom=<dateTime>&dateTo=<dateTime>&fragmentType=<string>&source=<string>&type=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "event",
                        "events"
                      ],
                      "query": [
                        {
                          "key": "createdFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the event's creation (set by the platform during creation)."
                        },
                        {
                          "key": "createdTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the event's creation (set by the platform during creation)."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the event occurrence (provided by the device)."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the event occurrence (provided by the device)."
                        },
                        {
                          "key": "fragmentType",
                          "value": "<string>",
                          "description": "A characteristic which identifies a managed object or event, for example, geolocation, electricity sensor, relay state."
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the event is associated."
                        },
                        {
                          "key": "type",
                          "value": "<string>",
                          "description": "The type of event to search for."
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Not authorized to perform this operation.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/event/events?createdFrom=<dateTime>&createdTo=<dateTime>&dateFrom=<dateTime>&dateTo=<dateTime>&fragmentType=<string>&source=<string>&type=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "event",
                        "events"
                      ],
                      "query": [
                        {
                          "key": "createdFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the event's creation (set by the platform during creation)."
                        },
                        {
                          "key": "createdTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the event's creation (set by the platform during creation)."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the event occurrence (provided by the device)."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the event occurrence (provided by the device)."
                        },
                        {
                          "key": "fragmentType",
                          "value": "<string>",
                          "description": "A characteristic which identifies a managed object or event, for example, geolocation, electricity sensor, relay state."
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the event is associated."
                        },
                        {
                          "key": "type",
                          "value": "<string>",
                          "description": "The type of event to search for."
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "Retrieve URIs to collections of events",
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "username",
                  "value": "{{basicAuthUsername}}",
                  "type": "string"
                },
                {
                  "key": "password",
                  "value": "{{basicAuthPassword}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/vnd.com.nsn.cumulocity.eventapi+json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/event",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "event"
              ]
            },
            "description": "Retrieve URIs and URI templates to collections of events.\n\n<section><h5>Required roles</h5>\nROLE_EVENT_READ\n</section>\n"
          },
          "response": [
            {
              "name": "The request has succeeded and the URIs are sent in the response.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.eventapi+json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/event",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "event"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.com.nsn.cumulocity.eventapi+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"events\": {\n    \"self\": \"<uri>\",\n    \"events\": [\n      {\n        \"creationTime\": \"<dateTime>\",\n        \"lastUpdated\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"self\": \"<uri>\",\n        \"source\": {\n          \"id\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"text\": \"<string>\",\n        \"time\": \"<dateTime>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"creationTime\": \"<dateTime>\",\n        \"lastUpdated\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"self\": \"<uri>\",\n        \"source\": {\n          \"id\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"text\": \"<string>\",\n        \"time\": \"<dateTime>\",\n        \"type\": \"<string>\"\n      }\n    ]\n  },\n  \"eventsForSource\": \"<string>\",\n  \"eventsForSourceAndType\": \"<string>\",\n  \"eventsForType\": \"<string>\",\n  \"eventsForFragmentType\": \"<string>\",\n  \"eventsForTime\": \"<string>\",\n  \"eventsForSourceAndTime\": \"<string>\",\n  \"self\": \"<uri>\"\n}"
            },
            {
              "name": "Authentication information is missing or invalid.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/event",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "event"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "features",
      "item": [
        {
          "name": "{featureKey}",
          "item": [
            {
              "name": "by-tenant",
              "item": [
                {
                  "name": "{tenantId}",
                  "item": [
                    {
                      "name": "Sets the value of feature toggle override for a given tenant.",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"active\": \"<boolean>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/features/:featureKey/by-tenant/:tenantId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "features",
                            ":featureKey",
                            "by-tenant",
                            ":tenantId"
                          ],
                          "variable": [
                            {
                              "key": "featureKey",
                              "value": "<string>",
                              "description": "(Required) A unique key of the feature toggle."
                            },
                            {
                              "key": "tenantId",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of a Cumulocity tenant."
                            }
                          ]
                        },
                        "description": "Sets the value of feature toggle override for a given tenant.\n\n<section><h5>Required roles</h5>\nROLE_TENANT_MANAGEMENT_ADMIN <b>AND</b> current tenant is management.\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The request has succeeded and the feature toggle value override was set.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"active\": \"<boolean>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/features/:featureKey/by-tenant/:tenantId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "features",
                                ":featureKey",
                                "by-tenant",
                                ":tenantId"
                              ],
                              "variable": [
                                {
                                  "key": "featureKey"
                                },
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"active\": \"<boolean>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/features/:featureKey/by-tenant/:tenantId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "features",
                                ":featureKey",
                                "by-tenant",
                                ":tenantId"
                              ],
                              "variable": [
                                {
                                  "key": "featureKey"
                                },
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Not authorized to perform this operation.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"active\": \"<boolean>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/features/:featureKey/by-tenant/:tenantId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "features",
                                ":featureKey",
                                "by-tenant",
                                ":tenantId"
                              ],
                              "variable": [
                                {
                                  "key": "featureKey"
                                },
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Managed object not found.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"active\": \"<boolean>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/features/:featureKey/by-tenant/:tenantId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "features",
                                ":featureKey",
                                "by-tenant",
                                ":tenantId"
                              ],
                              "variable": [
                                {
                                  "key": "featureKey"
                                },
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    },
                    {
                      "name": "Removes the feature toggle override for a given tenant.",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/features/:featureKey/by-tenant/:tenantId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "features",
                            ":featureKey",
                            "by-tenant",
                            ":tenantId"
                          ],
                          "variable": [
                            {
                              "key": "featureKey",
                              "value": "<string>",
                              "description": "(Required) A unique key of the feature toggle."
                            },
                            {
                              "key": "tenantId",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of a Cumulocity tenant."
                            }
                          ]
                        },
                        "description": "Removes the feature toggle override for a given tenant.\n\n<section><h5>Required roles</h5>\nROLE_TENANT_MANAGEMENT_ADMIN <b>AND</b> current tenant is management.\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The request has succeeded and the feature toggle value override was removed.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/features/:featureKey/by-tenant/:tenantId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "features",
                                ":featureKey",
                                "by-tenant",
                                ":tenantId"
                              ],
                              "variable": [
                                {
                                  "key": "featureKey"
                                },
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/features/:featureKey/by-tenant/:tenantId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "features",
                                ":featureKey",
                                "by-tenant",
                                ":tenantId"
                              ],
                              "variable": [
                                {
                                  "key": "featureKey"
                                },
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Not authorized to perform this operation.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/features/:featureKey/by-tenant/:tenantId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "features",
                                ":featureKey",
                                "by-tenant",
                                ":tenantId"
                              ],
                              "variable": [
                                {
                                  "key": "featureKey"
                                },
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Managed object not found.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/features/:featureKey/by-tenant/:tenantId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "features",
                                ":featureKey",
                                "by-tenant",
                                ":tenantId"
                              ],
                              "variable": [
                                {
                                  "key": "featureKey"
                                },
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Retrieve list of feature toggles values overrides of all tenants.",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/features/:featureKey/by-tenant",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "features",
                        ":featureKey",
                        "by-tenant"
                      ],
                      "variable": [
                        {
                          "key": "featureKey",
                          "value": "<string>",
                          "description": "(Required) A unique key of the feature toggle."
                        }
                      ]
                    },
                    "description": "Retrieve a list of all existing feature toggle value overrides for all tenants.\n\n<section><h5>Required roles</h5>\nROLE_TENANT_MANAGEMENT_ADMIN <b>AND</b> current tenant is management\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the feature toggles are sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/features/:featureKey/by-tenant",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "features",
                            ":featureKey",
                            "by-tenant"
                          ],
                          "variable": [
                            {
                              "key": "featureKey"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"active\": \"<boolean>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"active\": \"<boolean>\"\n  }\n]"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/features/:featureKey/by-tenant",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "features",
                            ":featureKey",
                            "by-tenant"
                          ],
                          "variable": [
                            {
                              "key": "featureKey"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not authorized to perform this operation.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/features/:featureKey/by-tenant",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "features",
                            ":featureKey",
                            "by-tenant"
                          ],
                          "variable": [
                            {
                              "key": "featureKey"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Managed object not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/features/:featureKey/by-tenant",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "features",
                            ":featureKey",
                            "by-tenant"
                          ],
                          "variable": [
                            {
                              "key": "featureKey"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Sets the value of feature toggle override for the current tenant.",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"active\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/features/:featureKey/by-tenant",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "features",
                        ":featureKey",
                        "by-tenant"
                      ],
                      "variable": [
                        {
                          "key": "featureKey",
                          "value": "<string>",
                          "description": "(Required) A unique key of the feature toggle."
                        }
                      ]
                    },
                    "description": "Sets the value of feature toggle override for a tenant of authenticated user.\n\n<section><h5>Required roles</h5>\nROLE_TENANT_MANAGEMENT_ADMIN <b>AND</b> (current tenant is management <b>OR</b> the feature toggle phase is PUBLIC_PREVIEW or GENERALLY_AVAILABLE)\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the feature toggle value override was set.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"active\": \"<boolean>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/features/:featureKey/by-tenant",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "features",
                            ":featureKey",
                            "by-tenant"
                          ],
                          "variable": [
                            {
                              "key": "featureKey"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"active\": \"<boolean>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/features/:featureKey/by-tenant",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "features",
                            ":featureKey",
                            "by-tenant"
                          ],
                          "variable": [
                            {
                              "key": "featureKey"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not authorized to perform this operation.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"active\": \"<boolean>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/features/:featureKey/by-tenant",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "features",
                            ":featureKey",
                            "by-tenant"
                          ],
                          "variable": [
                            {
                              "key": "featureKey"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Managed object not found.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"active\": \"<boolean>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/features/:featureKey/by-tenant",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "features",
                            ":featureKey",
                            "by-tenant"
                          ],
                          "variable": [
                            {
                              "key": "featureKey"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Removes the feature toggle override for the current tenant.",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/features/:featureKey/by-tenant",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "features",
                        ":featureKey",
                        "by-tenant"
                      ],
                      "variable": [
                        {
                          "key": "featureKey",
                          "value": "<string>",
                          "description": "(Required) A unique key of the feature toggle."
                        }
                      ]
                    },
                    "description": "Removes the feature toggle override for a tenant of authenticated user.\n\n<section><h5>Required roles</h5>\nROLE_TENANT_MANAGEMENT_ADMIN <b>AND</b> (current tenant is management <b>OR</b> the feature toggle phase is PUBLIC_PREVIEW or GENERALLY_AVAILABLE)\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the feature toggle value override was removed.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/features/:featureKey/by-tenant",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "features",
                            ":featureKey",
                            "by-tenant"
                          ],
                          "variable": [
                            {
                              "key": "featureKey"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/features/:featureKey/by-tenant",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "features",
                            ":featureKey",
                            "by-tenant"
                          ],
                          "variable": [
                            {
                              "key": "featureKey"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not authorized to perform this operation.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/features/:featureKey/by-tenant",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "features",
                            ":featureKey",
                            "by-tenant"
                          ],
                          "variable": [
                            {
                              "key": "featureKey"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Managed object not found.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/features/:featureKey/by-tenant",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "features",
                            ":featureKey",
                            "by-tenant"
                          ],
                          "variable": [
                            {
                              "key": "featureKey"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Retrieve a specific feature toggle with value for current tenant.",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/features/:featureKey",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "features",
                    ":featureKey"
                  ],
                  "variable": [
                    {
                      "key": "featureKey",
                      "value": "<string>",
                      "description": "(Required) A unique key of the feature toggle."
                    }
                  ]
                },
                "description": "Retrieve a specific feature toggles defined under given key, with value calculated for a tenant of authenticated user.\n\n<section><h5>Required roles</h5>\nnone, any authenticated user can call this endpoint\n</section>\n"
              },
              "response": [
                {
                  "name": "The request has succeeded and the feature toggle is sent in the response.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/features/:featureKey",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "features",
                        ":featureKey"
                      ],
                      "variable": [
                        {
                          "key": "featureKey"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"key\": \"<string>\",\n  \"phase\": \"IN_DEVELOPMENT\",\n  \"active\": \"<boolean>\",\n  \"strategy\": \"TENANT\"\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/features/:featureKey",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "features",
                        ":featureKey"
                      ],
                      "variable": [
                        {
                          "key": "featureKey"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Managed object not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/features/:featureKey",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "features",
                        ":featureKey"
                      ],
                      "variable": [
                        {
                          "key": "featureKey"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Retrieve list of feature toggles with values for current tenant.",
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "username",
                  "value": "{{basicAuthUsername}}",
                  "type": "string"
                },
                {
                  "key": "password",
                  "value": "{{basicAuthPassword}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/features",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "features"
              ]
            },
            "description": "Retrieve a list of all defined feature toggles with values calculated for a tenant of authenticated user.\n\n<section><h5>Required roles</h5>\nnone, any authenticated user can call this endpoint\n</section>\n"
          },
          "response": [
            {
              "name": "The request has succeeded and the feature toggles are sent in the response.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/features",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "features"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "[\n  {\n    \"key\": \"<string>\",\n    \"phase\": \"IN_DEVELOPMENT\",\n    \"active\": \"<boolean>\",\n    \"strategy\": \"TENANT\"\n  },\n  {\n    \"key\": \"<string>\",\n    \"phase\": \"PRIVATE_PREVIEW\",\n    \"active\": \"<boolean>\",\n    \"strategy\": \"DEFAULT\"\n  }\n]"
            },
            {
              "name": "Authentication information is missing or invalid.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/features",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "features"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "inventory",
      "item": [
        {
          "name": "binaries",
          "item": [
            {
              "name": "{id}",
              "item": [
                {
                  "name": "Retrieve a stored file",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/octet-stream"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/inventory/binaries/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "inventory",
                        "binaries",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the managed object."
                        }
                      ]
                    },
                    "description": "Retrieve a stored file (managed object) by a given ID.\nSupports chunk download and resuming an interrupted download using the [`Range` header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Range).\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_READ <b>OR</b> ROLE_BINARY_READ <b>OR</b> owner of the resource <b>OR</b> MANAGE_OBJECT_READ permission on the resource\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the file is sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/octet-stream"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/inventory/binaries/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "binaries",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/octet-stream"
                        }
                      ],
                      "cookie": [],
                      "body": "<binary>"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/inventory/binaries/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "binaries",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Replace a file",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.managedobject+json"
                      }
                    ],
                    "body": {
                      "mode": "file",
                      "file": {}
                    },
                    "url": {
                      "raw": "{{baseUrl}}/inventory/binaries/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "inventory",
                        "binaries",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the managed object."
                        }
                      ]
                    },
                    "description": "Upload and replace the attached file (binary) of a specific managed object by a given ID.<br>\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_ADMIN <b>OR</b> ROLE_BINARY_ADMIN <b>OR</b> owner of the resource <b>OR</b> MANAGE_OBJECT_ADMIN permission on the resource\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "A file was uploaded.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "text/plain"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.managedobject+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "file",
                          "file": {}
                        },
                        "url": {
                          "raw": "{{baseUrl}}/inventory/binaries/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "binaries",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.managedobject+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"c8y_IsBinary\": {},\n  \"contentType\": \"<string>\",\n  \"id\": \"<string>\",\n  \"lastUpdated\": \"<dateTime>\",\n  \"length\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"type\": \"<string>\"\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "text/plain"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "file",
                          "file": {}
                        },
                        "url": {
                          "raw": "{{baseUrl}}/inventory/binaries/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "binaries",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Remove a stored file",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/inventory/binaries/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "inventory",
                        "binaries",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the managed object."
                        }
                      ]
                    },
                    "description": "Remove a managed object and its stored file by a given ID.\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_ADMIN <b>OR</b> ROLE_BINARY_ADMIN <b>OR</b> owner of the resource <b>OR</b> MANAGE_OBJECT_ADMIN permission on the resource\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "A managed object and its stored file was removed.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/inventory/binaries/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "binaries",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/inventory/binaries/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "binaries",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Upload a file",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.managedobject+json"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "object",
                      "value": "[object Object]",
                      "description": "(Required) Contains information about the file.",
                      "type": "text"
                    },
                    {
                      "key": "file",
                      "description": "(Required) Path of the file to be uploaded.",
                      "type": "file",
                      "src": []
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/inventory/binaries",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "inventory",
                    "binaries"
                  ]
                },
                "description": "Uploading a file (binary) requires providing the following properties:\n\n* `object` – In JSON format, it contains information about the file.\n* `file` – Contains the file to be uploaded.\n\nAfter the file has been uploaded, the corresponding managed object will contain the fragment `c8y_IsBinary`.\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_ADMIN <b>OR</b> ROLE_INVENTORY_CREATE <b>OR</b> ROLE_BINARY_ADMIN <b>OR</b> ROLE_BINARY_CREATE\n</section>\n"
              },
              "response": [
                {
                  "name": "A file was uploaded.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.managedobject+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "object",
                          "value": "[object Object]",
                          "description": "(Required) Contains information about the file.",
                          "type": "text"
                        },
                        {
                          "key": "file",
                          "description": "(Required) Path of the file to be uploaded.",
                          "type": "file",
                          "src": []
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/inventory/binaries",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "inventory",
                        "binaries"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.managedobject+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"c8y_IsBinary\": {},\n  \"contentType\": \"<string>\",\n  \"id\": \"<string>\",\n  \"lastUpdated\": \"<dateTime>\",\n  \"length\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"type\": \"<string>\"\n}"
                },
                {
                  "name": "Unprocessable Entity – invalid payload.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "object",
                          "value": "[object Object]",
                          "description": "(Required) Contains information about the file.",
                          "type": "text"
                        },
                        {
                          "key": "file",
                          "description": "(Required) Path of the file to be uploaded.",
                          "type": "file",
                          "src": []
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/inventory/binaries",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "inventory",
                        "binaries"
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "object",
                          "value": "[object Object]",
                          "description": "(Required) Contains information about the file.",
                          "type": "text"
                        },
                        {
                          "key": "file",
                          "description": "(Required) Path of the file to be uploaded.",
                          "type": "file",
                          "src": []
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/inventory/binaries",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "inventory",
                        "binaries"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Not authorized to perform this operation.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "object",
                          "value": "[object Object]",
                          "description": "(Required) Contains information about the file.",
                          "type": "text"
                        },
                        {
                          "key": "file",
                          "description": "(Required) Path of the file to be uploaded.",
                          "type": "file",
                          "src": []
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/inventory/binaries",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "inventory",
                        "binaries"
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Search for stored files",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.managedobjectcollection+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/inventory/binaries?childAdditionId=<string>&childAssetId=<string>&childDeviceId=<string>&currentPage=1&ids=<string>,<string>&owner=<string>&pageSize=5&text=<string>&type=<string>&withTotalPages=false",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "inventory",
                    "binaries"
                  ],
                  "query": [
                    {
                      "key": "childAdditionId",
                      "value": "<string>",
                      "description": "Search for a specific child addition and list all the groups to which it belongs."
                    },
                    {
                      "key": "childAssetId",
                      "value": "<string>",
                      "description": "Search for a specific child asset and list all the groups to which it belongs."
                    },
                    {
                      "key": "childDeviceId",
                      "value": "<string>",
                      "description": "Search for a specific child device and list all the groups to which it belongs."
                    },
                    {
                      "key": "currentPage",
                      "value": "1",
                      "description": "The current page of the paginated results."
                    },
                    {
                      "key": "ids",
                      "value": "<string>,<string>",
                      "description": "The managed object IDs to search for.\n>**&#9432; Info:** If you query for multiple IDs at once, comma-separate the values.\n"
                    },
                    {
                      "key": "owner",
                      "value": "<string>",
                      "description": "Username of the owner of the managed objects."
                    },
                    {
                      "key": "pageSize",
                      "value": "5",
                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                    },
                    {
                      "key": "text",
                      "value": "<string>",
                      "description": "Search for managed objects where a property value is equal to the given one.\nThe following properties are examined: `id, type, name, owner, externalIds`.\n"
                    },
                    {
                      "key": "type",
                      "value": "<string>",
                      "description": "The type of managed object to search for."
                    },
                    {
                      "key": "withTotalPages",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                    }
                  ]
                },
                "description": "Retrieve metadata information about stored files. Search for files by query parameters. This will not download the files.\n"
              },
              "response": [
                {
                  "name": "The request has succeeded and the managed objects are sent in the response.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.managedobjectcollection+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/inventory/binaries?childAdditionId=<string>&childAssetId=<string>&childDeviceId=<string>&currentPage=1&ids=<string>,<string>&owner=<string>&pageSize=5&text=<string>&type=<string>&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "inventory",
                        "binaries"
                      ],
                      "query": [
                        {
                          "key": "childAdditionId",
                          "value": "<string>",
                          "description": "Search for a specific child addition and list all the groups to which it belongs."
                        },
                        {
                          "key": "childAssetId",
                          "value": "<string>",
                          "description": "Search for a specific child asset and list all the groups to which it belongs."
                        },
                        {
                          "key": "childDeviceId",
                          "value": "<string>",
                          "description": "Search for a specific child device and list all the groups to which it belongs."
                        },
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "ids",
                          "value": "<string>,<string>",
                          "description": "The managed object IDs to search for.\n>**&#9432; Info:** If you query for multiple IDs at once, comma-separate the values.\n"
                        },
                        {
                          "key": "owner",
                          "value": "<string>",
                          "description": "Username of the owner of the managed objects."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "text",
                          "value": "<string>",
                          "description": "Search for managed objects where a property value is equal to the given one.\nThe following properties are examined: `id, type, name, owner, externalIds`.\n"
                        },
                        {
                          "key": "type",
                          "value": "<string>",
                          "description": "The type of managed object to search for."
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.managedobjectcollection+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"managedObjects\": [\n    {\n      \"c8y_IsBinary\": {},\n      \"contentType\": \"<string>\",\n      \"id\": \"<string>\",\n      \"lastUpdated\": \"<dateTime>\",\n      \"length\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"owner\": \"<string>\",\n      \"self\": \"<uri>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"c8y_IsBinary\": {},\n      \"contentType\": \"<string>\",\n      \"id\": \"<string>\",\n      \"lastUpdated\": \"<dateTime>\",\n      \"length\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"owner\": \"<string>\",\n      \"self\": \"<uri>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  }\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/inventory/binaries?childAdditionId=<string>&childAssetId=<string>&childDeviceId=<string>&currentPage=1&ids=<string>,<string>&owner=<string>&pageSize=5&text=<string>&type=<string>&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "inventory",
                        "binaries"
                      ],
                      "query": [
                        {
                          "key": "childAdditionId",
                          "value": "<string>",
                          "description": "Search for a specific child addition and list all the groups to which it belongs."
                        },
                        {
                          "key": "childAssetId",
                          "value": "<string>",
                          "description": "Search for a specific child asset and list all the groups to which it belongs."
                        },
                        {
                          "key": "childDeviceId",
                          "value": "<string>",
                          "description": "Search for a specific child device and list all the groups to which it belongs."
                        },
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "ids",
                          "value": "<string>,<string>",
                          "description": "The managed object IDs to search for.\n>**&#9432; Info:** If you query for multiple IDs at once, comma-separate the values.\n"
                        },
                        {
                          "key": "owner",
                          "value": "<string>",
                          "description": "Username of the owner of the managed objects."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "text",
                          "value": "<string>",
                          "description": "Search for managed objects where a property value is equal to the given one.\nThe following properties are examined: `id, type, name, owner, externalIds`.\n"
                        },
                        {
                          "key": "type",
                          "value": "<string>",
                          "description": "The type of managed object to search for."
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "managedObjects",
          "item": [
            {
              "name": "{id}",
              "item": [
                {
                  "name": "availability",
                  "item": [
                    {
                      "name": "Retrieve the latest availability date of a specific managed object",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/inventory/managedObjects/:id/availability",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "managedObjects",
                            ":id",
                            "availability"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the managed object."
                            }
                          ]
                        },
                        "description": "Retrieve the date when a specific managed object (by a given ID) sent the last message to Cumulocity.\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_READ <b>OR</b> ROLE_MANAGED_OBJECT_READ\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The request has succeeded and the date is sent in the response.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/availability",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "availability"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"deviceId\": \"<string>\",\n  \"externalId\": \"<string>\",\n  \"lastMessage\": \"<dateTime>\",\n  \"interval\": \"<integer>\",\n  \"dataStatus\": \"MAINTENANCE\",\n  \"connectionStatus\": \"CONNECTED\"\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/availability",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "availability"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "A device with provided ID is not monitored.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/availability",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "availability"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "childAdditions",
                  "item": [
                    {
                      "name": "{childId}",
                      "item": [
                        {
                          "name": "Retrieve a specific child addition of a specific managed object",
                          "request": {
                            "auth": {
                              "type": "basic",
                              "basic": [
                                {
                                  "key": "username",
                                  "value": "{{basicAuthUsername}}",
                                  "type": "string"
                                },
                                {
                                  "key": "password",
                                  "value": "{{basicAuthPassword}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectreference+json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAdditions/:childId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childAdditions",
                                ":childId"
                              ],
                              "variable": [
                                {
                                  "key": "id",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of the managed object."
                                },
                                {
                                  "key": "childId",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of the child object."
                                }
                              ]
                            },
                            "description": "Retrieve a specific child addition (by a given child ID) of a specific managed object (by a given ID).\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_READ <b>OR</b> ROLE_MANAGED_OBJECT_READ <b>OR</b> MANAGE_OBJECT_READ permission on the source (parent)\n</section>\n"
                          },
                          "response": [
                            {
                              "name": "The request has succeeded and the child addition is sent in the response.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.managedobjectreference+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAdditions/:childId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "inventory",
                                    "managedObjects",
                                    ":id",
                                    "childAdditions",
                                    ":childId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "childId"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.managedobjectreference+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"managedObject\": {\n    \"creationTime\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"lastUpdated\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"self\": \"<uri>\",\n    \"type\": \"<string>\",\n    \"childAdditions\": {\n      \"count\": \"<integer>\",\n      \"references\": [\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        },\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        }\n      ],\n      \"self\": \"<string>\"\n    },\n    \"childAssets\": {\n      \"count\": \"<integer>\",\n      \"references\": [\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        },\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        }\n      ],\n      \"self\": \"<string>\"\n    },\n    \"childDevices\": {\n      \"count\": \"<integer>\",\n      \"references\": [\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        },\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        }\n      ],\n      \"self\": \"<string>\"\n    },\n    \"additionParents\": {\n      \"references\": [\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        },\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        }\n      ],\n      \"self\": \"<string>\"\n    },\n    \"assetParents\": {\n      \"references\": [\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        },\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        }\n      ],\n      \"self\": \"<string>\"\n    },\n    \"deviceParents\": {\n      \"references\": [\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        },\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        }\n      ],\n      \"self\": \"<string>\"\n    },\n    \"c8y_IsDevice\": {},\n    \"c8y_LatestMeasurements\": {\n      \"quisbb\": {\n        \"fugiatd0\": {\n          \"value\": \"<number>\",\n          \"unit\": \"<string>\",\n          \"time\": \"<dateTime>\"\n        },\n        \"cupidatat_12a\": {\n          \"value\": \"<number>\",\n          \"unit\": \"<string>\",\n          \"time\": \"<dateTime>\"\n        },\n        \"aute___3\": {\n          \"value\": \"<number>\",\n          \"unit\": \"<string>\",\n          \"time\": \"<dateTime>\"\n        },\n        \"tempor_\": {\n          \"value\": \"<number>\",\n          \"unit\": \"<string>\",\n          \"time\": \"<dateTime>\"\n        }\n      },\n      \"commodo18\": {\n        \"Duisa20\": {\n          \"value\": \"<number>\",\n          \"unit\": \"<string>\",\n          \"time\": \"<dateTime>\"\n        },\n        \"cupidatat_f87\": {\n          \"value\": \"<number>\",\n          \"unit\": \"<string>\",\n          \"time\": \"<dateTime>\"\n        }\n      },\n      \"mollit_0\": {\n        \"esse9\": {\n          \"value\": \"<number>\",\n          \"unit\": \"<string>\",\n          \"time\": \"<dateTime>\"\n        }\n      }\n    },\n    \"c8y_IsDeviceGroup\": {},\n    \"c8y_DeviceTypes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"c8y_SupportedOperations\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"self\": \"<uri>\"\n}"
                            },
                            {
                              "name": "Authentication information is missing or invalid.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAdditions/:childId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "inventory",
                                    "managedObjects",
                                    ":id",
                                    "childAdditions",
                                    ":childId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "childId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Managed object not found.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAdditions/:childId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "inventory",
                                    "managedObjects",
                                    ":id",
                                    "childAdditions",
                                    ":childId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "childId"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Invalid data was sent.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAdditions/:childId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "inventory",
                                    "managedObjects",
                                    ":id",
                                    "childAdditions",
                                    ":childId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "childId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                              "code": 422,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            }
                          ]
                        },
                        {
                          "name": "Remove a specific child addition from its parent",
                          "request": {
                            "auth": {
                              "type": "basic",
                              "basic": [
                                {
                                  "key": "username",
                                  "value": "{{basicAuthUsername}}",
                                  "type": "string"
                                },
                                {
                                  "key": "password",
                                  "value": "{{basicAuthPassword}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAdditions/:childId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childAdditions",
                                ":childId"
                              ],
                              "variable": [
                                {
                                  "key": "id",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of the managed object."
                                },
                                {
                                  "key": "childId",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of the child object."
                                }
                              ]
                            },
                            "description": "Remove a specific child addition (by a given child ID) from its parent (by a given ID).\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_ADMIN <b>OR</b> ROLE_MANAGED_OBJECT_ADMIN <b>OR</b> owner of the source (parent) <b>OR</b> owner of the child <b>OR</b> MANAGE_OBJECT_ADMIN permission on the source (parent)\n</section>\n"
                          },
                          "response": [
                            {
                              "name": "A child addition was removed.",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "X-Cumulocity-Processing-Mode",
                                    "value": "PERSISTENT",
                                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAdditions/:childId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "inventory",
                                    "managedObjects",
                                    ":id",
                                    "childAdditions",
                                    ":childId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "childId"
                                    }
                                  ]
                                }
                              },
                              "status": "No Content",
                              "code": 204,
                              "_postman_previewlanguage": "text",
                              "header": [],
                              "cookie": [],
                              "body": ""
                            },
                            {
                              "name": "Authentication information is missing or invalid.",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "X-Cumulocity-Processing-Mode",
                                    "value": "PERSISTENT",
                                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAdditions/:childId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "inventory",
                                    "managedObjects",
                                    ":id",
                                    "childAdditions",
                                    ":childId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "childId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Managed object not found.",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "X-Cumulocity-Processing-Mode",
                                    "value": "PERSISTENT",
                                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAdditions/:childId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "inventory",
                                    "managedObjects",
                                    ":id",
                                    "childAdditions",
                                    ":childId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "childId"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Invalid data was sent.",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "X-Cumulocity-Processing-Mode",
                                    "value": "PERSISTENT",
                                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAdditions/:childId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "inventory",
                                    "managedObjects",
                                    ":id",
                                    "childAdditions",
                                    ":childId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "childId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                              "code": 422,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Assign a managed object as child addition",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.managedobjectreference+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"managedObject\": {\n    \"id\": \"<string>\"\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAdditions",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "managedObjects",
                            ":id",
                            "childAdditions"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the managed object."
                            }
                          ]
                        },
                        "description": "The possible ways to assign child objects are:\n\n*  Assign an existing managed object (by a given child ID) as child addition of another managed object (by a given ID).\n*  Assign multiple existing managed objects (by given child IDs) as child additions of another managed object (by a given ID).\n*  Create a managed object in the inventory and assign it as a child addition to another managed object (by a given ID).\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_ADMIN <b>OR</b> ROLE_MANAGED_OBJECT_ADMIN <b>OR</b> ((owner of the source <b>OR</b> MANAGE_OBJECT_ADMIN permission on the source) <b>AND</b> (owner of the child <b>OR</b> MANAGE_OBJECT_ADMIN permission on the child))\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "A managed object was assigned as child addition.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectreference+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"managedObject\": {\n    \"id\": \"<string>\"\n  }\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAdditions",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childAdditions"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectreference+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"managedObject\": {\n    \"id\": \"<string>\"\n  }\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAdditions",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childAdditions"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Managed object not found.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectreference+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"managedObject\": {\n    \"id\": \"<string>\"\n  }\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAdditions",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childAdditions"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    },
                    {
                      "name": "Retrieve all child additions of a specific managed object",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.managedobjectreferencecollection+json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAdditions?currentPage=1&pageSize=5&query=<string>&withChildren=true&withChildrenCount=false&withTotalElements=false&withTotalPages=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "managedObjects",
                            ":id",
                            "childAdditions"
                          ],
                          "query": [
                            {
                              "key": "currentPage",
                              "value": "1",
                              "description": "The current page of the paginated results."
                            },
                            {
                              "key": "pageSize",
                              "value": "5",
                              "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                            },
                            {
                              "key": "query",
                              "value": "<string>",
                              "description": "Use query language to perform operations and/or filter the results. Details about the properties and supported operations can be found in [Query language](#tag/Query-language)."
                            },
                            {
                              "key": "withChildren",
                              "value": "true",
                              "description": "Determines if children with ID and name should be returned when fetching the managed object. Set it to `false` to improve query performance."
                            },
                            {
                              "key": "withChildrenCount",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain the total number of children in the respective objects (`childAdditions`, `childAssets` and `childDevices`)."
                            },
                            {
                              "key": "withTotalElements",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                            },
                            {
                              "key": "withTotalPages",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                            }
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the managed object."
                            }
                          ]
                        },
                        "description": "Retrieve all child additions of a specific managed object by a given ID, or a subset based on queries.\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_READ <b>OR</b> ROLE_MANAGED_OBJECT_READ <b>OR</b> owner of the source <b>OR</b> MANAGE_OBJECT_READ permission on the source\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The request has succeeded and all child additions are sent in the response.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectreferencecollection+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAdditions?currentPage=1&pageSize=5&query=<string>&withChildren=true&withChildrenCount=false&withTotalElements=false&withTotalPages=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childAdditions"
                              ],
                              "query": [
                                {
                                  "key": "currentPage",
                                  "value": "1",
                                  "description": "The current page of the paginated results."
                                },
                                {
                                  "key": "pageSize",
                                  "value": "5",
                                  "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                },
                                {
                                  "key": "query",
                                  "value": "<string>",
                                  "description": "Use query language to perform operations and/or filter the results. Details about the properties and supported operations can be found in [Query language](#tag/Query-language)."
                                },
                                {
                                  "key": "withChildren",
                                  "value": "true",
                                  "description": "Determines if children with ID and name should be returned when fetching the managed object. Set it to `false` to improve query performance."
                                },
                                {
                                  "key": "withChildrenCount",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain the total number of children in the respective objects (`childAdditions`, `childAssets` and `childDevices`)."
                                },
                                {
                                  "key": "withTotalElements",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                },
                                {
                                  "key": "withTotalPages",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.managedobjectreferencecollection+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"prev\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"next\": \"<string>\",\n  \"references\": [\n    {\n      \"managedObject\": {\n        \"creationTime\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"lastUpdated\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"self\": \"<uri>\",\n        \"type\": \"<string>\",\n        \"childAdditions\": {\n          \"count\": \"<integer>\",\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"childAssets\": {\n          \"count\": \"<integer>\",\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"childDevices\": {\n          \"count\": \"<integer>\",\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"additionParents\": {\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"assetParents\": {\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"deviceParents\": {\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"c8y_IsDevice\": {},\n        \"c8y_LatestMeasurements\": {\n          \"esse51\": {\n            \"quis520\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"in_f5c\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            }\n          },\n          \"velit5_c\": {\n            \"laborisc\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            }\n          },\n          \"Lorem_4\": {\n            \"consecteturf04\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"dolore4\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"sint_da\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"voluptate2\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            }\n          }\n        },\n        \"c8y_IsDeviceGroup\": {},\n        \"c8y_DeviceTypes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"c8y_SupportedOperations\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"managedObject\": {\n        \"creationTime\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"lastUpdated\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"self\": \"<uri>\",\n        \"type\": \"<string>\",\n        \"childAdditions\": {\n          \"count\": \"<integer>\",\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"childAssets\": {\n          \"count\": \"<integer>\",\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"childDevices\": {\n          \"count\": \"<integer>\",\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"additionParents\": {\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"assetParents\": {\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"deviceParents\": {\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"c8y_IsDevice\": {},\n        \"c8y_LatestMeasurements\": {\n          \"cupidatat339\": {\n            \"aliquipa1\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"laborum_c\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            }\n          },\n          \"officia_d\": {\n            \"velit_14\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"ut78\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            }\n          }\n        },\n        \"c8y_IsDeviceGroup\": {},\n        \"c8y_DeviceTypes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"c8y_SupportedOperations\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"culpa9b\": {\n          \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n          \"x-additionalPropertiesName\": \"customFragments\"\n        },\n        \"ut6d\": {\n          \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n          \"x-additionalPropertiesName\": \"customFragments\"\n        }\n      }\n    }\n  ],\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  }\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAdditions?currentPage=1&pageSize=5&query=<string>&withChildren=true&withChildrenCount=false&withTotalElements=false&withTotalPages=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childAdditions"
                              ],
                              "query": [
                                {
                                  "key": "currentPage",
                                  "value": "1",
                                  "description": "The current page of the paginated results."
                                },
                                {
                                  "key": "pageSize",
                                  "value": "5",
                                  "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                },
                                {
                                  "key": "query",
                                  "value": "<string>",
                                  "description": "Use query language to perform operations and/or filter the results. Details about the properties and supported operations can be found in [Query language](#tag/Query-language)."
                                },
                                {
                                  "key": "withChildren",
                                  "value": "true",
                                  "description": "Determines if children with ID and name should be returned when fetching the managed object. Set it to `false` to improve query performance."
                                },
                                {
                                  "key": "withChildrenCount",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain the total number of children in the respective objects (`childAdditions`, `childAssets` and `childDevices`)."
                                },
                                {
                                  "key": "withTotalElements",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                },
                                {
                                  "key": "withTotalPages",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Managed object not found.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAdditions?currentPage=1&pageSize=5&query=<string>&withChildren=true&withChildrenCount=false&withTotalElements=false&withTotalPages=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childAdditions"
                              ],
                              "query": [
                                {
                                  "key": "currentPage",
                                  "value": "1",
                                  "description": "The current page of the paginated results."
                                },
                                {
                                  "key": "pageSize",
                                  "value": "5",
                                  "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                },
                                {
                                  "key": "query",
                                  "value": "<string>",
                                  "description": "Use query language to perform operations and/or filter the results. Details about the properties and supported operations can be found in [Query language](#tag/Query-language)."
                                },
                                {
                                  "key": "withChildren",
                                  "value": "true",
                                  "description": "Determines if children with ID and name should be returned when fetching the managed object. Set it to `false` to improve query performance."
                                },
                                {
                                  "key": "withChildrenCount",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain the total number of children in the respective objects (`childAdditions`, `childAssets` and `childDevices`)."
                                },
                                {
                                  "key": "withTotalElements",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                },
                                {
                                  "key": "withTotalPages",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Invalid data was sent.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAdditions?currentPage=1&pageSize=5&query=<string>&withChildren=true&withChildrenCount=false&withTotalElements=false&withTotalPages=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childAdditions"
                              ],
                              "query": [
                                {
                                  "key": "currentPage",
                                  "value": "1",
                                  "description": "The current page of the paginated results."
                                },
                                {
                                  "key": "pageSize",
                                  "value": "5",
                                  "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                },
                                {
                                  "key": "query",
                                  "value": "<string>",
                                  "description": "Use query language to perform operations and/or filter the results. Details about the properties and supported operations can be found in [Query language](#tag/Query-language)."
                                },
                                {
                                  "key": "withChildren",
                                  "value": "true",
                                  "description": "Determines if children with ID and name should be returned when fetching the managed object. Set it to `false` to improve query performance."
                                },
                                {
                                  "key": "withChildrenCount",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain the total number of children in the respective objects (`childAdditions`, `childAssets` and `childDevices`)."
                                },
                                {
                                  "key": "withTotalElements",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                },
                                {
                                  "key": "withTotalPages",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                          "code": 422,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    },
                    {
                      "name": "Remove specific child additions from its parent",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.managedobjectreferencecollection+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"references\": [\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAdditions",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "managedObjects",
                            ":id",
                            "childAdditions"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the managed object."
                            }
                          ]
                        },
                        "description": "Remove specific child additions (by given child IDs) from its parent (by a given ID).\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_ADMIN <b>OR</b> ROLE_MANAGED_OBJECT_ADMIN <b>OR</b> owner of the source (parent) <b>OR</b> owner of the child <b>OR</b> MANAGE_OBJECT_ADMIN permission on the source (parent)\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "Child additions were removed.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectreferencecollection+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"references\": [\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAdditions",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childAdditions"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectreferencecollection+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"references\": [\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAdditions",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childAdditions"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Managed object not found.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectreferencecollection+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"references\": [\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAdditions",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childAdditions"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Unprocessable Entity – invalid payload.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectreferencecollection+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"references\": [\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAdditions",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childAdditions"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                          "code": 422,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "childAssets",
                  "item": [
                    {
                      "name": "{childId}",
                      "item": [
                        {
                          "name": "Retrieve a specific child asset of a specific managed object",
                          "request": {
                            "auth": {
                              "type": "basic",
                              "basic": [
                                {
                                  "key": "username",
                                  "value": "{{basicAuthUsername}}",
                                  "type": "string"
                                },
                                {
                                  "key": "password",
                                  "value": "{{basicAuthPassword}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectreference+json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAssets/:childId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childAssets",
                                ":childId"
                              ],
                              "variable": [
                                {
                                  "key": "id",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of the managed object."
                                },
                                {
                                  "key": "childId",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of the child object."
                                }
                              ]
                            },
                            "description": "Retrieve a specific child asset (by a given child ID) of a specific managed object (by a given ID).\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_READ <b>OR</b> ROLE_MANAGED_OBJECT_READ <b>OR</b> MANAGE_OBJECT_READ permission on the source (parent)\n</section>\n"
                          },
                          "response": [
                            {
                              "name": "The request has succeeded and the child asset is sent in the response.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.managedobjectreference+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAssets/:childId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "inventory",
                                    "managedObjects",
                                    ":id",
                                    "childAssets",
                                    ":childId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "childId"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.managedobjectreference+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"managedObject\": {\n    \"creationTime\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"lastUpdated\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"self\": \"<uri>\",\n    \"type\": \"<string>\",\n    \"childAdditions\": {\n      \"count\": \"<integer>\",\n      \"references\": [\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        },\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        }\n      ],\n      \"self\": \"<string>\"\n    },\n    \"childAssets\": {\n      \"count\": \"<integer>\",\n      \"references\": [\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        },\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        }\n      ],\n      \"self\": \"<string>\"\n    },\n    \"childDevices\": {\n      \"count\": \"<integer>\",\n      \"references\": [\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        },\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        }\n      ],\n      \"self\": \"<string>\"\n    },\n    \"additionParents\": {\n      \"references\": [\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        },\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        }\n      ],\n      \"self\": \"<string>\"\n    },\n    \"assetParents\": {\n      \"references\": [\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        },\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        }\n      ],\n      \"self\": \"<string>\"\n    },\n    \"deviceParents\": {\n      \"references\": [\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        },\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        }\n      ],\n      \"self\": \"<string>\"\n    },\n    \"c8y_IsDevice\": {},\n    \"c8y_LatestMeasurements\": {\n      \"fugiat_c7_\": {\n        \"Duis_7_\": {\n          \"value\": \"<number>\",\n          \"unit\": \"<string>\",\n          \"time\": \"<dateTime>\"\n        },\n        \"proident_147\": {\n          \"value\": \"<number>\",\n          \"unit\": \"<string>\",\n          \"time\": \"<dateTime>\"\n        }\n      },\n      \"et_7\": {\n        \"Ut9_\": {\n          \"value\": \"<number>\",\n          \"unit\": \"<string>\",\n          \"time\": \"<dateTime>\"\n        }\n      }\n    },\n    \"c8y_IsDeviceGroup\": {},\n    \"c8y_DeviceTypes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"c8y_SupportedOperations\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"self\": \"<uri>\"\n}"
                            },
                            {
                              "name": "Authentication information is missing or invalid.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAssets/:childId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "inventory",
                                    "managedObjects",
                                    ":id",
                                    "childAssets",
                                    ":childId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "childId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Managed object not found.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAssets/:childId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "inventory",
                                    "managedObjects",
                                    ":id",
                                    "childAssets",
                                    ":childId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "childId"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Invalid data was sent.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAssets/:childId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "inventory",
                                    "managedObjects",
                                    ":id",
                                    "childAssets",
                                    ":childId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "childId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                              "code": 422,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            }
                          ]
                        },
                        {
                          "name": "Remove a specific child asset from its parent",
                          "request": {
                            "auth": {
                              "type": "basic",
                              "basic": [
                                {
                                  "key": "username",
                                  "value": "{{basicAuthUsername}}",
                                  "type": "string"
                                },
                                {
                                  "key": "password",
                                  "value": "{{basicAuthPassword}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAssets/:childId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childAssets",
                                ":childId"
                              ],
                              "variable": [
                                {
                                  "key": "id",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of the managed object."
                                },
                                {
                                  "key": "childId",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of the child object."
                                }
                              ]
                            },
                            "description": "Remove a specific child asset (by a given child ID) from its parent (by a given ID).\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_ADMIN <b>OR</b> ROLE_MANAGED_OBJECT_ADMIN <b>OR</b> owner of the source (parent) <b>OR</b> owner of the child <b>OR</b> MANAGE_OBJECT_ADMIN permission on the source (parent)\n</section>\n"
                          },
                          "response": [
                            {
                              "name": "A child asset was removed.",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "X-Cumulocity-Processing-Mode",
                                    "value": "PERSISTENT",
                                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAssets/:childId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "inventory",
                                    "managedObjects",
                                    ":id",
                                    "childAssets",
                                    ":childId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "childId"
                                    }
                                  ]
                                }
                              },
                              "status": "No Content",
                              "code": 204,
                              "_postman_previewlanguage": "text",
                              "header": [],
                              "cookie": [],
                              "body": ""
                            },
                            {
                              "name": "Authentication information is missing or invalid.",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "X-Cumulocity-Processing-Mode",
                                    "value": "PERSISTENT",
                                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAssets/:childId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "inventory",
                                    "managedObjects",
                                    ":id",
                                    "childAssets",
                                    ":childId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "childId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Managed object not found.",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "X-Cumulocity-Processing-Mode",
                                    "value": "PERSISTENT",
                                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAssets/:childId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "inventory",
                                    "managedObjects",
                                    ":id",
                                    "childAssets",
                                    ":childId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "childId"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Invalid data was sent.",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "X-Cumulocity-Processing-Mode",
                                    "value": "PERSISTENT",
                                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAssets/:childId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "inventory",
                                    "managedObjects",
                                    ":id",
                                    "childAssets",
                                    ":childId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "childId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                              "code": 422,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Assign a managed object as child asset",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.managedobjectreference+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"managedObject\": {\n    \"id\": \"<string>\"\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAssets",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "managedObjects",
                            ":id",
                            "childAssets"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the managed object."
                            }
                          ]
                        },
                        "description": "The possible ways to assign child objects are:\n\n*  Assign an existing managed object (by a given child ID) as child asset of another managed object (by a given ID).\n*  Assign multiple existing managed objects (by given child IDs) as child assets of another managed object (by a given ID).\n*  Create a managed object in the inventory and assign it as a child asset to another managed object (by a given ID).\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_ADMIN <b>OR</b> ROLE_MANAGED_OBJECT_ADMIN <b>OR</b> ((owner of the source <b>OR</b> MANAGE_OBJECT_ADMIN permission on the source) <b>AND</b> (owner of the child <b>OR</b> MANAGE_OBJECT_ADMIN permission on the child))\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "A managed object was assigned as child asset.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectreference+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"managedObject\": {\n    \"id\": \"<string>\"\n  }\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAssets",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childAssets"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectreference+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"managedObject\": {\n    \"id\": \"<string>\"\n  }\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAssets",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childAssets"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Managed object not found.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectreference+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"managedObject\": {\n    \"id\": \"<string>\"\n  }\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAssets",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childAssets"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    },
                    {
                      "name": "Retrieve all child assets of a specific managed object",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.managedobjectreferencecollection+json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAssets?currentPage=1&pageSize=5&query=<string>&withChildren=true&withChildrenCount=false&withTotalElements=false&withTotalPages=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "managedObjects",
                            ":id",
                            "childAssets"
                          ],
                          "query": [
                            {
                              "key": "currentPage",
                              "value": "1",
                              "description": "The current page of the paginated results."
                            },
                            {
                              "key": "pageSize",
                              "value": "5",
                              "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                            },
                            {
                              "key": "query",
                              "value": "<string>",
                              "description": "Use query language to perform operations and/or filter the results. Details about the properties and supported operations can be found in [Query language](#tag/Query-language)."
                            },
                            {
                              "key": "withChildren",
                              "value": "true",
                              "description": "Determines if children with ID and name should be returned when fetching the managed object. Set it to `false` to improve query performance."
                            },
                            {
                              "key": "withChildrenCount",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain the total number of children in the respective objects (`childAdditions`, `childAssets` and `childDevices`)."
                            },
                            {
                              "key": "withTotalElements",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                            },
                            {
                              "key": "withTotalPages",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                            }
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the managed object."
                            }
                          ]
                        },
                        "description": "Retrieve all child assets of a specific managed object by a given ID, or a subset based on queries.\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_READ <b>OR</b> ROLE_MANAGED_OBJECT_READ <b>OR</b> owner of the source <b>OR</b> MANAGE_OBJECT_READ permission on the source\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The request has succeeded and all child assets are sent in the response.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectreferencecollection+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAssets?currentPage=1&pageSize=5&query=<string>&withChildren=true&withChildrenCount=false&withTotalElements=false&withTotalPages=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childAssets"
                              ],
                              "query": [
                                {
                                  "key": "currentPage",
                                  "value": "1",
                                  "description": "The current page of the paginated results."
                                },
                                {
                                  "key": "pageSize",
                                  "value": "5",
                                  "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                },
                                {
                                  "key": "query",
                                  "value": "<string>",
                                  "description": "Use query language to perform operations and/or filter the results. Details about the properties and supported operations can be found in [Query language](#tag/Query-language)."
                                },
                                {
                                  "key": "withChildren",
                                  "value": "true",
                                  "description": "Determines if children with ID and name should be returned when fetching the managed object. Set it to `false` to improve query performance."
                                },
                                {
                                  "key": "withChildrenCount",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain the total number of children in the respective objects (`childAdditions`, `childAssets` and `childDevices`)."
                                },
                                {
                                  "key": "withTotalElements",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                },
                                {
                                  "key": "withTotalPages",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.managedobjectreferencecollection+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"prev\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"next\": \"<string>\",\n  \"references\": [\n    {\n      \"managedObject\": {\n        \"creationTime\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"lastUpdated\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"self\": \"<uri>\",\n        \"type\": \"<string>\",\n        \"childAdditions\": {\n          \"count\": \"<integer>\",\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"childAssets\": {\n          \"count\": \"<integer>\",\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"childDevices\": {\n          \"count\": \"<integer>\",\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"additionParents\": {\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"assetParents\": {\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"deviceParents\": {\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"c8y_IsDevice\": {},\n        \"c8y_LatestMeasurements\": {\n          \"veniam525\": {\n            \"veniam_65\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"fugiat_11e\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"occaecat68\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"Lorem_b5\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            }\n          }\n        },\n        \"c8y_IsDeviceGroup\": {},\n        \"c8y_DeviceTypes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"c8y_SupportedOperations\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"managedObject\": {\n        \"creationTime\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"lastUpdated\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"self\": \"<uri>\",\n        \"type\": \"<string>\",\n        \"childAdditions\": {\n          \"count\": \"<integer>\",\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"childAssets\": {\n          \"count\": \"<integer>\",\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"childDevices\": {\n          \"count\": \"<integer>\",\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"additionParents\": {\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"assetParents\": {\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"deviceParents\": {\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"c8y_IsDevice\": {},\n        \"c8y_LatestMeasurements\": {\n          \"quia_\": {\n            \"amet_e5\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"Lorem_717\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"aliquip0c0\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"occaecat9b\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            }\n          },\n          \"ut3\": {\n            \"laborum3\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"anim1a\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"ipsum_b3\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            }\n          },\n          \"sint32\": {\n            \"ullamco_1\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"in658\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"sed2\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            }\n          }\n        },\n        \"c8y_IsDeviceGroup\": {},\n        \"c8y_DeviceTypes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"c8y_SupportedOperations\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ],\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  }\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAssets?currentPage=1&pageSize=5&query=<string>&withChildren=true&withChildrenCount=false&withTotalElements=false&withTotalPages=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childAssets"
                              ],
                              "query": [
                                {
                                  "key": "currentPage",
                                  "value": "1",
                                  "description": "The current page of the paginated results."
                                },
                                {
                                  "key": "pageSize",
                                  "value": "5",
                                  "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                },
                                {
                                  "key": "query",
                                  "value": "<string>",
                                  "description": "Use query language to perform operations and/or filter the results. Details about the properties and supported operations can be found in [Query language](#tag/Query-language)."
                                },
                                {
                                  "key": "withChildren",
                                  "value": "true",
                                  "description": "Determines if children with ID and name should be returned when fetching the managed object. Set it to `false` to improve query performance."
                                },
                                {
                                  "key": "withChildrenCount",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain the total number of children in the respective objects (`childAdditions`, `childAssets` and `childDevices`)."
                                },
                                {
                                  "key": "withTotalElements",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                },
                                {
                                  "key": "withTotalPages",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Managed object not found.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAssets?currentPage=1&pageSize=5&query=<string>&withChildren=true&withChildrenCount=false&withTotalElements=false&withTotalPages=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childAssets"
                              ],
                              "query": [
                                {
                                  "key": "currentPage",
                                  "value": "1",
                                  "description": "The current page of the paginated results."
                                },
                                {
                                  "key": "pageSize",
                                  "value": "5",
                                  "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                },
                                {
                                  "key": "query",
                                  "value": "<string>",
                                  "description": "Use query language to perform operations and/or filter the results. Details about the properties and supported operations can be found in [Query language](#tag/Query-language)."
                                },
                                {
                                  "key": "withChildren",
                                  "value": "true",
                                  "description": "Determines if children with ID and name should be returned when fetching the managed object. Set it to `false` to improve query performance."
                                },
                                {
                                  "key": "withChildrenCount",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain the total number of children in the respective objects (`childAdditions`, `childAssets` and `childDevices`)."
                                },
                                {
                                  "key": "withTotalElements",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                },
                                {
                                  "key": "withTotalPages",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Invalid data was sent.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAssets?currentPage=1&pageSize=5&query=<string>&withChildren=true&withChildrenCount=false&withTotalElements=false&withTotalPages=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childAssets"
                              ],
                              "query": [
                                {
                                  "key": "currentPage",
                                  "value": "1",
                                  "description": "The current page of the paginated results."
                                },
                                {
                                  "key": "pageSize",
                                  "value": "5",
                                  "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                },
                                {
                                  "key": "query",
                                  "value": "<string>",
                                  "description": "Use query language to perform operations and/or filter the results. Details about the properties and supported operations can be found in [Query language](#tag/Query-language)."
                                },
                                {
                                  "key": "withChildren",
                                  "value": "true",
                                  "description": "Determines if children with ID and name should be returned when fetching the managed object. Set it to `false` to improve query performance."
                                },
                                {
                                  "key": "withChildrenCount",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain the total number of children in the respective objects (`childAdditions`, `childAssets` and `childDevices`)."
                                },
                                {
                                  "key": "withTotalElements",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                },
                                {
                                  "key": "withTotalPages",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                          "code": 422,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    },
                    {
                      "name": "Remove specific child assets from its parent",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.managedobjectreferencecollection+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"references\": [\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAssets",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "managedObjects",
                            ":id",
                            "childAssets"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the managed object."
                            }
                          ]
                        },
                        "description": "Remove specific child assets (by given child IDs) from its parent (by a given ID).\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_ADMIN <b>OR</b> ROLE_MANAGED_OBJECT_ADMIN <b>OR</b> owner of the source (parent) <b>OR</b> owner of the child <b>OR</b> MANAGE_OBJECT_ADMIN permission on the source (parent)\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "Child assets were removed.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectreferencecollection+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"references\": [\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAssets",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childAssets"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectreferencecollection+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"references\": [\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAssets",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childAssets"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Managed object not found.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectreferencecollection+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"references\": [\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAssets",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childAssets"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Unprocessable Entity – invalid payload.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectreferencecollection+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"references\": [\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childAssets",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childAssets"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                          "code": 422,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "childDevices",
                  "item": [
                    {
                      "name": "{childId}",
                      "item": [
                        {
                          "name": "Retrieve a specific child device of a specific managed object",
                          "request": {
                            "auth": {
                              "type": "basic",
                              "basic": [
                                {
                                  "key": "username",
                                  "value": "{{basicAuthUsername}}",
                                  "type": "string"
                                },
                                {
                                  "key": "password",
                                  "value": "{{basicAuthPassword}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectreference+json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childDevices/:childId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childDevices",
                                ":childId"
                              ],
                              "variable": [
                                {
                                  "key": "id",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of the managed object."
                                },
                                {
                                  "key": "childId",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of the child object."
                                }
                              ]
                            },
                            "description": "Retrieve a specific child device (by a given child ID) of a specific managed object (by a given ID).\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_READ <b>OR</b> ROLE_MANAGED_OBJECT_READ <b>OR</b> MANAGE_OBJECT_READ permission on the source (parent)\n</section>\n"
                          },
                          "response": [
                            {
                              "name": "The request has succeeded and the child device is sent in the response.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.managedobjectreference+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/inventory/managedObjects/:id/childDevices/:childId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "inventory",
                                    "managedObjects",
                                    ":id",
                                    "childDevices",
                                    ":childId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "childId"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.managedobjectreference+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"managedObject\": {\n    \"creationTime\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"lastUpdated\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"self\": \"<uri>\",\n    \"type\": \"<string>\",\n    \"childAdditions\": {\n      \"count\": \"<integer>\",\n      \"references\": [\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        },\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        }\n      ],\n      \"self\": \"<string>\"\n    },\n    \"childAssets\": {\n      \"count\": \"<integer>\",\n      \"references\": [\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        },\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        }\n      ],\n      \"self\": \"<string>\"\n    },\n    \"childDevices\": {\n      \"count\": \"<integer>\",\n      \"references\": [\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        },\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        }\n      ],\n      \"self\": \"<string>\"\n    },\n    \"additionParents\": {\n      \"references\": [\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        },\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        }\n      ],\n      \"self\": \"<string>\"\n    },\n    \"assetParents\": {\n      \"references\": [\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        },\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        }\n      ],\n      \"self\": \"<string>\"\n    },\n    \"deviceParents\": {\n      \"references\": [\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        },\n        {\n          \"managedObject\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        }\n      ],\n      \"self\": \"<string>\"\n    },\n    \"c8y_IsDevice\": {},\n    \"c8y_LatestMeasurements\": {\n      \"voluptate__\": {\n        \"fugiat57\": {\n          \"value\": \"<number>\",\n          \"unit\": \"<string>\",\n          \"time\": \"<dateTime>\"\n        },\n        \"et_9b\": {\n          \"value\": \"<number>\",\n          \"unit\": \"<string>\",\n          \"time\": \"<dateTime>\"\n        }\n      },\n      \"amet2c\": {\n        \"in0d6\": {\n          \"value\": \"<number>\",\n          \"unit\": \"<string>\",\n          \"time\": \"<dateTime>\"\n        },\n        \"ullamco_e\": {\n          \"value\": \"<number>\",\n          \"unit\": \"<string>\",\n          \"time\": \"<dateTime>\"\n        }\n      }\n    },\n    \"c8y_IsDeviceGroup\": {},\n    \"c8y_DeviceTypes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"c8y_SupportedOperations\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"self\": \"<uri>\"\n}"
                            },
                            {
                              "name": "Authentication information is missing or invalid.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/inventory/managedObjects/:id/childDevices/:childId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "inventory",
                                    "managedObjects",
                                    ":id",
                                    "childDevices",
                                    ":childId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "childId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Managed object not found.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/inventory/managedObjects/:id/childDevices/:childId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "inventory",
                                    "managedObjects",
                                    ":id",
                                    "childDevices",
                                    ":childId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "childId"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Invalid data was sent.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/inventory/managedObjects/:id/childDevices/:childId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "inventory",
                                    "managedObjects",
                                    ":id",
                                    "childDevices",
                                    ":childId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "childId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                              "code": 422,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            }
                          ]
                        },
                        {
                          "name": "Remove a specific child device from its parent",
                          "request": {
                            "auth": {
                              "type": "basic",
                              "basic": [
                                {
                                  "key": "username",
                                  "value": "{{basicAuthUsername}}",
                                  "type": "string"
                                },
                                {
                                  "key": "password",
                                  "value": "{{basicAuthPassword}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childDevices/:childId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childDevices",
                                ":childId"
                              ],
                              "variable": [
                                {
                                  "key": "id",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of the managed object."
                                },
                                {
                                  "key": "childId",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of the child object."
                                }
                              ]
                            },
                            "description": "Remove a specific child device (by a given child ID) from its parent (by a given ID).\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_ADMIN <b>OR</b> ROLE_MANAGED_OBJECT_ADMIN <b>OR</b> owner of the source (parent) <b>OR</b> owner of the child <b>OR</b> MANAGE_OBJECT_ADMIN permission on the source (parent)\n</section>\n"
                          },
                          "response": [
                            {
                              "name": "A child device was removed.",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "X-Cumulocity-Processing-Mode",
                                    "value": "PERSISTENT",
                                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/inventory/managedObjects/:id/childDevices/:childId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "inventory",
                                    "managedObjects",
                                    ":id",
                                    "childDevices",
                                    ":childId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "childId"
                                    }
                                  ]
                                }
                              },
                              "status": "No Content",
                              "code": 204,
                              "_postman_previewlanguage": "text",
                              "header": [],
                              "cookie": [],
                              "body": ""
                            },
                            {
                              "name": "Authentication information is missing or invalid.",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "X-Cumulocity-Processing-Mode",
                                    "value": "PERSISTENT",
                                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/inventory/managedObjects/:id/childDevices/:childId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "inventory",
                                    "managedObjects",
                                    ":id",
                                    "childDevices",
                                    ":childId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "childId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Managed object not found.",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "X-Cumulocity-Processing-Mode",
                                    "value": "PERSISTENT",
                                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/inventory/managedObjects/:id/childDevices/:childId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "inventory",
                                    "managedObjects",
                                    ":id",
                                    "childDevices",
                                    ":childId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "childId"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Invalid data was sent.",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "X-Cumulocity-Processing-Mode",
                                    "value": "PERSISTENT",
                                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/inventory/managedObjects/:id/childDevices/:childId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "inventory",
                                    "managedObjects",
                                    ":id",
                                    "childDevices",
                                    ":childId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "id"
                                    },
                                    {
                                      "key": "childId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                              "code": 422,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Assign a managed object as child device",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.managedobjectreference+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"managedObject\": {\n    \"id\": \"<string>\"\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/inventory/managedObjects/:id/childDevices",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "managedObjects",
                            ":id",
                            "childDevices"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the managed object."
                            }
                          ]
                        },
                        "description": "The possible ways to assign child objects are:\n\n*  Assign an existing managed object (by a given child ID) as child device of another managed object (by a given ID).\n*  Assign multiple existing managed objects (by given child IDs) as child devices of another managed object (by a given ID).\n*  Create a managed object in the inventory and assign it as a child device to another managed object (by a given ID).\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_ADMIN <b>OR</b> ROLE_MANAGED_OBJECT_ADMIN <b>OR</b> ((owner of the source <b>OR</b> MANAGE_OBJECT_ADMIN permission on the source) <b>AND</b> (owner of the child <b>OR</b> MANAGE_OBJECT_ADMIN permission on the child))\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "A managed object was assigned as child device.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectreference+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"managedObject\": {\n    \"id\": \"<string>\"\n  }\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childDevices",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childDevices"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectreference+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"managedObject\": {\n    \"id\": \"<string>\"\n  }\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childDevices",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childDevices"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Managed object not found.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectreference+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"managedObject\": {\n    \"id\": \"<string>\"\n  }\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childDevices",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childDevices"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    },
                    {
                      "name": "Retrieve all child devices of a specific managed object",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.managedobjectreferencecollection+json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/inventory/managedObjects/:id/childDevices?currentPage=1&pageSize=5&query=<string>&withChildren=true&withChildrenCount=false&withTotalElements=false&withTotalPages=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "managedObjects",
                            ":id",
                            "childDevices"
                          ],
                          "query": [
                            {
                              "key": "currentPage",
                              "value": "1",
                              "description": "The current page of the paginated results."
                            },
                            {
                              "key": "pageSize",
                              "value": "5",
                              "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                            },
                            {
                              "key": "query",
                              "value": "<string>",
                              "description": "Use query language to perform operations and/or filter the results. Details about the properties and supported operations can be found in [Query language](#tag/Query-language)."
                            },
                            {
                              "key": "withChildren",
                              "value": "true",
                              "description": "Determines if children with ID and name should be returned when fetching the managed object. Set it to `false` to improve query performance."
                            },
                            {
                              "key": "withChildrenCount",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain the total number of children in the respective objects (`childAdditions`, `childAssets` and `childDevices`)."
                            },
                            {
                              "key": "withTotalElements",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                            },
                            {
                              "key": "withTotalPages",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                            }
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the managed object."
                            }
                          ]
                        },
                        "description": "Retrieve all child devices of a specific managed object by a given ID, or a subset based on queries.\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_READ <b>OR</b> ROLE_MANAGED_OBJECT_READ <b>OR</b> owner of the source <b>OR</b> MANAGE_OBJECT_READ permission on the source\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The request has succeeded and all child devices are sent in the response.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectreferencecollection+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childDevices?currentPage=1&pageSize=5&query=<string>&withChildren=true&withChildrenCount=false&withTotalElements=false&withTotalPages=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childDevices"
                              ],
                              "query": [
                                {
                                  "key": "currentPage",
                                  "value": "1",
                                  "description": "The current page of the paginated results."
                                },
                                {
                                  "key": "pageSize",
                                  "value": "5",
                                  "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                },
                                {
                                  "key": "query",
                                  "value": "<string>",
                                  "description": "Use query language to perform operations and/or filter the results. Details about the properties and supported operations can be found in [Query language](#tag/Query-language)."
                                },
                                {
                                  "key": "withChildren",
                                  "value": "true",
                                  "description": "Determines if children with ID and name should be returned when fetching the managed object. Set it to `false` to improve query performance."
                                },
                                {
                                  "key": "withChildrenCount",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain the total number of children in the respective objects (`childAdditions`, `childAssets` and `childDevices`)."
                                },
                                {
                                  "key": "withTotalElements",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                },
                                {
                                  "key": "withTotalPages",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.managedobjectreferencecollection+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"prev\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"next\": \"<string>\",\n  \"references\": [\n    {\n      \"managedObject\": {\n        \"creationTime\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"lastUpdated\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"self\": \"<uri>\",\n        \"type\": \"<string>\",\n        \"childAdditions\": {\n          \"count\": \"<integer>\",\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"childAssets\": {\n          \"count\": \"<integer>\",\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"childDevices\": {\n          \"count\": \"<integer>\",\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"additionParents\": {\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"assetParents\": {\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"deviceParents\": {\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"c8y_IsDevice\": {},\n        \"c8y_LatestMeasurements\": {\n          \"veniam525\": {\n            \"veniam_65\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"fugiat_11e\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"occaecat68\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"Lorem_b5\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            }\n          }\n        },\n        \"c8y_IsDeviceGroup\": {},\n        \"c8y_DeviceTypes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"c8y_SupportedOperations\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"managedObject\": {\n        \"creationTime\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"lastUpdated\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"self\": \"<uri>\",\n        \"type\": \"<string>\",\n        \"childAdditions\": {\n          \"count\": \"<integer>\",\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"childAssets\": {\n          \"count\": \"<integer>\",\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"childDevices\": {\n          \"count\": \"<integer>\",\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"additionParents\": {\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"assetParents\": {\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"deviceParents\": {\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"c8y_IsDevice\": {},\n        \"c8y_LatestMeasurements\": {\n          \"quia_\": {\n            \"amet_e5\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"Lorem_717\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"aliquip0c0\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"occaecat9b\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            }\n          },\n          \"ut3\": {\n            \"laborum3\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"anim1a\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"ipsum_b3\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            }\n          },\n          \"sint32\": {\n            \"ullamco_1\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"in658\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"sed2\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            }\n          }\n        },\n        \"c8y_IsDeviceGroup\": {},\n        \"c8y_DeviceTypes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"c8y_SupportedOperations\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ],\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  }\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childDevices?currentPage=1&pageSize=5&query=<string>&withChildren=true&withChildrenCount=false&withTotalElements=false&withTotalPages=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childDevices"
                              ],
                              "query": [
                                {
                                  "key": "currentPage",
                                  "value": "1",
                                  "description": "The current page of the paginated results."
                                },
                                {
                                  "key": "pageSize",
                                  "value": "5",
                                  "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                },
                                {
                                  "key": "query",
                                  "value": "<string>",
                                  "description": "Use query language to perform operations and/or filter the results. Details about the properties and supported operations can be found in [Query language](#tag/Query-language)."
                                },
                                {
                                  "key": "withChildren",
                                  "value": "true",
                                  "description": "Determines if children with ID and name should be returned when fetching the managed object. Set it to `false` to improve query performance."
                                },
                                {
                                  "key": "withChildrenCount",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain the total number of children in the respective objects (`childAdditions`, `childAssets` and `childDevices`)."
                                },
                                {
                                  "key": "withTotalElements",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                },
                                {
                                  "key": "withTotalPages",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Managed object not found.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childDevices?currentPage=1&pageSize=5&query=<string>&withChildren=true&withChildrenCount=false&withTotalElements=false&withTotalPages=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childDevices"
                              ],
                              "query": [
                                {
                                  "key": "currentPage",
                                  "value": "1",
                                  "description": "The current page of the paginated results."
                                },
                                {
                                  "key": "pageSize",
                                  "value": "5",
                                  "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                },
                                {
                                  "key": "query",
                                  "value": "<string>",
                                  "description": "Use query language to perform operations and/or filter the results. Details about the properties and supported operations can be found in [Query language](#tag/Query-language)."
                                },
                                {
                                  "key": "withChildren",
                                  "value": "true",
                                  "description": "Determines if children with ID and name should be returned when fetching the managed object. Set it to `false` to improve query performance."
                                },
                                {
                                  "key": "withChildrenCount",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain the total number of children in the respective objects (`childAdditions`, `childAssets` and `childDevices`)."
                                },
                                {
                                  "key": "withTotalElements",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                },
                                {
                                  "key": "withTotalPages",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Invalid data was sent.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childDevices?currentPage=1&pageSize=5&query=<string>&withChildren=true&withChildrenCount=false&withTotalElements=false&withTotalPages=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childDevices"
                              ],
                              "query": [
                                {
                                  "key": "currentPage",
                                  "value": "1",
                                  "description": "The current page of the paginated results."
                                },
                                {
                                  "key": "pageSize",
                                  "value": "5",
                                  "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                },
                                {
                                  "key": "query",
                                  "value": "<string>",
                                  "description": "Use query language to perform operations and/or filter the results. Details about the properties and supported operations can be found in [Query language](#tag/Query-language)."
                                },
                                {
                                  "key": "withChildren",
                                  "value": "true",
                                  "description": "Determines if children with ID and name should be returned when fetching the managed object. Set it to `false` to improve query performance."
                                },
                                {
                                  "key": "withChildrenCount",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain the total number of children in the respective objects (`childAdditions`, `childAssets` and `childDevices`)."
                                },
                                {
                                  "key": "withTotalElements",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                },
                                {
                                  "key": "withTotalPages",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                          "code": 422,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    },
                    {
                      "name": "Remove specific child devices from its parent",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.managedobjectreferencecollection+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"references\": [\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/inventory/managedObjects/:id/childDevices",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "managedObjects",
                            ":id",
                            "childDevices"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the managed object."
                            }
                          ]
                        },
                        "description": "Remove specific child devices (by given child IDs) from its parent (by a given ID).\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_ADMIN <b>OR</b> ROLE_MANAGED_OBJECT_ADMIN <b>OR</b> owner of the source (parent) <b>OR</b> owner of the child <b>OR</b> MANAGE_OBJECT_ADMIN permission on the source (parent)\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "Child devices were removed.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectreferencecollection+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"references\": [\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childDevices",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childDevices"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectreferencecollection+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"references\": [\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childDevices",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childDevices"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Managed object not found.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectreferencecollection+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"references\": [\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childDevices",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childDevices"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Unprocessable Entity – invalid payload.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectreferencecollection+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"references\": [\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"managedObject\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/childDevices",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "childDevices"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                          "code": 422,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "supportedMeasurements",
                  "item": [
                    {
                      "name": "Retrieve all supported measurement fragments of a specific managed object",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/inventory/managedObjects/:id/supportedMeasurements",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "managedObjects",
                            ":id",
                            "supportedMeasurements"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the managed object."
                            }
                          ]
                        },
                        "description": "Retrieve all measurement types of a specific managed object by a given ID.\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_READ <b>OR</b> ROLE_MANAGED_OBJECT_READ <b>OR</b> owner of the source <b>OR</b> MANAGE_OBJECT_READ permission on the source\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The request has succeeded and all measurement types are sent in the response.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/supportedMeasurements",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "supportedMeasurements"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"c8y_SupportedMeasurements\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/supportedMeasurements",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "supportedMeasurements"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Managed object not found.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/supportedMeasurements",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "supportedMeasurements"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "supportedSeries",
                  "item": [
                    {
                      "name": "Retrieve all supported measurement fragments and series of a specific managed object",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/inventory/managedObjects/:id/supportedSeries",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "managedObjects",
                            ":id",
                            "supportedSeries"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the managed object."
                            }
                          ]
                        },
                        "description": "Retrieve all supported measurement fragments and series of a specific managed object by a given ID.\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_READ <b>OR</b> ROLE_MANAGED_OBJECT_READ <b>OR</b> owner of the source <b>OR</b> MANAGE_OBJECT_READ permission on the source\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The request has succeeded and all supported measurement series are sent in the response.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/supportedSeries",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "supportedSeries"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"c8y_SupportedSeries\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/supportedSeries",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "supportedSeries"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Managed object not found.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/supportedSeries",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "supportedSeries"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "user",
                  "item": [
                    {
                      "name": "Retrieve the username and state of a specific managed object",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.managedobjectuser+json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/inventory/managedObjects/:id/user",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "managedObjects",
                            ":id",
                            "user"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the managed object."
                            }
                          ]
                        },
                        "description": "Retrieve the device owner's username and state (enabled or disabled) of a specific managed object (by a given ID).\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_READ <b>OR</b> ROLE_MANAGED_OBJECT_READ <b>OR</b> owner of the source <b>OR</b> MANAGE_OBJECT_READ permission on the source\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The request has succeeded and the username and state are sent in the response.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectuser+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/user",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "user"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.managedobjectuser+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"enabled\": \"<boolean>\",\n  \"self\": \"<uri>\",\n  \"userName\": \"<string>\"\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/user",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "user"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Managed object not found.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/user",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "user"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    },
                    {
                      "name": "Update the user's details of a specific managed object",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "PUT",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.managedobjectuser+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.managedobjectuser+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"enabled\": \"<boolean>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/inventory/managedObjects/:id/user",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "managedObjects",
                            ":id",
                            "user"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the managed object."
                            }
                          ]
                        },
                        "description": "Update the device owner's state (enabled or disabled) of a specific managed object (by a given ID).\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_ADMIN <b>OR</b> ROLE_MANAGED_OBJECT_ADMIN <b>OR</b> owner of the source <b>OR</b> MANAGE_OBJECT_ADMIN permission on the source\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The user's details of a specific managed object were updated.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectuser+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectuser+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"enabled\": \"<boolean>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/user",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "user"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.managedobjectuser+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"enabled\": \"<boolean>\",\n  \"self\": \"<uri>\",\n  \"userName\": \"<string>\"\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectuser+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"enabled\": \"<boolean>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/user",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "user"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Managed object not found.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.managedobjectuser+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"enabled\": \"<boolean>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/inventory/managedObjects/:id/user",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "inventory",
                                "managedObjects",
                                ":id",
                                "user"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Retrieve a specific managed object",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.managedobject+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/inventory/managedObjects/:id?skipChildrenNames=false&withChildren=true&withChildrenCount=false&withParents=false&withLatestValues=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "inventory",
                        "managedObjects",
                        ":id"
                      ],
                      "query": [
                        {
                          "key": "skipChildrenNames",
                          "value": "false",
                          "description": "When set to `true`, the returned references of child devices won't contain their names."
                        },
                        {
                          "key": "withChildren",
                          "value": "true",
                          "description": "Determines if children with ID and name should be returned when fetching the managed object. Set it to `false` to improve query performance."
                        },
                        {
                          "key": "withChildrenCount",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain the total number of children in the respective objects (`childAdditions`, `childAssets` and `childDevices`)."
                        },
                        {
                          "key": "withParents",
                          "value": "false",
                          "description": "When set to `true`, the returned references of child parents will return the device's parents (if any). Otherwise, it will be an empty array."
                        },
                        {
                          "key": "withLatestValues",
                          "value": "false",
                          "description": "If set to true the platform returns managed objects with the fragment `c8y_LatestMeasurements, which contains the latest measurement values reported by the device to the platform.\n\n> **⚠️ Feature Preview:** The parameter is a part of the Latest Measurement feature which is still under public preview.\n"
                        }
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the managed object."
                        }
                      ]
                    },
                    "description": "Retrieve a specific managed object (for example, device, group, template) by a given ID.\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_READ <b>OR</b> ROLE_MANAGED_OBJECT_READ <b>OR</b> owner of the source <b>OR</b> MANAGE_OBJECT_READ permission on the source\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the object is sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.managedobject+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/inventory/managedObjects/:id?skipChildrenNames=false&withChildren=true&withChildrenCount=false&withParents=false&withLatestValues=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "managedObjects",
                            ":id"
                          ],
                          "query": [
                            {
                              "key": "skipChildrenNames",
                              "value": "false",
                              "description": "When set to `true`, the returned references of child devices won't contain their names."
                            },
                            {
                              "key": "withChildren",
                              "value": "true",
                              "description": "Determines if children with ID and name should be returned when fetching the managed object. Set it to `false` to improve query performance."
                            },
                            {
                              "key": "withChildrenCount",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain the total number of children in the respective objects (`childAdditions`, `childAssets` and `childDevices`)."
                            },
                            {
                              "key": "withParents",
                              "value": "false",
                              "description": "When set to `true`, the returned references of child parents will return the device's parents (if any). Otherwise, it will be an empty array."
                            },
                            {
                              "key": "withLatestValues",
                              "value": "false",
                              "description": "If set to true the platform returns managed objects with the fragment `c8y_LatestMeasurements, which contains the latest measurement values reported by the device to the platform.\n\n> **⚠️ Feature Preview:** The parameter is a part of the Latest Measurement feature which is still under public preview.\n"
                            }
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.managedobject+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"creationTime\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"lastUpdated\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"type\": \"<string>\",\n  \"childAdditions\": {\n    \"count\": \"<integer>\",\n    \"references\": [\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"self\": \"<string>\"\n  },\n  \"childAssets\": {\n    \"count\": \"<integer>\",\n    \"references\": [\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"self\": \"<string>\"\n  },\n  \"childDevices\": {\n    \"count\": \"<integer>\",\n    \"references\": [\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"self\": \"<string>\"\n  },\n  \"additionParents\": {\n    \"references\": [\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"self\": \"<string>\"\n  },\n  \"assetParents\": {\n    \"references\": [\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"self\": \"<string>\"\n  },\n  \"deviceParents\": {\n    \"references\": [\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"self\": \"<string>\"\n  },\n  \"c8y_IsDevice\": {},\n  \"c8y_LatestMeasurements\": {\n    \"officia_76\": {\n      \"id_9d_\": {\n        \"value\": \"<number>\",\n        \"unit\": \"<string>\",\n        \"time\": \"<dateTime>\"\n      },\n      \"esse_866\": {\n        \"value\": \"<number>\",\n        \"unit\": \"<string>\",\n        \"time\": \"<dateTime>\"\n      },\n      \"dolore4a\": {\n        \"value\": \"<number>\",\n        \"unit\": \"<string>\",\n        \"time\": \"<dateTime>\"\n      }\n    }\n  },\n  \"c8y_IsDeviceGroup\": {},\n  \"c8y_DeviceTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"c8y_SupportedOperations\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/inventory/managedObjects/:id?skipChildrenNames=false&withChildren=true&withChildrenCount=false&withParents=false&withLatestValues=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "managedObjects",
                            ":id"
                          ],
                          "query": [
                            {
                              "key": "skipChildrenNames",
                              "value": "false",
                              "description": "When set to `true`, the returned references of child devices won't contain their names."
                            },
                            {
                              "key": "withChildren",
                              "value": "true",
                              "description": "Determines if children with ID and name should be returned when fetching the managed object. Set it to `false` to improve query performance."
                            },
                            {
                              "key": "withChildrenCount",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain the total number of children in the respective objects (`childAdditions`, `childAssets` and `childDevices`)."
                            },
                            {
                              "key": "withParents",
                              "value": "false",
                              "description": "When set to `true`, the returned references of child parents will return the device's parents (if any). Otherwise, it will be an empty array."
                            },
                            {
                              "key": "withLatestValues",
                              "value": "false",
                              "description": "If set to true the platform returns managed objects with the fragment `c8y_LatestMeasurements, which contains the latest measurement values reported by the device to the platform.\n\n> **⚠️ Feature Preview:** The parameter is a part of the Latest Measurement feature which is still under public preview.\n"
                            }
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Managed object not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/inventory/managedObjects/:id?skipChildrenNames=false&withChildren=true&withChildrenCount=false&withParents=false&withLatestValues=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "managedObjects",
                            ":id"
                          ],
                          "query": [
                            {
                              "key": "skipChildrenNames",
                              "value": "false",
                              "description": "When set to `true`, the returned references of child devices won't contain their names."
                            },
                            {
                              "key": "withChildren",
                              "value": "true",
                              "description": "Determines if children with ID and name should be returned when fetching the managed object. Set it to `false` to improve query performance."
                            },
                            {
                              "key": "withChildrenCount",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain the total number of children in the respective objects (`childAdditions`, `childAssets` and `childDevices`)."
                            },
                            {
                              "key": "withParents",
                              "value": "false",
                              "description": "When set to `true`, the returned references of child parents will return the device's parents (if any). Otherwise, it will be an empty array."
                            },
                            {
                              "key": "withLatestValues",
                              "value": "false",
                              "description": "If set to true the platform returns managed objects with the fragment `c8y_LatestMeasurements, which contains the latest measurement values reported by the device to the platform.\n\n> **⚠️ Feature Preview:** The parameter is a part of the Latest Measurement feature which is still under public preview.\n"
                            }
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Update a specific managed object",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.managedobject+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.managedobject+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"type\": \"<string>\",\n  \"c8y_IsDevice\": {},\n  \"c8y_IsDeviceGroup\": {},\n  \"c8y_DeviceTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"c8y_SupportedOperations\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/inventory/managedObjects/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "inventory",
                        "managedObjects",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the managed object."
                        }
                      ]
                    },
                    "description": "Update a specific managed object (for example, device) by a given ID.\n\nFor example, if you want to specify that your managed object is a device, you must add the fragment `c8y_IsDevice`.\n\n\nThe endpoint can also be used as a device availability heartbeat.\nIf you only specifiy the `id`, it updates the date when the last message was received and no other property.\nThe response then only contains the `id` instead of the full managed object.\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_ADMIN <b>OR</b> ROLE_MANAGED_OBJECT_ADMIN <b>OR</b> owner of the source <b>OR</b> MANAGE_OBJECT_ADMIN permission on the source\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "A managed object was updated.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.managedobject+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.managedobject+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"type\": \"<string>\",\n  \"c8y_IsDevice\": {},\n  \"c8y_IsDeviceGroup\": {},\n  \"c8y_DeviceTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"c8y_SupportedOperations\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/inventory/managedObjects/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "managedObjects",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.managedobject+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"creationTime\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"lastUpdated\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"type\": \"<string>\",\n  \"childAdditions\": {\n    \"count\": \"<integer>\",\n    \"references\": [\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"self\": \"<string>\"\n  },\n  \"childAssets\": {\n    \"count\": \"<integer>\",\n    \"references\": [\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"self\": \"<string>\"\n  },\n  \"childDevices\": {\n    \"count\": \"<integer>\",\n    \"references\": [\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"self\": \"<string>\"\n  },\n  \"additionParents\": {\n    \"references\": [\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"self\": \"<string>\"\n  },\n  \"assetParents\": {\n    \"references\": [\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"self\": \"<string>\"\n  },\n  \"deviceParents\": {\n    \"references\": [\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"self\": \"<string>\"\n  },\n  \"c8y_IsDevice\": {},\n  \"c8y_LatestMeasurements\": {\n    \"officia_76\": {\n      \"id_9d_\": {\n        \"value\": \"<number>\",\n        \"unit\": \"<string>\",\n        \"time\": \"<dateTime>\"\n      },\n      \"esse_866\": {\n        \"value\": \"<number>\",\n        \"unit\": \"<string>\",\n        \"time\": \"<dateTime>\"\n      },\n      \"dolore4a\": {\n        \"value\": \"<number>\",\n        \"unit\": \"<string>\",\n        \"time\": \"<dateTime>\"\n      }\n    }\n  },\n  \"c8y_IsDeviceGroup\": {},\n  \"c8y_DeviceTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"c8y_SupportedOperations\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.managedobject+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"type\": \"<string>\",\n  \"c8y_IsDevice\": {},\n  \"c8y_IsDeviceGroup\": {},\n  \"c8y_DeviceTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"c8y_SupportedOperations\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/inventory/managedObjects/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "managedObjects",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Managed object not found.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.managedobject+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"type\": \"<string>\",\n  \"c8y_IsDevice\": {},\n  \"c8y_IsDeviceGroup\": {},\n  \"c8y_DeviceTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"c8y_SupportedOperations\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/inventory/managedObjects/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "managedObjects",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Remove a specific managed object",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/inventory/managedObjects/:id?cascade=false&forceCascade=false&withDeviceUser=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "inventory",
                        "managedObjects",
                        ":id"
                      ],
                      "query": [
                        {
                          "key": "cascade",
                          "value": "false",
                          "description": "When set to `true` and the managed object is a device or group, all the hierarchy will be deleted."
                        },
                        {
                          "key": "forceCascade",
                          "value": "false",
                          "description": "When set to `true` all the hierarchy will be deleted without checking the type of managed object. It takes precedence over the parameter `cascade`."
                        },
                        {
                          "key": "withDeviceUser",
                          "value": "false",
                          "description": "When set to `true` and the managed object is a device, it deletes the associated device user (credentials)."
                        }
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the managed object."
                        }
                      ]
                    },
                    "description": "Remove a specific managed object (for example, device) by a given ID.\n\n> **&#9432; Info:** Inventory DELETE requests are not synchronous. The response could be returned before the delete request has been completed. This may happen especially when the deleted managed object has a lot of associated data. After sending the request, the platform starts deleting the associated data in an asynchronous way. Finally, the requested managed object is deleted after all associated data has been deleted.\n\n> **&#9432; Info:** By default, the delete operation is always propagated to the subgroups, but only if the deleted object is a group.\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_ADMIN <b>OR</b> ROLE_MANAGED_OBJECT_ADMIN <b>OR</b> owner of the source <b>OR</b> MANAGE_OBJECT_ADMIN permission on the source\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "A managed object was removed.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/inventory/managedObjects/:id?cascade=false&forceCascade=false&withDeviceUser=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "managedObjects",
                            ":id"
                          ],
                          "query": [
                            {
                              "key": "cascade",
                              "value": "false",
                              "description": "When set to `true` and the managed object is a device or group, all the hierarchy will be deleted."
                            },
                            {
                              "key": "forceCascade",
                              "value": "false",
                              "description": "When set to `true` all the hierarchy will be deleted without checking the type of managed object. It takes precedence over the parameter `cascade`."
                            },
                            {
                              "key": "withDeviceUser",
                              "value": "false",
                              "description": "When set to `true` and the managed object is a device, it deletes the associated device user (credentials)."
                            }
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/inventory/managedObjects/:id?cascade=false&forceCascade=false&withDeviceUser=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "managedObjects",
                            ":id"
                          ],
                          "query": [
                            {
                              "key": "cascade",
                              "value": "false",
                              "description": "When set to `true` and the managed object is a device or group, all the hierarchy will be deleted."
                            },
                            {
                              "key": "forceCascade",
                              "value": "false",
                              "description": "When set to `true` all the hierarchy will be deleted without checking the type of managed object. It takes precedence over the parameter `cascade`."
                            },
                            {
                              "key": "withDeviceUser",
                              "value": "false",
                              "description": "When set to `true` and the managed object is a device, it deletes the associated device user (credentials)."
                            }
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Managed object not found.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/inventory/managedObjects/:id?cascade=false&forceCascade=false&withDeviceUser=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "managedObjects",
                            ":id"
                          ],
                          "query": [
                            {
                              "key": "cascade",
                              "value": "false",
                              "description": "When set to `true` and the managed object is a device or group, all the hierarchy will be deleted."
                            },
                            {
                              "key": "forceCascade",
                              "value": "false",
                              "description": "When set to `true` all the hierarchy will be deleted without checking the type of managed object. It takes precedence over the parameter `cascade`."
                            },
                            {
                              "key": "withDeviceUser",
                              "value": "false",
                              "description": "When set to `true` and the managed object is a device, it deletes the associated device user (credentials)."
                            }
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Conflict – The managed object is associated to other objects, for example child devices.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/inventory/managedObjects/:id?cascade=false&forceCascade=false&withDeviceUser=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "inventory",
                            "managedObjects",
                            ":id"
                          ],
                          "query": [
                            {
                              "key": "cascade",
                              "value": "false",
                              "description": "When set to `true` and the managed object is a device or group, all the hierarchy will be deleted."
                            },
                            {
                              "key": "forceCascade",
                              "value": "false",
                              "description": "When set to `true` all the hierarchy will be deleted without checking the type of managed object. It takes precedence over the parameter `cascade`."
                            },
                            {
                              "key": "withDeviceUser",
                              "value": "false",
                              "description": "When set to `true` and the managed object is a device, it deletes the associated device user (credentials)."
                            }
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Conflict",
                      "code": 409,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Create a managed object",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Cumulocity-Processing-Mode",
                    "value": "PERSISTENT",
                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.com.nsn.cumulocity.managedobject+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.managedobject+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"c8y_IsDevice\": {},\n  \"c8y_IsDeviceGroup\": {},\n  \"c8y_DeviceTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"c8y_SupportedOperations\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"inec\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  }\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/inventory/managedObjects",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "inventory",
                    "managedObjects"
                  ]
                },
                "description": "Create a managed object, for example, a device with temperature measurements support or a binary switch.<br>\nIn general, each managed object may consist of:\n\n*  A unique identifier that references the object.\n*  The name of the object.\n*  The most specific type of the managed object.\n*  A time stamp showing the last update.\n*  Fragments with specific meanings, for example, `c8y_IsDevice`, `c8y_SupportedOperations`.\n*  Any additional custom fragments.\n\nImagine, for example, that you want to describe electric meters from different vendors. Depending on the make of the meter, one may have a relay and one may be capable to measure a single phase or three phases (for example, a three-phase electricity sensor). A fragment `c8y_ThreePhaseElectricitySensor` would identify such an electric meter. Devices' characteristics are identified by storing fragments for each of them.\n\n> **&#9432; Info:** For more details about fragments with specific meanings, refer to [Device management & connectivity > Device integration > Fragment library](https://www.cumulocity.com/docs/device-integration/fragment-library/) in the Cumulocity user documentation.\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_ADMIN <b>OR</b> ROLE_INVENTORY_CREATE <b>OR</b> ROLE_MANAGED_OBJECT_ADMIN <b>OR</b> ROLE_MANAGED_OBJECT_CREATE\n</section>\n"
              },
              "response": [
                {
                  "name": "A managed object was created.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.managedobject+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.managedobject+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"c8y_IsDevice\": {},\n  \"c8y_IsDeviceGroup\": {},\n  \"c8y_DeviceTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"c8y_SupportedOperations\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"inec\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/inventory/managedObjects",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "inventory",
                        "managedObjects"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.managedobject+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"creationTime\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"lastUpdated\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"type\": \"<string>\",\n  \"childAdditions\": {\n    \"count\": \"<integer>\",\n    \"references\": [\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"self\": \"<string>\"\n  },\n  \"childAssets\": {\n    \"count\": \"<integer>\",\n    \"references\": [\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"self\": \"<string>\"\n  },\n  \"childDevices\": {\n    \"count\": \"<integer>\",\n    \"references\": [\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"self\": \"<string>\"\n  },\n  \"additionParents\": {\n    \"references\": [\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"self\": \"<string>\"\n  },\n  \"assetParents\": {\n    \"references\": [\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"self\": \"<string>\"\n  },\n  \"deviceParents\": {\n    \"references\": [\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"managedObject\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"self\": \"<string>\"\n  },\n  \"c8y_IsDevice\": {},\n  \"c8y_LatestMeasurements\": {\n    \"officia_76\": {\n      \"id_9d_\": {\n        \"value\": \"<number>\",\n        \"unit\": \"<string>\",\n        \"time\": \"<dateTime>\"\n      },\n      \"esse_866\": {\n        \"value\": \"<number>\",\n        \"unit\": \"<string>\",\n        \"time\": \"<dateTime>\"\n      },\n      \"dolore4a\": {\n        \"value\": \"<number>\",\n        \"unit\": \"<string>\",\n        \"time\": \"<dateTime>\"\n      }\n    }\n  },\n  \"c8y_IsDeviceGroup\": {},\n  \"c8y_DeviceTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"c8y_SupportedOperations\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.managedobject+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"c8y_IsDevice\": {},\n  \"c8y_IsDeviceGroup\": {},\n  \"c8y_DeviceTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"c8y_SupportedOperations\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"inec\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/inventory/managedObjects",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "inventory",
                        "managedObjects"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Unprocessable Entity – invalid payload.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.managedobject+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"c8y_IsDevice\": {},\n  \"c8y_IsDeviceGroup\": {},\n  \"c8y_DeviceTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"c8y_SupportedOperations\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"inec\": {\n    \"description\": \"It is possible to add an arbitrary number of additional properties as a list of key-value pairs, for example, `\\\"property1\\\": {}`, `\\\"property2\\\": \\\"value\\\"`. These properties are known as custom fragments and can be of any type, for example, object or string. Each custom fragment is identified by a unique name.\\n\\nReview [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation as there are characters that can not be used when naming custom fragments.\\n\",\n    \"x-additionalPropertiesName\": \"customFragments\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/inventory/managedObjects",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "inventory",
                        "managedObjects"
                      ]
                    }
                  },
                  "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                  "code": 422,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Retrieve all managed objects",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.managedobjectcollection+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/inventory/managedObjects?childAdditionId=<string>&childAssetId=<string>&childDeviceId=<string>&currentPage=1&fragmentType=<string>&ids=<string>,<string>&onlyRoots=false&owner=<string>&pageSize=5&q=<string>&query=<string>&skipChildrenNames=false&text=<string>&type=<string>&withChildren=true&withChildrenCount=false&withGroups=false&withParents=false&withTotalElements=false&withTotalPages=false&withLatestValues=false",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "inventory",
                    "managedObjects"
                  ],
                  "query": [
                    {
                      "key": "childAdditionId",
                      "value": "<string>",
                      "description": "Search for a specific child addition and list all the groups to which it belongs."
                    },
                    {
                      "key": "childAssetId",
                      "value": "<string>",
                      "description": "Search for a specific child asset and list all the groups to which it belongs."
                    },
                    {
                      "key": "childDeviceId",
                      "value": "<string>",
                      "description": "Search for a specific child device and list all the groups to which it belongs."
                    },
                    {
                      "key": "currentPage",
                      "value": "1",
                      "description": "The current page of the paginated results."
                    },
                    {
                      "key": "fragmentType",
                      "value": "<string>",
                      "description": "A characteristic which identifies a managed object or event, for example, geolocation, electricity sensor, relay state."
                    },
                    {
                      "key": "ids",
                      "value": "<string>,<string>",
                      "description": "The managed object IDs to search for.\n>**&#9432; Info:** If you query for multiple IDs at once, comma-separate the values.\n"
                    },
                    {
                      "key": "onlyRoots",
                      "value": "false",
                      "description": "When set to `true` it returns managed objects which don't have any parent. If the current user doesn't have access to the parent, this is also root for the user."
                    },
                    {
                      "key": "owner",
                      "value": "<string>",
                      "description": "Username of the owner of the managed objects."
                    },
                    {
                      "key": "pageSize",
                      "value": "5",
                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                    },
                    {
                      "key": "q",
                      "value": "<string>",
                      "description": "Similar to the parameter `query`, but it assumes that this is a device query request and it adds automatically the search criteria `fragmentType=c8y_IsDevice`."
                    },
                    {
                      "key": "query",
                      "value": "<string>",
                      "description": "Use query language to perform operations and/or filter the results. Details about the properties and supported operations can be found in [Query language](#tag/Query-language)."
                    },
                    {
                      "key": "skipChildrenNames",
                      "value": "false",
                      "description": "When set to `true`, the returned references of child devices won't contain their names."
                    },
                    {
                      "key": "text",
                      "value": "<string>",
                      "description": "Search for managed objects where a property value is equal to the given one.\nThe following properties are examined: `id, type, name, owner, externalIds`.\n"
                    },
                    {
                      "key": "type",
                      "value": "<string>",
                      "description": "The type of managed object to search for."
                    },
                    {
                      "key": "withChildren",
                      "value": "true",
                      "description": "Determines if children with ID and name should be returned when fetching the managed object. Set it to `false` to improve query performance."
                    },
                    {
                      "key": "withChildrenCount",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain the total number of children in the respective objects (`childAdditions`, `childAssets` and `childDevices`)."
                    },
                    {
                      "key": "withGroups",
                      "value": "false",
                      "description": "When set to `true` it returns additional information about the groups to which the searched managed object belongs. This results in setting the `assetParents` property with additional information about the groups."
                    },
                    {
                      "key": "withParents",
                      "value": "false",
                      "description": "When set to `true`, the returned references of child parents will return the device's parents (if any). Otherwise, it will be an empty array."
                    },
                    {
                      "key": "withTotalElements",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                    },
                    {
                      "key": "withTotalPages",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                    },
                    {
                      "key": "withLatestValues",
                      "value": "false",
                      "description": "If set to true the platform returns managed objects with the fragment `c8y_LatestMeasurements, which contains the latest measurement values reported by the device to the platform.\n\n> **⚠️ Feature Preview:** The parameter is a part of the Latest Measurement feature which is still under public preview.\n"
                    }
                  ]
                },
                "description": "Retrieve all managed objects (for example, devices, assets, etc.) registered in your tenant, or a subset based on queries.\n"
              },
              "response": [
                {
                  "name": "The request has succeeded and the collection of objects is sent in the response.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.managedobjectcollection+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/inventory/managedObjects?childAdditionId=<string>&childAssetId=<string>&childDeviceId=<string>&currentPage=1&fragmentType=<string>&ids=<string>,<string>&onlyRoots=false&owner=<string>&pageSize=5&q=<string>&query=<string>&skipChildrenNames=false&text=<string>&type=<string>&withChildren=true&withChildrenCount=false&withGroups=false&withParents=false&withTotalElements=false&withTotalPages=false&withLatestValues=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "inventory",
                        "managedObjects"
                      ],
                      "query": [
                        {
                          "key": "childAdditionId",
                          "value": "<string>",
                          "description": "Search for a specific child addition and list all the groups to which it belongs."
                        },
                        {
                          "key": "childAssetId",
                          "value": "<string>",
                          "description": "Search for a specific child asset and list all the groups to which it belongs."
                        },
                        {
                          "key": "childDeviceId",
                          "value": "<string>",
                          "description": "Search for a specific child device and list all the groups to which it belongs."
                        },
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "fragmentType",
                          "value": "<string>",
                          "description": "A characteristic which identifies a managed object or event, for example, geolocation, electricity sensor, relay state."
                        },
                        {
                          "key": "ids",
                          "value": "<string>,<string>",
                          "description": "The managed object IDs to search for.\n>**&#9432; Info:** If you query for multiple IDs at once, comma-separate the values.\n"
                        },
                        {
                          "key": "onlyRoots",
                          "value": "false",
                          "description": "When set to `true` it returns managed objects which don't have any parent. If the current user doesn't have access to the parent, this is also root for the user."
                        },
                        {
                          "key": "owner",
                          "value": "<string>",
                          "description": "Username of the owner of the managed objects."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "q",
                          "value": "<string>",
                          "description": "Similar to the parameter `query`, but it assumes that this is a device query request and it adds automatically the search criteria `fragmentType=c8y_IsDevice`."
                        },
                        {
                          "key": "query",
                          "value": "<string>",
                          "description": "Use query language to perform operations and/or filter the results. Details about the properties and supported operations can be found in [Query language](#tag/Query-language)."
                        },
                        {
                          "key": "skipChildrenNames",
                          "value": "false",
                          "description": "When set to `true`, the returned references of child devices won't contain their names."
                        },
                        {
                          "key": "text",
                          "value": "<string>",
                          "description": "Search for managed objects where a property value is equal to the given one.\nThe following properties are examined: `id, type, name, owner, externalIds`.\n"
                        },
                        {
                          "key": "type",
                          "value": "<string>",
                          "description": "The type of managed object to search for."
                        },
                        {
                          "key": "withChildren",
                          "value": "true",
                          "description": "Determines if children with ID and name should be returned when fetching the managed object. Set it to `false` to improve query performance."
                        },
                        {
                          "key": "withChildrenCount",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain the total number of children in the respective objects (`childAdditions`, `childAssets` and `childDevices`)."
                        },
                        {
                          "key": "withGroups",
                          "value": "false",
                          "description": "When set to `true` it returns additional information about the groups to which the searched managed object belongs. This results in setting the `assetParents` property with additional information about the groups."
                        },
                        {
                          "key": "withParents",
                          "value": "false",
                          "description": "When set to `true`, the returned references of child parents will return the device's parents (if any). Otherwise, it will be an empty array."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withLatestValues",
                          "value": "false",
                          "description": "If set to true the platform returns managed objects with the fragment `c8y_LatestMeasurements, which contains the latest measurement values reported by the device to the platform.\n\n> **⚠️ Feature Preview:** The parameter is a part of the Latest Measurement feature which is still under public preview.\n"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.managedobjectcollection+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"managedObjects\": [\n    {\n      \"creationTime\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"lastUpdated\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"owner\": \"<string>\",\n      \"self\": \"<uri>\",\n      \"type\": \"<string>\",\n      \"childAdditions\": {\n        \"count\": \"<integer>\",\n        \"references\": [\n          {\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          },\n          {\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          }\n        ],\n        \"self\": \"<string>\"\n      },\n      \"childAssets\": {\n        \"count\": \"<integer>\",\n        \"references\": [\n          {\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          },\n          {\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          }\n        ],\n        \"self\": \"<string>\"\n      },\n      \"childDevices\": {\n        \"count\": \"<integer>\",\n        \"references\": [\n          {\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          },\n          {\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          }\n        ],\n        \"self\": \"<string>\"\n      },\n      \"additionParents\": {\n        \"references\": [\n          {\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          },\n          {\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          }\n        ],\n        \"self\": \"<string>\"\n      },\n      \"assetParents\": {\n        \"references\": [\n          {\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          },\n          {\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          }\n        ],\n        \"self\": \"<string>\"\n      },\n      \"deviceParents\": {\n        \"references\": [\n          {\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          },\n          {\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          }\n        ],\n        \"self\": \"<string>\"\n      },\n      \"c8y_IsDevice\": {},\n      \"c8y_LatestMeasurements\": {\n        \"consecteturba\": {\n          \"cillum7_f\": {\n            \"value\": \"<number>\",\n            \"unit\": \"<string>\",\n            \"time\": \"<dateTime>\"\n          },\n          \"ullamco_9\": {\n            \"value\": \"<number>\",\n            \"unit\": \"<string>\",\n            \"time\": \"<dateTime>\"\n          },\n          \"esse_1d\": {\n            \"value\": \"<number>\",\n            \"unit\": \"<string>\",\n            \"time\": \"<dateTime>\"\n          }\n        },\n        \"laborum_5\": {\n          \"laborum_6c\": {\n            \"value\": \"<number>\",\n            \"unit\": \"<string>\",\n            \"time\": \"<dateTime>\"\n          }\n        }\n      },\n      \"c8y_IsDeviceGroup\": {},\n      \"c8y_DeviceTypes\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"c8y_SupportedOperations\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"creationTime\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"lastUpdated\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"owner\": \"<string>\",\n      \"self\": \"<uri>\",\n      \"type\": \"<string>\",\n      \"childAdditions\": {\n        \"count\": \"<integer>\",\n        \"references\": [\n          {\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          },\n          {\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          }\n        ],\n        \"self\": \"<string>\"\n      },\n      \"childAssets\": {\n        \"count\": \"<integer>\",\n        \"references\": [\n          {\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          },\n          {\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          }\n        ],\n        \"self\": \"<string>\"\n      },\n      \"childDevices\": {\n        \"count\": \"<integer>\",\n        \"references\": [\n          {\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          },\n          {\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          }\n        ],\n        \"self\": \"<string>\"\n      },\n      \"additionParents\": {\n        \"references\": [\n          {\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          },\n          {\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          }\n        ],\n        \"self\": \"<string>\"\n      },\n      \"assetParents\": {\n        \"references\": [\n          {\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          },\n          {\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          }\n        ],\n        \"self\": \"<string>\"\n      },\n      \"deviceParents\": {\n        \"references\": [\n          {\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          },\n          {\n            \"managedObject\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          }\n        ],\n        \"self\": \"<string>\"\n      },\n      \"c8y_IsDevice\": {},\n      \"c8y_LatestMeasurements\": {\n        \"Duis_7\": {\n          \"nisi6\": {\n            \"value\": \"<number>\",\n            \"unit\": \"<string>\",\n            \"time\": \"<dateTime>\"\n          },\n          \"cillum__95\": {\n            \"value\": \"<number>\",\n            \"unit\": \"<string>\",\n            \"time\": \"<dateTime>\"\n          },\n          \"eu_1\": {\n            \"value\": \"<number>\",\n            \"unit\": \"<string>\",\n            \"time\": \"<dateTime>\"\n          }\n        },\n        \"mollit51\": {\n          \"magnac\": {\n            \"value\": \"<number>\",\n            \"unit\": \"<string>\",\n            \"time\": \"<dateTime>\"\n          }\n        },\n        \"ipsum_6\": {\n          \"do_d3\": {\n            \"value\": \"<number>\",\n            \"unit\": \"<string>\",\n            \"time\": \"<dateTime>\"\n          }\n        }\n      },\n      \"c8y_IsDeviceGroup\": {},\n      \"c8y_DeviceTypes\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"c8y_SupportedOperations\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  }\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/inventory/managedObjects?childAdditionId=<string>&childAssetId=<string>&childDeviceId=<string>&currentPage=1&fragmentType=<string>&ids=<string>,<string>&onlyRoots=false&owner=<string>&pageSize=5&q=<string>&query=<string>&skipChildrenNames=false&text=<string>&type=<string>&withChildren=true&withChildrenCount=false&withGroups=false&withParents=false&withTotalElements=false&withTotalPages=false&withLatestValues=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "inventory",
                        "managedObjects"
                      ],
                      "query": [
                        {
                          "key": "childAdditionId",
                          "value": "<string>",
                          "description": "Search for a specific child addition and list all the groups to which it belongs."
                        },
                        {
                          "key": "childAssetId",
                          "value": "<string>",
                          "description": "Search for a specific child asset and list all the groups to which it belongs."
                        },
                        {
                          "key": "childDeviceId",
                          "value": "<string>",
                          "description": "Search for a specific child device and list all the groups to which it belongs."
                        },
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "fragmentType",
                          "value": "<string>",
                          "description": "A characteristic which identifies a managed object or event, for example, geolocation, electricity sensor, relay state."
                        },
                        {
                          "key": "ids",
                          "value": "<string>,<string>",
                          "description": "The managed object IDs to search for.\n>**&#9432; Info:** If you query for multiple IDs at once, comma-separate the values.\n"
                        },
                        {
                          "key": "onlyRoots",
                          "value": "false",
                          "description": "When set to `true` it returns managed objects which don't have any parent. If the current user doesn't have access to the parent, this is also root for the user."
                        },
                        {
                          "key": "owner",
                          "value": "<string>",
                          "description": "Username of the owner of the managed objects."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "q",
                          "value": "<string>",
                          "description": "Similar to the parameter `query`, but it assumes that this is a device query request and it adds automatically the search criteria `fragmentType=c8y_IsDevice`."
                        },
                        {
                          "key": "query",
                          "value": "<string>",
                          "description": "Use query language to perform operations and/or filter the results. Details about the properties and supported operations can be found in [Query language](#tag/Query-language)."
                        },
                        {
                          "key": "skipChildrenNames",
                          "value": "false",
                          "description": "When set to `true`, the returned references of child devices won't contain their names."
                        },
                        {
                          "key": "text",
                          "value": "<string>",
                          "description": "Search for managed objects where a property value is equal to the given one.\nThe following properties are examined: `id, type, name, owner, externalIds`.\n"
                        },
                        {
                          "key": "type",
                          "value": "<string>",
                          "description": "The type of managed object to search for."
                        },
                        {
                          "key": "withChildren",
                          "value": "true",
                          "description": "Determines if children with ID and name should be returned when fetching the managed object. Set it to `false` to improve query performance."
                        },
                        {
                          "key": "withChildrenCount",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain the total number of children in the respective objects (`childAdditions`, `childAssets` and `childDevices`)."
                        },
                        {
                          "key": "withGroups",
                          "value": "false",
                          "description": "When set to `true` it returns additional information about the groups to which the searched managed object belongs. This results in setting the `assetParents` property with additional information about the groups."
                        },
                        {
                          "key": "withParents",
                          "value": "false",
                          "description": "When set to `true`, the returned references of child parents will return the device's parents (if any). Otherwise, it will be an empty array."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withLatestValues",
                          "value": "false",
                          "description": "If set to true the platform returns managed objects with the fragment `c8y_LatestMeasurements, which contains the latest measurement values reported by the device to the platform.\n\n> **⚠️ Feature Preview:** The parameter is a part of the Latest Measurement feature which is still under public preview.\n"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Invalid data was sent.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/inventory/managedObjects?childAdditionId=<string>&childAssetId=<string>&childDeviceId=<string>&currentPage=1&fragmentType=<string>&ids=<string>,<string>&onlyRoots=false&owner=<string>&pageSize=5&q=<string>&query=<string>&skipChildrenNames=false&text=<string>&type=<string>&withChildren=true&withChildrenCount=false&withGroups=false&withParents=false&withTotalElements=false&withTotalPages=false&withLatestValues=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "inventory",
                        "managedObjects"
                      ],
                      "query": [
                        {
                          "key": "childAdditionId",
                          "value": "<string>",
                          "description": "Search for a specific child addition and list all the groups to which it belongs."
                        },
                        {
                          "key": "childAssetId",
                          "value": "<string>",
                          "description": "Search for a specific child asset and list all the groups to which it belongs."
                        },
                        {
                          "key": "childDeviceId",
                          "value": "<string>",
                          "description": "Search for a specific child device and list all the groups to which it belongs."
                        },
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "fragmentType",
                          "value": "<string>",
                          "description": "A characteristic which identifies a managed object or event, for example, geolocation, electricity sensor, relay state."
                        },
                        {
                          "key": "ids",
                          "value": "<string>,<string>",
                          "description": "The managed object IDs to search for.\n>**&#9432; Info:** If you query for multiple IDs at once, comma-separate the values.\n"
                        },
                        {
                          "key": "onlyRoots",
                          "value": "false",
                          "description": "When set to `true` it returns managed objects which don't have any parent. If the current user doesn't have access to the parent, this is also root for the user."
                        },
                        {
                          "key": "owner",
                          "value": "<string>",
                          "description": "Username of the owner of the managed objects."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "q",
                          "value": "<string>",
                          "description": "Similar to the parameter `query`, but it assumes that this is a device query request and it adds automatically the search criteria `fragmentType=c8y_IsDevice`."
                        },
                        {
                          "key": "query",
                          "value": "<string>",
                          "description": "Use query language to perform operations and/or filter the results. Details about the properties and supported operations can be found in [Query language](#tag/Query-language)."
                        },
                        {
                          "key": "skipChildrenNames",
                          "value": "false",
                          "description": "When set to `true`, the returned references of child devices won't contain their names."
                        },
                        {
                          "key": "text",
                          "value": "<string>",
                          "description": "Search for managed objects where a property value is equal to the given one.\nThe following properties are examined: `id, type, name, owner, externalIds`.\n"
                        },
                        {
                          "key": "type",
                          "value": "<string>",
                          "description": "The type of managed object to search for."
                        },
                        {
                          "key": "withChildren",
                          "value": "true",
                          "description": "Determines if children with ID and name should be returned when fetching the managed object. Set it to `false` to improve query performance."
                        },
                        {
                          "key": "withChildrenCount",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain the total number of children in the respective objects (`childAdditions`, `childAssets` and `childDevices`)."
                        },
                        {
                          "key": "withGroups",
                          "value": "false",
                          "description": "When set to `true` it returns additional information about the groups to which the searched managed object belongs. This results in setting the `assetParents` property with additional information about the groups."
                        },
                        {
                          "key": "withParents",
                          "value": "false",
                          "description": "When set to `true`, the returned references of child parents will return the device's parents (if any). Otherwise, it will be an empty array."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withLatestValues",
                          "value": "false",
                          "description": "If set to true the platform returns managed objects with the fragment `c8y_LatestMeasurements, which contains the latest measurement values reported by the device to the platform.\n\n> **⚠️ Feature Preview:** The parameter is a part of the Latest Measurement feature which is still under public preview.\n"
                        }
                      ]
                    }
                  },
                  "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                  "code": 422,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Retrieve URIs to collections of managed objects",
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "username",
                  "value": "{{basicAuthUsername}}",
                  "type": "string"
                },
                {
                  "key": "password",
                  "value": "{{basicAuthPassword}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/vnd.com.nsn.cumulocity.inventoryapi+json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/inventory",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "inventory"
              ]
            },
            "description": "Retrieve URIs and URI templates to collections of managed objects.\n\n<section><h5>Required roles</h5>\nROLE_INVENTORY_READ <b>OR</b> ROLE_MANAGED_OBJECT_READ\n</section>\n"
          },
          "response": [
            {
              "name": "The request has succeeded and the URIs are sent in the response.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.inventoryapi+json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/inventory",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "inventory"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.com.nsn.cumulocity.inventoryapi+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"managedObjectsForFragmentType\": \"<string>\",\n  \"managedObjectsForType\": \"<string>\",\n  \"managedObjectsForListOfIds\": \"<string>\",\n  \"managedObjects\": {\n    \"references\": [\n      {\n        \"creationTime\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"lastUpdated\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"self\": \"<uri>\",\n        \"type\": \"<string>\",\n        \"childAdditions\": {\n          \"count\": \"<integer>\",\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"childAssets\": {\n          \"count\": \"<integer>\",\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"childDevices\": {\n          \"count\": \"<integer>\",\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"additionParents\": {\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"assetParents\": {\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"deviceParents\": {\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"c8y_IsDevice\": {},\n        \"c8y_LatestMeasurements\": {\n          \"reprehenderit_152\": {\n            \"laboris_31\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"sint_c\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            }\n          },\n          \"eiusmod3\": {\n            \"do676\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"eiusmod8e3\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            }\n          }\n        },\n        \"c8y_IsDeviceGroup\": {},\n        \"c8y_DeviceTypes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"c8y_SupportedOperations\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"creationTime\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"lastUpdated\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"self\": \"<uri>\",\n        \"type\": \"<string>\",\n        \"childAdditions\": {\n          \"count\": \"<integer>\",\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"childAssets\": {\n          \"count\": \"<integer>\",\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"childDevices\": {\n          \"count\": \"<integer>\",\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"additionParents\": {\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"assetParents\": {\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"deviceParents\": {\n          \"references\": [\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"managedObject\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"self\": \"<string>\"\n        },\n        \"c8y_IsDevice\": {},\n        \"c8y_LatestMeasurements\": {\n          \"laboris_3\": {\n            \"labore_92\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            }\n          },\n          \"ullamco_0b\": {\n            \"elit7d\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            }\n          },\n          \"cupidatat_76_\": {\n            \"nisif\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            }\n          },\n          \"pariatur_f27\": {\n            \"et_f90\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            }\n          },\n          \"inc\": {\n            \"est237\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            },\n            \"cupidatat_c4\": {\n              \"value\": \"<number>\",\n              \"unit\": \"<string>\",\n              \"time\": \"<dateTime>\"\n            }\n          }\n        },\n        \"c8y_IsDeviceGroup\": {},\n        \"c8y_DeviceTypes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"c8y_SupportedOperations\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"self\": \"<uri>\"\n  },\n  \"self\": \"<uri>\"\n}"
            },
            {
              "name": "Authentication information is missing or invalid.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/inventory",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "inventory"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
            },
            {
              "name": "Not authorized to perform this operation.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/inventory",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "inventory"
                  ]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "text",
              "header": [],
              "cookie": [],
              "body": ""
            }
          ]
        }
      ]
    },
    {
      "name": "identity",
      "item": [
        {
          "name": "globalIds",
          "item": [
            {
              "name": "{id}",
              "item": [
                {
                  "name": "externalIds",
                  "item": [
                    {
                      "name": "Create an external ID",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.externalid+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.externalid+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"externalId\": \"<string>\",\n  \"type\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/identity/globalIds/:id/externalIds",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "identity",
                            "globalIds",
                            ":id",
                            "externalIds"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the managed object."
                            }
                          ]
                        },
                        "description": "Create an external ID for an existing managed object (identified by ID).\n\n<section><h5>Required roles</h5>\nROLE_IDENTITY_ADMIN <b>OR</b> owner of the resource <b>OR</b> MANAGED_OBJECT_ADMIN permission on the resource\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "An external ID was created.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.externalid+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.externalid+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"externalId\": \"<string>\",\n  \"type\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/identity/globalIds/:id/externalIds",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "identity",
                                "globalIds",
                                ":id",
                                "externalIds"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.externalid+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"externalId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"managedObject\": {\n    \"id\": \"<string>\",\n    \"self\": \"<uri>\"\n  },\n  \"self\": \"<uri>\"\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.externalid+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"externalId\": \"<string>\",\n  \"type\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/identity/globalIds/:id/externalIds",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "identity",
                                "globalIds",
                                ":id",
                                "externalIds"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Global ID not found.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.externalid+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"externalId\": \"<string>\",\n  \"type\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/identity/globalIds/:id/externalIds",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "identity",
                                "globalIds",
                                ":id",
                                "externalIds"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Duplicate – Identity already bound to a different Global ID.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.externalid+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"externalId\": \"<string>\",\n  \"type\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/identity/globalIds/:id/externalIds",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "identity",
                                "globalIds",
                                ":id",
                                "externalIds"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Conflict",
                          "code": 409,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "Retrieve all external IDs of a specific managed object",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.externalidcollection+json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/identity/globalIds/:id/externalIds",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "identity",
                            "globalIds",
                            ":id",
                            "externalIds"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the managed object."
                            }
                          ]
                        },
                        "description": "Retrieve all external IDs of a existing managed object (identified by ID).\n\n<section><h5>Required roles</h5>\nROLE_IDENTITY_READ <b>OR</b> owner of the resource <b>OR</b> MANAGED_OBJECT_READ permission on the resource\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The request has succeeded and all the external IDs are sent in the response.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.externalidcollection+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/identity/globalIds/:id/externalIds",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "identity",
                                "globalIds",
                                ":id",
                                "externalIds"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.externalidcollection+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"externalIds\": [\n    {\n      \"externalId\": \"<string>\",\n      \"type\": \"<string>\",\n      \"managedObject\": {\n        \"id\": \"<string>\",\n        \"self\": \"<uri>\"\n      },\n      \"self\": \"<uri>\"\n    },\n    {\n      \"externalId\": \"<string>\",\n      \"type\": \"<string>\",\n      \"managedObject\": {\n        \"id\": \"<string>\",\n        \"self\": \"<uri>\"\n      },\n      \"self\": \"<uri>\"\n    }\n  ],\n  \"self\": \"<uri>\"\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/identity/globalIds/:id/externalIds",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "identity",
                                "globalIds",
                                ":id",
                                "externalIds"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "externalIds",
          "item": [
            {
              "name": "{type}",
              "item": [
                {
                  "name": "{externalId}",
                  "item": [
                    {
                      "name": "Retrieve a specific external ID",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.externalid+json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/identity/externalIds/:type/:externalId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "identity",
                            "externalIds",
                            ":type",
                            ":externalId"
                          ],
                          "variable": [
                            {
                              "key": "type",
                              "value": "<string>",
                              "description": "(Required) The identifier used in the external system that Cumulocity interfaces with."
                            },
                            {
                              "key": "externalId",
                              "value": "<string>",
                              "description": "(Required) The type of the external identifier."
                            }
                          ]
                        },
                        "description": "Retrieve a specific external ID of a particular type.\n\n<section><h5>Required roles</h5>\nROLE_IDENTITY_READ <b>OR</b> owner of the resource <b>OR</b> MANAGED_OBJECT_READ permission on the resource\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The request has succeeded and the external ID is sent in the response.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.externalid+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/identity/externalIds/:type/:externalId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "identity",
                                "externalIds",
                                ":type",
                                ":externalId"
                              ],
                              "variable": [
                                {
                                  "key": "type"
                                },
                                {
                                  "key": "externalId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.externalid+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"externalId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"managedObject\": {\n    \"id\": \"<string>\",\n    \"self\": \"<uri>\"\n  },\n  \"self\": \"<uri>\"\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/identity/externalIds/:type/:externalId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "identity",
                                "externalIds",
                                ":type",
                                ":externalId"
                              ],
                              "variable": [
                                {
                                  "key": "type"
                                },
                                {
                                  "key": "externalId"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "External ID not found.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/identity/externalIds/:type/:externalId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "identity",
                                "externalIds",
                                ":type",
                                ":externalId"
                              ],
                              "variable": [
                                {
                                  "key": "type"
                                },
                                {
                                  "key": "externalId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    },
                    {
                      "name": "Remove a specific external ID",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/identity/externalIds/:type/:externalId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "identity",
                            "externalIds",
                            ":type",
                            ":externalId"
                          ],
                          "variable": [
                            {
                              "key": "type",
                              "value": "<string>",
                              "description": "(Required) The identifier used in the external system that Cumulocity interfaces with."
                            },
                            {
                              "key": "externalId",
                              "value": "<string>",
                              "description": "(Required) The type of the external identifier."
                            }
                          ]
                        },
                        "description": "Remove a specific external ID of a particular type.\n\n<section><h5>Required roles</h5>\nROLE_IDENTITY_ADMIN <b>OR</b> owner of the resource <b>OR</b> MANAGED_OBJECT_ADMIN permission on the resource\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "An external ID was deleted.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/identity/externalIds/:type/:externalId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "identity",
                                "externalIds",
                                ":type",
                                ":externalId"
                              ],
                              "variable": [
                                {
                                  "key": "type"
                                },
                                {
                                  "key": "externalId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/identity/externalIds/:type/:externalId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "identity",
                                "externalIds",
                                ":type",
                                ":externalId"
                              ],
                              "variable": [
                                {
                                  "key": "type"
                                },
                                {
                                  "key": "externalId"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "External ID not found.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/identity/externalIds/:type/:externalId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "identity",
                                "externalIds",
                                ":type",
                                ":externalId"
                              ],
                              "variable": [
                                {
                                  "key": "type"
                                },
                                {
                                  "key": "externalId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "Retrieve URIs to collections of external IDs",
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "username",
                  "value": "{{basicAuthUsername}}",
                  "type": "string"
                },
                {
                  "key": "password",
                  "value": "{{basicAuthPassword}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/vnd.com.nsn.cumulocity.identityapi+json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/identity",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "identity"
              ]
            },
            "description": "Retrieve URIs and URI templates for associating external identifiers with unique identifiers.\n\n<section><h5>Required roles</h5>\nROLE_IDENTITY_READ\n</section>\n"
          },
          "response": [
            {
              "name": "The request has succeeded and the URIs are sent in the response.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.identityapi+json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/identity",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "identity"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.com.nsn.cumulocity.identityapi+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"externalId\": \"<uri>\",\n  \"externalIdsOfGlobalId\": \"<uri>\",\n  \"self\": \"<uri>\"\n}"
            },
            {
              "name": "Authentication information is missing or invalid.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/identity",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "identity"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "user",
      "item": [
        {
          "name": "currentUser",
          "item": [
            {
              "name": "password",
              "item": [
                {
                  "name": "Update the current user's password",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"currentUserPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/user/currentUser/password",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        "currentUser",
                        "password"
                      ]
                    },
                    "description": "Update the current user's  password.\n\n> **⚠️ Important:** If the tenant uses OAI-Secure authentication, the current user will not be logged out. Instead, a new cookie will be set with a new token, and the previous token will expire within a minute.\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_OWN_ADMIN\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The current user password was updated.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"currentUserPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/user/currentUser/password",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "currentUser",
                            "password"
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"currentUserPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/user/currentUser/password",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "currentUser",
                            "password"
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unprocessable Entity – invalid payload.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"currentUserPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/user/currentUser/password",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "currentUser",
                            "password"
                          ]
                        }
                      },
                      "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                      "code": 422,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            },
            {
              "name": "totpSecret",
              "item": [
                {
                  "name": "activity",
                  "item": [
                    {
                      "name": "Activates or deactivates the two-factor authentication feature",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"isActive\": \"<boolean>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/user/currentUser/totpSecret/activity",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "currentUser",
                            "totpSecret",
                            "activity"
                          ]
                        },
                        "description": "Activates or deactivates the two-factor authentication feature for the current user.\n\nFor more information about the feature, see [Platform administration > Authentication > Two-factor authentication](https://www.cumulocity.com/docs/authentication/tfa/) in the Cumulocity user documentation.\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_OWN_READ <b>OR</b> ROLE_SYSTEM\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The two-factor authentication was activated or deactivated.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"isActive\": \"<boolean>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/user/currentUser/totpSecret/activity",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                "currentUser",
                                "totpSecret",
                                "activity"
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"isActive\": \"<boolean>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/user/currentUser/totpSecret/activity",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                "currentUser",
                                "totpSecret",
                                "activity"
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Cannot deactivate TOTP setup.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"isActive\": \"<boolean>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/user/currentUser/totpSecret/activity",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                "currentUser",
                                "totpSecret",
                                "activity"
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "TFA TOTP secret does not exist. First generate secret.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"isActive\": \"<boolean>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/user/currentUser/totpSecret/activity",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                "currentUser",
                                "totpSecret",
                                "activity"
                              ]
                            }
                          },
                          "status": "Conflict",
                          "code": 409,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "Returns the activation state of the two-factor authentication feature.",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/currentUser/totpSecret/activity",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "currentUser",
                            "totpSecret",
                            "activity"
                          ]
                        },
                        "description": "Returns the activation state of the two-factor authentication feature for the current user.\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_OWN_READ <b>OR</b> ROLE_SYSTEM\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "Returns the activation state.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/currentUser/totpSecret/activity",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                "currentUser",
                                "totpSecret",
                                "activity"
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"isActive\": \"<boolean>\"\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/currentUser/totpSecret/activity",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                "currentUser",
                                "totpSecret",
                                "activity"
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "User not found.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/currentUser/totpSecret/activity",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                "currentUser",
                                "totpSecret",
                                "activity"
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "verify",
                  "item": [
                    {
                      "name": "Verify TFA code",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"code\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/user/currentUser/totpSecret/verify",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "currentUser",
                            "totpSecret",
                            "verify"
                          ]
                        },
                        "description": "Verifies the authentication code that the current user received from a TFA app/service and uploaded to the platform to gain access or enable the two-factor authentication feature.\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_OWN_READ <b>OR</b> ROLE_SYSTEM\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The sent code was correct and the access can be granted.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"code\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/user/currentUser/totpSecret/verify",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                "currentUser",
                                "totpSecret",
                                "verify"
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"code\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/user/currentUser/totpSecret/verify",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                "currentUser",
                                "totpSecret",
                                "verify"
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Invalid verification code.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"code\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/user/currentUser/totpSecret/verify",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                "currentUser",
                                "totpSecret",
                                "verify"
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Cannot validate TFA TOTP code - user's TFA TOTP secret does not exist.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"code\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/user/currentUser/totpSecret/verify",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                "currentUser",
                                "totpSecret",
                                "verify"
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Unprocessable Entity – invalid payload.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"code\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/user/currentUser/totpSecret/verify",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                "currentUser",
                                "totpSecret",
                                "verify"
                              ]
                            }
                          },
                          "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                          "code": 422,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Generate secret to set up TFA",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/user/currentUser/totpSecret",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        "currentUser",
                        "totpSecret"
                      ]
                    },
                    "description": "Generate a secret code to create a QR code to set up the two-factor authentication functionality using a TFA app/service.\n\nFor more information about the feature, see [Platform administration > Authentication > Two-factor authentication](https://www.cumulocity.com/docs/authentication/tfa/) in the Cumulocity user documentation.\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_OWN_READ <b>OR</b> ROLE_SYSTEM\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the secret is sent in the response.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/currentUser/totpSecret",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "currentUser",
                            "totpSecret"
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"rawSecret\": \"<string>\",\n  \"secretQrUrl\": \"<uri>\"\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/currentUser/totpSecret",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "currentUser",
                            "totpSecret"
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Retrieve the current user",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.currentuser+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/user/currentUser",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "user",
                    "currentUser"
                  ]
                },
                "description": "Retrieve the user reference of the current user.\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_OWN_READ <b>OR</b> ROLE_SYSTEM\n</section>\n\nUsers with ROLE_SYSTEM are not allowed to query with Accept header `application/vnd.com.nsn.cumulocity.user+json`\n"
              },
              "response": [
                {
                  "name": "The request has succeeded and the current user is sent in the response.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.currentuser+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/user/currentUser",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        "currentUser"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.currentuser+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"effectiveRoles\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"self\": \"<uri>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"self\": \"<uri>\"\n    }\n  ],\n  \"email\": \"<email>\",\n  \"firstName\": \"<string>\",\n  \"id\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"lastPasswordChange\": \"<dateTime>\",\n  \"phone\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"shouldResetPassword\": \"<boolean>\",\n  \"twoFactorAuthenticationEnabled\": false,\n  \"userName\": \"<string>\",\n  \"devicePermissions\": {\n    \"adipisicinga\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/user/currentUser",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        "currentUser"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Update the current user",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.com.nsn.cumulocity.currentuser+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.currentuser+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"password\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"devicePermissions\": {\n    \"veniam_2a\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"laboreb_7\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nisi_d\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/user/currentUser",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "user",
                    "currentUser"
                  ]
                },
                "description": "Update the current user.\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_OWN_ADMIN\n</section>\n"
              },
              "response": [
                {
                  "name": "The current user was updated.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.currentuser+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.currentuser+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"email\": \"<email>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"password\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"devicePermissions\": {\n    \"veniam_2a\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"laboreb_7\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nisi_d\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/user/currentUser",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        "currentUser"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.currentuser+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"effectiveRoles\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"self\": \"<uri>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"self\": \"<uri>\"\n    }\n  ],\n  \"email\": \"<email>\",\n  \"firstName\": \"<string>\",\n  \"id\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"lastPasswordChange\": \"<dateTime>\",\n  \"phone\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"shouldResetPassword\": \"<boolean>\",\n  \"twoFactorAuthenticationEnabled\": false,\n  \"userName\": \"<string>\",\n  \"devicePermissions\": {\n    \"adipisicinga\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.currentuser+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"email\": \"<email>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"password\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"devicePermissions\": {\n    \"veniam_2a\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"laboreb_7\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nisi_d\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/user/currentUser",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        "currentUser"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Unprocessable Entity – invalid payload.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.currentuser+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"email\": \"<email>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"password\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"devicePermissions\": {\n    \"veniam_2a\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"laboreb_7\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nisi_d\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/user/currentUser",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        "currentUser"
                      ]
                    }
                  },
                  "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                  "code": 422,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "devicePermissions",
          "item": [
            {
              "name": "{id}",
              "item": [
                {
                  "name": "Returns all device permissions assignments",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/user/devicePermissions/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        "devicePermissions",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the managed object."
                        }
                      ]
                    },
                    "description": "Returns all device permissions assignments if the current user has READ permission.\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_READ <b>OR</b> ROLE_USER_MANAGEMENT_CREATE\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the device permissions assignments are sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/devicePermissions/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "devicePermissions",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"users\": [\n    {\n      \"applications\": [\n        {\n          \"availability\": \"PRIVATE\",\n          \"contextPath\": \"<string>\",\n          \"description\": \"<string>\",\n          \"id\": \"<string>\",\n          \"key\": \"<string>\",\n          \"name\": \"<string>\",\n          \"owner\": {\n            \"self\": \"<uri>\",\n            \"tenant\": {\n              \"id\": \"<string>\"\n            }\n          },\n          \"self\": \"<uri>\",\n          \"type\": \"MICROSERVICE\",\n          \"manifest\": {\n            \"apiVersion\": \"<string>\",\n            \"billingMode\": \"RESOURCES\",\n            \"contextPath\": \"<string>\",\n            \"extensions\": [\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"isolation\": \"PER_TENANT\",\n            \"livenessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"provider\": {\n              \"name\": \"<string>\"\n            },\n            \"readinessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"requestResources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"resources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"scale\": \"NONE\",\n            \"settings\": [\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              },\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              }\n            ],\n            \"settingsCategory\": \"<string>\",\n            \"version\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"breadcrumbs\": \"<boolean>\",\n          \"contentSecurityPolicy\": \"<string>\",\n          \"dynamicOptionsUrl\": \"<string>\",\n          \"globalTitle\": \"<string>\",\n          \"legacy\": \"<boolean>\",\n          \"rightDrawer\": \"<boolean>\",\n          \"upgrade\": \"<boolean>\",\n          \"activeVersionId\": \"<string>\",\n          \"resourcesUrl\": \"<string>\"\n        },\n        {\n          \"availability\": \"PRIVATE\",\n          \"contextPath\": \"<string>\",\n          \"description\": \"<string>\",\n          \"id\": \"<string>\",\n          \"key\": \"<string>\",\n          \"name\": \"<string>\",\n          \"owner\": {\n            \"self\": \"<uri>\",\n            \"tenant\": {\n              \"id\": \"<string>\"\n            }\n          },\n          \"self\": \"<uri>\",\n          \"type\": \"MICROSERVICE\",\n          \"manifest\": {\n            \"apiVersion\": \"<string>\",\n            \"billingMode\": \"RESOURCES\",\n            \"contextPath\": \"<string>\",\n            \"extensions\": [\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"isolation\": \"MULTI_TENANT\",\n            \"livenessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"provider\": {\n              \"name\": \"<string>\"\n            },\n            \"readinessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"requestResources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"resources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"scale\": \"NONE\",\n            \"settings\": [\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              },\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              }\n            ],\n            \"settingsCategory\": \"<string>\",\n            \"version\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"breadcrumbs\": \"<boolean>\",\n          \"contentSecurityPolicy\": \"<string>\",\n          \"dynamicOptionsUrl\": \"<string>\",\n          \"globalTitle\": \"<string>\",\n          \"legacy\": \"<boolean>\",\n          \"rightDrawer\": \"<boolean>\",\n          \"upgrade\": \"<boolean>\",\n          \"activeVersionId\": \"<string>\",\n          \"resourcesUrl\": \"<string>\"\n        }\n      ],\n      \"customProperties\": {\n        \"language\": \"<string>\"\n      },\n      \"displayName\": \"<string>\",\n      \"email\": \"<email>\",\n      \"enabled\": true,\n      \"firstName\": \"<string>\",\n      \"groups\": {\n        \"self\": \"<uri>\",\n        \"references\": [\n          {\n            \"group\": {\n              \"name\": \"<string>\",\n              \"applications\": [\n                {\n                  \"availability\": \"PRIVATE\",\n                  \"contextPath\": \"<string>\",\n                  \"description\": \"<string>\",\n                  \"id\": \"<string>\",\n                  \"key\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"owner\": {\n                    \"self\": \"<uri>\",\n                    \"tenant\": {\n                      \"id\": \"<string>\"\n                    }\n                  },\n                  \"self\": \"<uri>\",\n                  \"type\": \"MICROSERVICE\",\n                  \"manifest\": {\n                    \"apiVersion\": \"<string>\",\n                    \"billingMode\": \"RESOURCES\",\n                    \"contextPath\": \"<string>\",\n                    \"extensions\": [\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      },\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      }\n                    ],\n                    \"isolation\": \"PER_TENANT\",\n                    \"livenessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"provider\": {\n                      \"name\": \"<string>\"\n                    },\n                    \"readinessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"requestResources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"resources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"roles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"requiredRoles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"scale\": \"NONE\",\n                    \"settings\": [\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      },\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      }\n                    ],\n                    \"settingsCategory\": \"<string>\",\n                    \"version\": \"<string>\"\n                  },\n                  \"roles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"requiredRoles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"breadcrumbs\": \"<boolean>\",\n                  \"contentSecurityPolicy\": \"<string>\",\n                  \"dynamicOptionsUrl\": \"<string>\",\n                  \"globalTitle\": \"<string>\",\n                  \"legacy\": \"<boolean>\",\n                  \"rightDrawer\": \"<boolean>\",\n                  \"upgrade\": \"<boolean>\",\n                  \"activeVersionId\": \"<string>\",\n                  \"resourcesUrl\": \"<string>\"\n                },\n                {\n                  \"availability\": \"PRIVATE\",\n                  \"contextPath\": \"<string>\",\n                  \"description\": \"<string>\",\n                  \"id\": \"<string>\",\n                  \"key\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"owner\": {\n                    \"self\": \"<uri>\",\n                    \"tenant\": {\n                      \"id\": \"<string>\"\n                    }\n                  },\n                  \"self\": \"<uri>\",\n                  \"type\": \"HOSTED\",\n                  \"manifest\": {\n                    \"apiVersion\": \"<string>\",\n                    \"billingMode\": \"RESOURCES\",\n                    \"contextPath\": \"<string>\",\n                    \"extensions\": [\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      },\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      }\n                    ],\n                    \"isolation\": \"PER_TENANT\",\n                    \"livenessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"provider\": {\n                      \"name\": \"<string>\"\n                    },\n                    \"readinessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"requestResources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"resources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"roles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"requiredRoles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"scale\": \"NONE\",\n                    \"settings\": [\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      },\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      }\n                    ],\n                    \"settingsCategory\": \"<string>\",\n                    \"version\": \"<string>\"\n                  },\n                  \"roles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"requiredRoles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"breadcrumbs\": \"<boolean>\",\n                  \"contentSecurityPolicy\": \"<string>\",\n                  \"dynamicOptionsUrl\": \"<string>\",\n                  \"globalTitle\": \"<string>\",\n                  \"legacy\": \"<boolean>\",\n                  \"rightDrawer\": \"<boolean>\",\n                  \"upgrade\": \"<boolean>\",\n                  \"activeVersionId\": \"<string>\",\n                  \"resourcesUrl\": \"<string>\"\n                }\n              ],\n              \"customProperties\": {\n                \"language\": \"<string>\",\n                \"nostrud_63\": {\n                  \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n                  \"x-additionalPropertiesName\": \"customProperties\"\n                },\n                \"mollit_0_\": {\n                  \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n                  \"x-additionalPropertiesName\": \"customProperties\"\n                }\n              },\n              \"description\": \"<string>\",\n              \"devicePermissions\": {\n                \"nullae8\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"ea_8c\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              },\n              \"id\": \"<integer>\",\n              \"roles\": {\n                \"self\": \"<uri>\",\n                \"references\": [\n                  {\n                    \"role\": {\n                      \"id\": \"<string>\",\n                      \"name\": \"<string>\",\n                      \"self\": \"<uri>\"\n                    },\n                    \"self\": \"<uri>\"\n                  },\n                  {\n                    \"role\": {\n                      \"id\": \"<string>\",\n                      \"name\": \"<string>\",\n                      \"self\": \"<uri>\"\n                    },\n                    \"self\": \"<uri>\"\n                  }\n                ],\n                \"statistics\": {\n                  \"currentPage\": \"<integer>\",\n                  \"pageSize\": \"<integer>\",\n                  \"totalElements\": \"<integer>\",\n                  \"totalPages\": \"<integer>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"users\": {\n                \"self\": \"<uri>\",\n                \"references\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                  }\n                ]\n              }\n            },\n            \"self\": \"<uri>\"\n          },\n          {\n            \"group\": {\n              \"name\": \"<string>\",\n              \"applications\": [\n                {\n                  \"availability\": \"PRIVATE\",\n                  \"contextPath\": \"<string>\",\n                  \"description\": \"<string>\",\n                  \"id\": \"<string>\",\n                  \"key\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"owner\": {\n                    \"self\": \"<uri>\",\n                    \"tenant\": {\n                      \"id\": \"<string>\"\n                    }\n                  },\n                  \"self\": \"<uri>\",\n                  \"type\": \"HOSTED\",\n                  \"manifest\": {\n                    \"apiVersion\": \"<string>\",\n                    \"billingMode\": \"RESOURCES\",\n                    \"contextPath\": \"<string>\",\n                    \"extensions\": [\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      },\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      }\n                    ],\n                    \"isolation\": \"MULTI_TENANT\",\n                    \"livenessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"provider\": {\n                      \"name\": \"<string>\"\n                    },\n                    \"readinessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"requestResources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"resources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"roles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"requiredRoles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"scale\": \"NONE\",\n                    \"settings\": [\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      },\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      }\n                    ],\n                    \"settingsCategory\": \"<string>\",\n                    \"version\": \"<string>\"\n                  },\n                  \"roles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"requiredRoles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"breadcrumbs\": \"<boolean>\",\n                  \"contentSecurityPolicy\": \"<string>\",\n                  \"dynamicOptionsUrl\": \"<string>\",\n                  \"globalTitle\": \"<string>\",\n                  \"legacy\": \"<boolean>\",\n                  \"rightDrawer\": \"<boolean>\",\n                  \"upgrade\": \"<boolean>\",\n                  \"activeVersionId\": \"<string>\",\n                  \"resourcesUrl\": \"<string>\"\n                },\n                {\n                  \"availability\": \"PRIVATE\",\n                  \"contextPath\": \"<string>\",\n                  \"description\": \"<string>\",\n                  \"id\": \"<string>\",\n                  \"key\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"owner\": {\n                    \"self\": \"<uri>\",\n                    \"tenant\": {\n                      \"id\": \"<string>\"\n                    }\n                  },\n                  \"self\": \"<uri>\",\n                  \"type\": \"EXTERNAL\",\n                  \"manifest\": {\n                    \"apiVersion\": \"<string>\",\n                    \"billingMode\": \"RESOURCES\",\n                    \"contextPath\": \"<string>\",\n                    \"extensions\": [\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      },\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      }\n                    ],\n                    \"isolation\": \"PER_TENANT\",\n                    \"livenessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"provider\": {\n                      \"name\": \"<string>\"\n                    },\n                    \"readinessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"requestResources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"resources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"roles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"requiredRoles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"scale\": \"NONE\",\n                    \"settings\": [\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      },\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      }\n                    ],\n                    \"settingsCategory\": \"<string>\",\n                    \"version\": \"<string>\"\n                  },\n                  \"roles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"requiredRoles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"breadcrumbs\": \"<boolean>\",\n                  \"contentSecurityPolicy\": \"<string>\",\n                  \"dynamicOptionsUrl\": \"<string>\",\n                  \"globalTitle\": \"<string>\",\n                  \"legacy\": \"<boolean>\",\n                  \"rightDrawer\": \"<boolean>\",\n                  \"upgrade\": \"<boolean>\",\n                  \"activeVersionId\": \"<string>\",\n                  \"resourcesUrl\": \"<string>\"\n                }\n              ],\n              \"customProperties\": {\n                \"language\": \"<string>\",\n                \"velitf0\": {\n                  \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n                  \"x-additionalPropertiesName\": \"customProperties\"\n                }\n              },\n              \"description\": \"<string>\",\n              \"devicePermissions\": {\n                \"ut_fc\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              },\n              \"id\": \"<integer>\",\n              \"roles\": {\n                \"self\": \"<uri>\",\n                \"references\": [\n                  {\n                    \"role\": {\n                      \"id\": \"<string>\",\n                      \"name\": \"<string>\",\n                      \"self\": \"<uri>\"\n                    },\n                    \"self\": \"<uri>\"\n                  },\n                  {\n                    \"role\": {\n                      \"id\": \"<string>\",\n                      \"name\": \"<string>\",\n                      \"self\": \"<uri>\"\n                    },\n                    \"self\": \"<uri>\"\n                  }\n                ],\n                \"statistics\": {\n                  \"currentPage\": \"<integer>\",\n                  \"pageSize\": \"<integer>\",\n                  \"totalElements\": \"<integer>\",\n                  \"totalPages\": \"<integer>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"users\": {\n                \"self\": \"<uri>\",\n                \"references\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                  }\n                ]\n              }\n            },\n            \"self\": \"<uri>\"\n          }\n        ],\n        \"statistics\": {\n          \"currentPage\": \"<integer>\",\n          \"pageSize\": \"<integer>\",\n          \"totalElements\": \"<integer>\",\n          \"totalPages\": \"<integer>\"\n        }\n      },\n      \"id\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"lastPasswordChange\": \"<dateTime>\",\n      \"newsletter\": \"<boolean>\",\n      \"owner\": \"<string>\",\n      \"passwordStrength\": \"GREEN\",\n      \"phone\": \"<string>\",\n      \"roles\": {\n        \"self\": \"<uri>\",\n        \"references\": [\n          {\n            \"role\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          },\n          {\n            \"role\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          }\n        ],\n        \"statistics\": {\n          \"currentPage\": \"<integer>\",\n          \"pageSize\": \"<integer>\",\n          \"totalElements\": \"<integer>\",\n          \"totalPages\": \"<integer>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"shouldResetPassword\": \"<boolean>\",\n      \"twoFactorAuthenticationEnabled\": false,\n      \"userName\": \"<string>\",\n      \"devicePermissions\": {\n        \"cupidatat4\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"applications\": [\n        {\n          \"availability\": \"PRIVATE\",\n          \"contextPath\": \"<string>\",\n          \"description\": \"<string>\",\n          \"id\": \"<string>\",\n          \"key\": \"<string>\",\n          \"name\": \"<string>\",\n          \"owner\": {\n            \"self\": \"<uri>\",\n            \"tenant\": {\n              \"id\": \"<string>\"\n            }\n          },\n          \"self\": \"<uri>\",\n          \"type\": \"MICROSERVICE\",\n          \"manifest\": {\n            \"apiVersion\": \"<string>\",\n            \"billingMode\": \"RESOURCES\",\n            \"contextPath\": \"<string>\",\n            \"extensions\": [\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"isolation\": \"MULTI_TENANT\",\n            \"livenessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"provider\": {\n              \"name\": \"<string>\"\n            },\n            \"readinessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"requestResources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"resources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"scale\": \"NONE\",\n            \"settings\": [\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              },\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              }\n            ],\n            \"settingsCategory\": \"<string>\",\n            \"version\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"breadcrumbs\": \"<boolean>\",\n          \"contentSecurityPolicy\": \"<string>\",\n          \"dynamicOptionsUrl\": \"<string>\",\n          \"globalTitle\": \"<string>\",\n          \"legacy\": \"<boolean>\",\n          \"rightDrawer\": \"<boolean>\",\n          \"upgrade\": \"<boolean>\",\n          \"activeVersionId\": \"<string>\",\n          \"resourcesUrl\": \"<string>\"\n        },\n        {\n          \"availability\": \"PRIVATE\",\n          \"contextPath\": \"<string>\",\n          \"description\": \"<string>\",\n          \"id\": \"<string>\",\n          \"key\": \"<string>\",\n          \"name\": \"<string>\",\n          \"owner\": {\n            \"self\": \"<uri>\",\n            \"tenant\": {\n              \"id\": \"<string>\"\n            }\n          },\n          \"self\": \"<uri>\",\n          \"type\": \"EXTERNAL\",\n          \"manifest\": {\n            \"apiVersion\": \"<string>\",\n            \"billingMode\": \"RESOURCES\",\n            \"contextPath\": \"<string>\",\n            \"extensions\": [\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"isolation\": \"PER_TENANT\",\n            \"livenessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"provider\": {\n              \"name\": \"<string>\"\n            },\n            \"readinessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"requestResources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"resources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"scale\": \"NONE\",\n            \"settings\": [\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              },\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              }\n            ],\n            \"settingsCategory\": \"<string>\",\n            \"version\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"breadcrumbs\": \"<boolean>\",\n          \"contentSecurityPolicy\": \"<string>\",\n          \"dynamicOptionsUrl\": \"<string>\",\n          \"globalTitle\": \"<string>\",\n          \"legacy\": \"<boolean>\",\n          \"rightDrawer\": \"<boolean>\",\n          \"upgrade\": \"<boolean>\",\n          \"activeVersionId\": \"<string>\",\n          \"resourcesUrl\": \"<string>\"\n        }\n      ],\n      \"customProperties\": {\n        \"language\": \"<string>\",\n        \"proident__\": {\n          \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n          \"x-additionalPropertiesName\": \"customProperties\"\n        },\n        \"dolore_a\": {\n          \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n          \"x-additionalPropertiesName\": \"customProperties\"\n        },\n        \"ine\": {\n          \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n          \"x-additionalPropertiesName\": \"customProperties\"\n        },\n        \"exercitationcdd\": {\n          \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n          \"x-additionalPropertiesName\": \"customProperties\"\n        }\n      },\n      \"displayName\": \"<string>\",\n      \"email\": \"<email>\",\n      \"enabled\": true,\n      \"firstName\": \"<string>\",\n      \"groups\": {\n        \"self\": \"<uri>\",\n        \"references\": [\n          {\n            \"group\": {\n              \"name\": \"<string>\",\n              \"applications\": [\n                {\n                  \"availability\": \"PRIVATE\",\n                  \"contextPath\": \"<string>\",\n                  \"description\": \"<string>\",\n                  \"id\": \"<string>\",\n                  \"key\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"owner\": {\n                    \"self\": \"<uri>\",\n                    \"tenant\": {\n                      \"id\": \"<string>\"\n                    }\n                  },\n                  \"self\": \"<uri>\",\n                  \"type\": \"HOSTED\",\n                  \"manifest\": {\n                    \"apiVersion\": \"<string>\",\n                    \"billingMode\": \"RESOURCES\",\n                    \"contextPath\": \"<string>\",\n                    \"extensions\": [\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      },\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      }\n                    ],\n                    \"isolation\": \"MULTI_TENANT\",\n                    \"livenessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"provider\": {\n                      \"name\": \"<string>\"\n                    },\n                    \"readinessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"requestResources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"resources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"roles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"requiredRoles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"scale\": \"NONE\",\n                    \"settings\": [\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      },\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      }\n                    ],\n                    \"settingsCategory\": \"<string>\",\n                    \"version\": \"<string>\"\n                  },\n                  \"roles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"requiredRoles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"breadcrumbs\": \"<boolean>\",\n                  \"contentSecurityPolicy\": \"<string>\",\n                  \"dynamicOptionsUrl\": \"<string>\",\n                  \"globalTitle\": \"<string>\",\n                  \"legacy\": \"<boolean>\",\n                  \"rightDrawer\": \"<boolean>\",\n                  \"upgrade\": \"<boolean>\",\n                  \"activeVersionId\": \"<string>\",\n                  \"resourcesUrl\": \"<string>\"\n                },\n                {\n                  \"availability\": \"PRIVATE\",\n                  \"contextPath\": \"<string>\",\n                  \"description\": \"<string>\",\n                  \"id\": \"<string>\",\n                  \"key\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"owner\": {\n                    \"self\": \"<uri>\",\n                    \"tenant\": {\n                      \"id\": \"<string>\"\n                    }\n                  },\n                  \"self\": \"<uri>\",\n                  \"type\": \"MICROSERVICE\",\n                  \"manifest\": {\n                    \"apiVersion\": \"<string>\",\n                    \"billingMode\": \"RESOURCES\",\n                    \"contextPath\": \"<string>\",\n                    \"extensions\": [\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      },\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      }\n                    ],\n                    \"isolation\": \"MULTI_TENANT\",\n                    \"livenessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"provider\": {\n                      \"name\": \"<string>\"\n                    },\n                    \"readinessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"requestResources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"resources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"roles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"requiredRoles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"scale\": \"NONE\",\n                    \"settings\": [\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      },\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      }\n                    ],\n                    \"settingsCategory\": \"<string>\",\n                    \"version\": \"<string>\"\n                  },\n                  \"roles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"requiredRoles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"breadcrumbs\": \"<boolean>\",\n                  \"contentSecurityPolicy\": \"<string>\",\n                  \"dynamicOptionsUrl\": \"<string>\",\n                  \"globalTitle\": \"<string>\",\n                  \"legacy\": \"<boolean>\",\n                  \"rightDrawer\": \"<boolean>\",\n                  \"upgrade\": \"<boolean>\",\n                  \"activeVersionId\": \"<string>\",\n                  \"resourcesUrl\": \"<string>\"\n                }\n              ],\n              \"customProperties\": {\n                \"language\": \"<string>\"\n              },\n              \"description\": \"<string>\",\n              \"devicePermissions\": {\n                \"nulla353\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"dolor45\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              },\n              \"id\": \"<integer>\",\n              \"roles\": {\n                \"self\": \"<uri>\",\n                \"references\": [\n                  {\n                    \"role\": {\n                      \"id\": \"<string>\",\n                      \"name\": \"<string>\",\n                      \"self\": \"<uri>\"\n                    },\n                    \"self\": \"<uri>\"\n                  },\n                  {\n                    \"role\": {\n                      \"id\": \"<string>\",\n                      \"name\": \"<string>\",\n                      \"self\": \"<uri>\"\n                    },\n                    \"self\": \"<uri>\"\n                  }\n                ],\n                \"statistics\": {\n                  \"currentPage\": \"<integer>\",\n                  \"pageSize\": \"<integer>\",\n                  \"totalElements\": \"<integer>\",\n                  \"totalPages\": \"<integer>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"users\": {\n                \"self\": \"<uri>\",\n                \"references\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                  }\n                ]\n              }\n            },\n            \"self\": \"<uri>\"\n          },\n          {\n            \"group\": {\n              \"name\": \"<string>\",\n              \"applications\": [\n                {\n                  \"availability\": \"PRIVATE\",\n                  \"contextPath\": \"<string>\",\n                  \"description\": \"<string>\",\n                  \"id\": \"<string>\",\n                  \"key\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"owner\": {\n                    \"self\": \"<uri>\",\n                    \"tenant\": {\n                      \"id\": \"<string>\"\n                    }\n                  },\n                  \"self\": \"<uri>\",\n                  \"type\": \"MICROSERVICE\",\n                  \"manifest\": {\n                    \"apiVersion\": \"<string>\",\n                    \"billingMode\": \"RESOURCES\",\n                    \"contextPath\": \"<string>\",\n                    \"extensions\": [\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      },\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      }\n                    ],\n                    \"isolation\": \"MULTI_TENANT\",\n                    \"livenessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"provider\": {\n                      \"name\": \"<string>\"\n                    },\n                    \"readinessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"requestResources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"resources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"roles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"requiredRoles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"scale\": \"NONE\",\n                    \"settings\": [\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      },\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      }\n                    ],\n                    \"settingsCategory\": \"<string>\",\n                    \"version\": \"<string>\"\n                  },\n                  \"roles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"requiredRoles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"breadcrumbs\": \"<boolean>\",\n                  \"contentSecurityPolicy\": \"<string>\",\n                  \"dynamicOptionsUrl\": \"<string>\",\n                  \"globalTitle\": \"<string>\",\n                  \"legacy\": \"<boolean>\",\n                  \"rightDrawer\": \"<boolean>\",\n                  \"upgrade\": \"<boolean>\",\n                  \"activeVersionId\": \"<string>\",\n                  \"resourcesUrl\": \"<string>\"\n                },\n                {\n                  \"availability\": \"PRIVATE\",\n                  \"contextPath\": \"<string>\",\n                  \"description\": \"<string>\",\n                  \"id\": \"<string>\",\n                  \"key\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"owner\": {\n                    \"self\": \"<uri>\",\n                    \"tenant\": {\n                      \"id\": \"<string>\"\n                    }\n                  },\n                  \"self\": \"<uri>\",\n                  \"type\": \"MICROSERVICE\",\n                  \"manifest\": {\n                    \"apiVersion\": \"<string>\",\n                    \"billingMode\": \"RESOURCES\",\n                    \"contextPath\": \"<string>\",\n                    \"extensions\": [\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      },\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      }\n                    ],\n                    \"isolation\": \"MULTI_TENANT\",\n                    \"livenessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"provider\": {\n                      \"name\": \"<string>\"\n                    },\n                    \"readinessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"requestResources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"resources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"roles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"requiredRoles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"scale\": \"NONE\",\n                    \"settings\": [\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      },\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      }\n                    ],\n                    \"settingsCategory\": \"<string>\",\n                    \"version\": \"<string>\"\n                  },\n                  \"roles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"requiredRoles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"breadcrumbs\": \"<boolean>\",\n                  \"contentSecurityPolicy\": \"<string>\",\n                  \"dynamicOptionsUrl\": \"<string>\",\n                  \"globalTitle\": \"<string>\",\n                  \"legacy\": \"<boolean>\",\n                  \"rightDrawer\": \"<boolean>\",\n                  \"upgrade\": \"<boolean>\",\n                  \"activeVersionId\": \"<string>\",\n                  \"resourcesUrl\": \"<string>\"\n                }\n              ],\n              \"customProperties\": {\n                \"language\": \"<string>\"\n              },\n              \"description\": \"<string>\",\n              \"devicePermissions\": {\n                \"Duis69\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"cupidatat_400\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              },\n              \"id\": \"<integer>\",\n              \"roles\": {\n                \"self\": \"<uri>\",\n                \"references\": [\n                  {\n                    \"role\": {\n                      \"id\": \"<string>\",\n                      \"name\": \"<string>\",\n                      \"self\": \"<uri>\"\n                    },\n                    \"self\": \"<uri>\"\n                  },\n                  {\n                    \"role\": {\n                      \"id\": \"<string>\",\n                      \"name\": \"<string>\",\n                      \"self\": \"<uri>\"\n                    },\n                    \"self\": \"<uri>\"\n                  }\n                ],\n                \"statistics\": {\n                  \"currentPage\": \"<integer>\",\n                  \"pageSize\": \"<integer>\",\n                  \"totalElements\": \"<integer>\",\n                  \"totalPages\": \"<integer>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"users\": {\n                \"self\": \"<uri>\",\n                \"references\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                  }\n                ]\n              }\n            },\n            \"self\": \"<uri>\"\n          }\n        ],\n        \"statistics\": {\n          \"currentPage\": \"<integer>\",\n          \"pageSize\": \"<integer>\",\n          \"totalElements\": \"<integer>\",\n          \"totalPages\": \"<integer>\"\n        }\n      },\n      \"id\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"lastPasswordChange\": \"<dateTime>\",\n      \"newsletter\": \"<boolean>\",\n      \"owner\": \"<string>\",\n      \"passwordStrength\": \"GREEN\",\n      \"phone\": \"<string>\",\n      \"roles\": {\n        \"self\": \"<uri>\",\n        \"references\": [\n          {\n            \"role\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          },\n          {\n            \"role\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          }\n        ],\n        \"statistics\": {\n          \"currentPage\": \"<integer>\",\n          \"pageSize\": \"<integer>\",\n          \"totalElements\": \"<integer>\",\n          \"totalPages\": \"<integer>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"shouldResetPassword\": \"<boolean>\",\n      \"twoFactorAuthenticationEnabled\": false,\n      \"userName\": \"<string>\",\n      \"devicePermissions\": {\n        \"adipisicing_6\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"qui__\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"incididunt__\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ],\n  \"groups\": [\n    {\n      \"name\": \"<string>\",\n      \"applications\": [\n        {\n          \"availability\": \"PRIVATE\",\n          \"contextPath\": \"<string>\",\n          \"description\": \"<string>\",\n          \"id\": \"<string>\",\n          \"key\": \"<string>\",\n          \"name\": \"<string>\",\n          \"owner\": {\n            \"self\": \"<uri>\",\n            \"tenant\": {\n              \"id\": \"<string>\"\n            }\n          },\n          \"self\": \"<uri>\",\n          \"type\": \"HOSTED\",\n          \"manifest\": {\n            \"apiVersion\": \"<string>\",\n            \"billingMode\": \"RESOURCES\",\n            \"contextPath\": \"<string>\",\n            \"extensions\": [\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"isolation\": \"PER_TENANT\",\n            \"livenessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"provider\": {\n              \"name\": \"<string>\"\n            },\n            \"readinessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"requestResources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"resources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"scale\": \"NONE\",\n            \"settings\": [\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              },\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              }\n            ],\n            \"settingsCategory\": \"<string>\",\n            \"version\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"breadcrumbs\": \"<boolean>\",\n          \"contentSecurityPolicy\": \"<string>\",\n          \"dynamicOptionsUrl\": \"<string>\",\n          \"globalTitle\": \"<string>\",\n          \"legacy\": \"<boolean>\",\n          \"rightDrawer\": \"<boolean>\",\n          \"upgrade\": \"<boolean>\",\n          \"activeVersionId\": \"<string>\",\n          \"resourcesUrl\": \"<string>\"\n        },\n        {\n          \"availability\": \"PRIVATE\",\n          \"contextPath\": \"<string>\",\n          \"description\": \"<string>\",\n          \"id\": \"<string>\",\n          \"key\": \"<string>\",\n          \"name\": \"<string>\",\n          \"owner\": {\n            \"self\": \"<uri>\",\n            \"tenant\": {\n              \"id\": \"<string>\"\n            }\n          },\n          \"self\": \"<uri>\",\n          \"type\": \"MICROSERVICE\",\n          \"manifest\": {\n            \"apiVersion\": \"<string>\",\n            \"billingMode\": \"RESOURCES\",\n            \"contextPath\": \"<string>\",\n            \"extensions\": [\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"isolation\": \"MULTI_TENANT\",\n            \"livenessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"provider\": {\n              \"name\": \"<string>\"\n            },\n            \"readinessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"requestResources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"resources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"scale\": \"NONE\",\n            \"settings\": [\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              },\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              }\n            ],\n            \"settingsCategory\": \"<string>\",\n            \"version\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"breadcrumbs\": \"<boolean>\",\n          \"contentSecurityPolicy\": \"<string>\",\n          \"dynamicOptionsUrl\": \"<string>\",\n          \"globalTitle\": \"<string>\",\n          \"legacy\": \"<boolean>\",\n          \"rightDrawer\": \"<boolean>\",\n          \"upgrade\": \"<boolean>\",\n          \"activeVersionId\": \"<string>\",\n          \"resourcesUrl\": \"<string>\"\n        }\n      ],\n      \"customProperties\": {\n        \"language\": \"<string>\",\n        \"nisif\": {\n          \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n          \"x-additionalPropertiesName\": \"customProperties\"\n        }\n      },\n      \"description\": \"<string>\",\n      \"devicePermissions\": {\n        \"in_c\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"id\": \"<integer>\",\n      \"roles\": {\n        \"self\": \"<uri>\",\n        \"references\": [\n          {\n            \"role\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          },\n          {\n            \"role\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          }\n        ],\n        \"statistics\": {\n          \"currentPage\": \"<integer>\",\n          \"pageSize\": \"<integer>\",\n          \"totalElements\": \"<integer>\",\n          \"totalPages\": \"<integer>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"users\": {\n        \"self\": \"<uri>\",\n        \"references\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"applications\": [\n        {\n          \"availability\": \"PRIVATE\",\n          \"contextPath\": \"<string>\",\n          \"description\": \"<string>\",\n          \"id\": \"<string>\",\n          \"key\": \"<string>\",\n          \"name\": \"<string>\",\n          \"owner\": {\n            \"self\": \"<uri>\",\n            \"tenant\": {\n              \"id\": \"<string>\"\n            }\n          },\n          \"self\": \"<uri>\",\n          \"type\": \"EXTERNAL\",\n          \"manifest\": {\n            \"apiVersion\": \"<string>\",\n            \"billingMode\": \"RESOURCES\",\n            \"contextPath\": \"<string>\",\n            \"extensions\": [\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"isolation\": \"PER_TENANT\",\n            \"livenessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"provider\": {\n              \"name\": \"<string>\"\n            },\n            \"readinessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"requestResources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"resources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"scale\": \"NONE\",\n            \"settings\": [\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              },\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              }\n            ],\n            \"settingsCategory\": \"<string>\",\n            \"version\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"breadcrumbs\": \"<boolean>\",\n          \"contentSecurityPolicy\": \"<string>\",\n          \"dynamicOptionsUrl\": \"<string>\",\n          \"globalTitle\": \"<string>\",\n          \"legacy\": \"<boolean>\",\n          \"rightDrawer\": \"<boolean>\",\n          \"upgrade\": \"<boolean>\",\n          \"activeVersionId\": \"<string>\",\n          \"resourcesUrl\": \"<string>\"\n        },\n        {\n          \"availability\": \"PRIVATE\",\n          \"contextPath\": \"<string>\",\n          \"description\": \"<string>\",\n          \"id\": \"<string>\",\n          \"key\": \"<string>\",\n          \"name\": \"<string>\",\n          \"owner\": {\n            \"self\": \"<uri>\",\n            \"tenant\": {\n              \"id\": \"<string>\"\n            }\n          },\n          \"self\": \"<uri>\",\n          \"type\": \"HOSTED\",\n          \"manifest\": {\n            \"apiVersion\": \"<string>\",\n            \"billingMode\": \"RESOURCES\",\n            \"contextPath\": \"<string>\",\n            \"extensions\": [\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"isolation\": \"MULTI_TENANT\",\n            \"livenessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"provider\": {\n              \"name\": \"<string>\"\n            },\n            \"readinessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"requestResources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"resources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"scale\": \"NONE\",\n            \"settings\": [\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              },\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              }\n            ],\n            \"settingsCategory\": \"<string>\",\n            \"version\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"breadcrumbs\": \"<boolean>\",\n          \"contentSecurityPolicy\": \"<string>\",\n          \"dynamicOptionsUrl\": \"<string>\",\n          \"globalTitle\": \"<string>\",\n          \"legacy\": \"<boolean>\",\n          \"rightDrawer\": \"<boolean>\",\n          \"upgrade\": \"<boolean>\",\n          \"activeVersionId\": \"<string>\",\n          \"resourcesUrl\": \"<string>\"\n        }\n      ],\n      \"customProperties\": {\n        \"language\": \"<string>\",\n        \"cillum_52d\": {\n          \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n          \"x-additionalPropertiesName\": \"customProperties\"\n        }\n      },\n      \"description\": \"<string>\",\n      \"devicePermissions\": {\n        \"eab\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"et_962\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"adipisicing_5\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"id\": \"<integer>\",\n      \"roles\": {\n        \"self\": \"<uri>\",\n        \"references\": [\n          {\n            \"role\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          },\n          {\n            \"role\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          }\n        ],\n        \"statistics\": {\n          \"currentPage\": \"<integer>\",\n          \"pageSize\": \"<integer>\",\n          \"totalElements\": \"<integer>\",\n          \"totalPages\": \"<integer>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"users\": {\n        \"self\": \"<uri>\",\n        \"references\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n          }\n        ]\n      }\n    }\n  ]\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/devicePermissions/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "devicePermissions",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not authorized to perform this operation.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/devicePermissions/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "devicePermissions",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Updates the device permissions assignments",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"users\": [\n    {\n      \"userName\": \"<string>\",\n      \"devicePermissions\": {\n        \"aute_1a_\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"qui927\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"eu_96\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"sit_97\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"userName\": \"<string>\",\n      \"devicePermissions\": {\n        \"idf\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"nostrud_6cc\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ],\n  \"groups\": [\n    {\n      \"id\": \"<string>\",\n      \"devicePermissions\": {\n        \"et1f_\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"devicePermissions\": {\n        \"exercitation9e7\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/user/devicePermissions/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        "devicePermissions",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the managed object."
                        }
                      ]
                    },
                    "description": "Updates the device permissions assignments if the current user has ADMIN permission or CREATE permission and also has all device permissions.\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_ADMIN <b>OR</b> ROLE_USER_MANAGEMENT_CREATE\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The device permissions were successfully updated.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"users\": [\n    {\n      \"userName\": \"<string>\",\n      \"devicePermissions\": {\n        \"aute_1a_\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"qui927\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"eu_96\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"sit_97\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"userName\": \"<string>\",\n      \"devicePermissions\": {\n        \"idf\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"nostrud_6cc\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ],\n  \"groups\": [\n    {\n      \"id\": \"<string>\",\n      \"devicePermissions\": {\n        \"et1f_\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"devicePermissions\": {\n        \"exercitation9e7\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/user/devicePermissions/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "devicePermissions",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"users\": [\n    {\n      \"userName\": \"<string>\",\n      \"devicePermissions\": {\n        \"aute_1a_\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"qui927\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"eu_96\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"sit_97\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"userName\": \"<string>\",\n      \"devicePermissions\": {\n        \"idf\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"nostrud_6cc\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ],\n  \"groups\": [\n    {\n      \"id\": \"<string>\",\n      \"devicePermissions\": {\n        \"et1f_\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"devicePermissions\": {\n        \"exercitation9e7\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/user/devicePermissions/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "devicePermissions",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not authorized to perform this operation.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"users\": [\n    {\n      \"userName\": \"<string>\",\n      \"devicePermissions\": {\n        \"aute_1a_\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"qui927\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"eu_96\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"sit_97\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"userName\": \"<string>\",\n      \"devicePermissions\": {\n        \"idf\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"nostrud_6cc\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ],\n  \"groups\": [\n    {\n      \"id\": \"<string>\",\n      \"devicePermissions\": {\n        \"et1f_\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"devicePermissions\": {\n        \"exercitation9e7\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/user/devicePermissions/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "devicePermissions",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "inventoryroles",
          "item": [
            {
              "name": "{id}",
              "item": [
                {
                  "name": "Retrieve a specific inventory role",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.inventoryrole+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/user/inventoryroles/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        "inventoryroles",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<integer>",
                          "description": "(Required) Unique identifier of the inventory role."
                        }
                      ]
                    },
                    "description": "Retrieve a specific inventory role (by a given ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_READ <b>OR</b> ROLE_USER_MANAGEMENT_CREATE <b>AND</b> has access to the inventory role\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request succeeded and the inventory role is sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.inventoryrole+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/inventoryroles/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "inventoryroles",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.inventoryrole+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"description\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"permissions\": [\n    {\n      \"id\": \"<integer>\",\n      \"permission\": \"ADMIN\",\n      \"scope\": \"ALARM\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"permission\": \"*\",\n      \"scope\": \"MEASUREMENT\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"self\": \"<uri>\"\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/inventoryroles/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "inventoryroles",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Role not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/inventoryroles/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "inventoryroles",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Update a specific inventory role",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.inventoryrole+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.inventoryrole+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"permissions\": [\n    {\n      \"permission\": \"ADMIN\",\n      \"scope\": \"*\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"permission\": \"READ\",\n      \"scope\": \"MANAGED_OBJECT\",\n      \"type\": \"<string>\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/user/inventoryroles/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        "inventoryroles",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<integer>",
                          "description": "(Required) Unique identifier of the inventory role."
                        }
                      ]
                    },
                    "description": "Update a specific inventory role (by a given ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_ADMIN\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "An inventory role was updated.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.inventoryrole+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.inventoryrole+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"permissions\": [\n    {\n      \"permission\": \"ADMIN\",\n      \"scope\": \"*\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"permission\": \"READ\",\n      \"scope\": \"MANAGED_OBJECT\",\n      \"type\": \"<string>\"\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/user/inventoryroles/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "inventoryroles",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.inventoryrole+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"description\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"permissions\": [\n    {\n      \"id\": \"<integer>\",\n      \"permission\": \"ADMIN\",\n      \"scope\": \"ALARM\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"permission\": \"*\",\n      \"scope\": \"MEASUREMENT\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"self\": \"<uri>\"\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.inventoryrole+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"permissions\": [\n    {\n      \"permission\": \"ADMIN\",\n      \"scope\": \"*\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"permission\": \"READ\",\n      \"scope\": \"MANAGED_OBJECT\",\n      \"type\": \"<string>\"\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/user/inventoryroles/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "inventoryroles",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Role not found.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.inventoryrole+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"permissions\": [\n    {\n      \"permission\": \"ADMIN\",\n      \"scope\": \"*\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"permission\": \"READ\",\n      \"scope\": \"MANAGED_OBJECT\",\n      \"type\": \"<string>\"\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/user/inventoryroles/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "inventoryroles",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unprocessable Entity – invalid payload.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.inventoryrole+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"permissions\": [\n    {\n      \"permission\": \"ADMIN\",\n      \"scope\": \"*\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"permission\": \"READ\",\n      \"scope\": \"MANAGED_OBJECT\",\n      \"type\": \"<string>\"\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/user/inventoryroles/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "inventoryroles",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                      "code": 422,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Remove a specific inventory role",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/user/inventoryroles/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        "inventoryroles",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<integer>",
                          "description": "(Required) Unique identifier of the inventory role."
                        }
                      ]
                    },
                    "description": "Remove a specific inventory role (by a given ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_ADMIN\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "An inventory role was removed.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/inventoryroles/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "inventoryroles",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/inventoryroles/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "inventoryroles",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not authorized to perform this operation.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/inventoryroles/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "inventoryroles",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Role not found.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/inventoryroles/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "inventoryroles",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Create an inventory role",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.com.nsn.cumulocity.inventoryrole+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.inventoryrole+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"permissions\": [\n    {\n      \"permission\": \"ADMIN\",\n      \"scope\": \"*\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"permission\": \"*\",\n      \"scope\": \"ALARM\",\n      \"type\": \"<string>\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/user/inventoryroles",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "user",
                    "inventoryroles"
                  ]
                },
                "description": "Create an inventory role.\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_ADMIN\n</section>\n"
              },
              "response": [
                {
                  "name": "An inventory role was created.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.inventoryrole+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.inventoryrole+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"permissions\": [\n    {\n      \"permission\": \"ADMIN\",\n      \"scope\": \"*\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"permission\": \"*\",\n      \"scope\": \"ALARM\",\n      \"type\": \"<string>\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/user/inventoryroles",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        "inventoryroles"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.inventoryrole+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"description\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"permissions\": [\n    {\n      \"id\": \"<integer>\",\n      \"permission\": \"ADMIN\",\n      \"scope\": \"ALARM\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"permission\": \"*\",\n      \"scope\": \"MEASUREMENT\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"self\": \"<uri>\"\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.inventoryrole+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"permissions\": [\n    {\n      \"permission\": \"ADMIN\",\n      \"scope\": \"*\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"permission\": \"*\",\n      \"scope\": \"ALARM\",\n      \"type\": \"<string>\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/user/inventoryroles",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        "inventoryroles"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Duplicate – The inventory role already exists.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.inventoryrole+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"permissions\": [\n    {\n      \"permission\": \"ADMIN\",\n      \"scope\": \"*\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"permission\": \"*\",\n      \"scope\": \"ALARM\",\n      \"type\": \"<string>\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/user/inventoryroles",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        "inventoryroles"
                      ]
                    }
                  },
                  "status": "Conflict",
                  "code": 409,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Unprocessable Entity – invalid payload.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.inventoryrole+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"permissions\": [\n    {\n      \"permission\": \"ADMIN\",\n      \"scope\": \"*\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"permission\": \"*\",\n      \"scope\": \"ALARM\",\n      \"type\": \"<string>\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/user/inventoryroles",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        "inventoryroles"
                      ]
                    }
                  },
                  "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                  "code": 422,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Retrieve all inventory roles",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.inventoryrolecollection+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/user/inventoryroles?currentPage=1&pageSize=5&withTotalElements=false",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "user",
                    "inventoryroles"
                  ],
                  "query": [
                    {
                      "key": "currentPage",
                      "value": "1",
                      "description": "The current page of the paginated results."
                    },
                    {
                      "key": "pageSize",
                      "value": "5",
                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                    },
                    {
                      "key": "withTotalElements",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                    }
                  ]
                },
                "description": "Retrieve all inventory roles.\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_READ <b>OR</b> ROLE_USER_MANAGEMENT_CREATE\n</section>\n"
              },
              "response": [
                {
                  "name": "The request succeeded and all inventory roles are sent in the response.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.inventoryrolecollection+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/user/inventoryroles?currentPage=1&pageSize=5&withTotalElements=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        "inventoryroles"
                      ],
                      "query": [
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.inventoryrolecollection+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"roles\": [\n    {\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"permissions\": [\n        {\n          \"id\": \"<integer>\",\n          \"permission\": \"READ\",\n          \"scope\": \"*\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"permission\": \"*\",\n          \"scope\": \"*\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"self\": \"<uri>\"\n    },\n    {\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"permissions\": [\n        {\n          \"id\": \"<integer>\",\n          \"permission\": \"*\",\n          \"scope\": \"OPERATION\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"permission\": \"ADMIN\",\n          \"scope\": \"EVENT\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"self\": \"<uri>\"\n    }\n  ],\n  \"self\": \"<uri>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  }\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/user/inventoryroles?currentPage=1&pageSize=5&withTotalElements=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        "inventoryroles"
                      ],
                      "query": [
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "roles",
          "item": [
            {
              "name": "{name}",
              "item": [
                {
                  "name": "Retrieve a user role by name",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.role+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/user/roles/:name",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        "roles",
                        ":name"
                      ],
                      "variable": [
                        {
                          "key": "name",
                          "value": "<string>",
                          "description": "(Required) The name of the user role."
                        }
                      ]
                    },
                    "description": "Retrieve a user role by name.\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_READ <b>OR</b> ROLE_USER_MANAGEMENT_CREATE <b>AND</b> current user has access to the role with this name\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the user role is sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.role+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/roles/:name",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "roles",
                            ":name"
                          ],
                          "variable": [
                            {
                              "key": "name"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.role+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"self\": \"<uri>\"\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/roles/:name",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "roles",
                            ":name"
                          ],
                          "variable": [
                            {
                              "key": "name"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Role not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/roles/:name",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "roles",
                            ":name"
                          ],
                          "variable": [
                            {
                              "key": "name"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Retrieve all user roles",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.rolecollection+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/user/roles?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "user",
                    "roles"
                  ],
                  "query": [
                    {
                      "key": "currentPage",
                      "value": "1",
                      "description": "The current page of the paginated results."
                    },
                    {
                      "key": "pageSize",
                      "value": "5",
                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                    },
                    {
                      "key": "withTotalElements",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                    },
                    {
                      "key": "withTotalPages",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                    }
                  ]
                },
                "description": "Retrieve all user roles.\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_READ <b>OR</b> ROLE_USER_MANAGEMENT_CREATE <b>AND</b> has access to the user role\n</section>\n"
              },
              "response": [
                {
                  "name": "The request has succeeded and all user roles are sent in the response.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.rolecollection+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/user/roles?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        "roles"
                      ],
                      "query": [
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.rolecollection+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"roles\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"self\": \"<uri>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"self\": \"<uri>\"\n    }\n  ],\n  \"self\": \"<uri>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  }\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/user/roles?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        "roles"
                      ],
                      "query": [
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "{tenantId}",
          "item": [
            {
              "name": "users",
              "item": [
                {
                  "name": "{userId}",
                  "item": [
                    {
                      "name": "tfa",
                      "item": [
                        {
                          "name": "Retrieve the TFA settings of a specific user",
                          "request": {
                            "auth": {
                              "type": "basic",
                              "basic": [
                                {
                                  "key": "username",
                                  "value": "{{basicAuthUsername}}",
                                  "type": "string"
                                },
                                {
                                  "key": "password",
                                  "value": "{{basicAuthPassword}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/users/:userId/tfa",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "users",
                                ":userId",
                                "tfa"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of a Cumulocity tenant."
                                },
                                {
                                  "key": "userId",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of the a user."
                                }
                              ]
                            },
                            "description": "Retrieve the two-factor authentication settings for the specified user.\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_READ <b>OR</b> (ROLE_USER_MANAGEMENT_CREATE <b>AND</b> is parent of the user) <b>OR</b> is the current user\n</section>\n"
                          },
                          "response": [
                            {
                              "name": "The request has succeeded and the TFA settings are sent in the response.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/users/:userId/tfa",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "users",
                                    ":userId",
                                    "tfa"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "userId"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"lastTfaRequestTime\": \"<dateTime>\",\n  \"strategy\": \"SMS\",\n  \"tfaEnabled\": \"<boolean>\",\n  \"tfaEnforced\": \"<boolean>\"\n}"
                            },
                            {
                              "name": "Authentication information is missing or invalid.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/users/:userId/tfa",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "users",
                                    ":userId",
                                    "tfa"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "userId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Not enough permissions/roles to perform this operation.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/users/:userId/tfa",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "users",
                                    ":userId",
                                    "tfa"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "userId"
                                    }
                                  ]
                                }
                              },
                              "status": "Forbidden",
                              "code": 403,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "User not found.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/users/:userId/tfa",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "users",
                                    ":userId",
                                    "tfa"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "userId"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "groups",
                      "item": [
                        {
                          "name": "Get all user groups for specific user in a specific tenant",
                          "request": {
                            "auth": {
                              "type": "basic",
                              "basic": [
                                {
                                  "key": "username",
                                  "value": "{{basicAuthUsername}}",
                                  "type": "string"
                                },
                                {
                                  "key": "password",
                                  "value": "{{basicAuthPassword}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.groupreferencecollection+json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/users/:userId/groups?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "users",
                                ":userId",
                                "groups"
                              ],
                              "query": [
                                {
                                  "key": "currentPage",
                                  "value": "1",
                                  "description": "The current page of the paginated results."
                                },
                                {
                                  "key": "pageSize",
                                  "value": "5",
                                  "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                },
                                {
                                  "key": "withTotalElements",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                },
                                {
                                  "key": "withTotalPages",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of a Cumulocity tenant."
                                },
                                {
                                  "key": "userId",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of the a user."
                                }
                              ]
                            },
                            "description": "Get all user groups for a specific user (by a given user ID) in a specific tenant (by a given tenant ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_READ <b>OR</b> ROLE_USER_MANAGEMENT_CREATE <b>AND</b> is parent of the user\n</section>\n"
                          },
                          "response": [
                            {
                              "name": "The request succeeded and all groups for the user are sent in the response.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.groupreferencecollection+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/users/:userId/groups?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "users",
                                    ":userId",
                                    "groups"
                                  ],
                                  "query": [
                                    {
                                      "key": "currentPage",
                                      "value": "1",
                                      "description": "The current page of the paginated results."
                                    },
                                    {
                                      "key": "pageSize",
                                      "value": "5",
                                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                    },
                                    {
                                      "key": "withTotalElements",
                                      "value": "false",
                                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                    },
                                    {
                                      "key": "withTotalPages",
                                      "value": "false",
                                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                    }
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "userId"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.groupreferencecollection+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"self\": \"<uri>\",\n  \"references\": [\n    {\n      \"group\": {\n        \"name\": \"<string>\",\n        \"applications\": [\n          {\n            \"availability\": \"PRIVATE\",\n            \"contextPath\": \"<string>\",\n            \"description\": \"<string>\",\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"owner\": {\n              \"self\": \"<uri>\",\n              \"tenant\": {\n                \"id\": \"<string>\"\n              }\n            },\n            \"self\": \"<uri>\",\n            \"type\": \"EXTERNAL\",\n            \"manifest\": {\n              \"apiVersion\": \"<string>\",\n              \"billingMode\": \"RESOURCES\",\n              \"contextPath\": \"<string>\",\n              \"extensions\": [\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"isolation\": \"MULTI_TENANT\",\n              \"livenessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"provider\": {\n                \"name\": \"<string>\"\n              },\n              \"readinessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"requestResources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"resources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"scale\": \"NONE\",\n              \"settings\": [\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                },\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                }\n              ],\n              \"settingsCategory\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"breadcrumbs\": \"<boolean>\",\n            \"contentSecurityPolicy\": \"<string>\",\n            \"dynamicOptionsUrl\": \"<string>\",\n            \"globalTitle\": \"<string>\",\n            \"legacy\": \"<boolean>\",\n            \"rightDrawer\": \"<boolean>\",\n            \"upgrade\": \"<boolean>\",\n            \"activeVersionId\": \"<string>\",\n            \"resourcesUrl\": \"<string>\"\n          },\n          {\n            \"availability\": \"PRIVATE\",\n            \"contextPath\": \"<string>\",\n            \"description\": \"<string>\",\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"owner\": {\n              \"self\": \"<uri>\",\n              \"tenant\": {\n                \"id\": \"<string>\"\n              }\n            },\n            \"self\": \"<uri>\",\n            \"type\": \"HOSTED\",\n            \"manifest\": {\n              \"apiVersion\": \"<string>\",\n              \"billingMode\": \"RESOURCES\",\n              \"contextPath\": \"<string>\",\n              \"extensions\": [\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"isolation\": \"MULTI_TENANT\",\n              \"livenessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"provider\": {\n                \"name\": \"<string>\"\n              },\n              \"readinessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"requestResources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"resources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"scale\": \"NONE\",\n              \"settings\": [\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                },\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                }\n              ],\n              \"settingsCategory\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"breadcrumbs\": \"<boolean>\",\n            \"contentSecurityPolicy\": \"<string>\",\n            \"dynamicOptionsUrl\": \"<string>\",\n            \"globalTitle\": \"<string>\",\n            \"legacy\": \"<boolean>\",\n            \"rightDrawer\": \"<boolean>\",\n            \"upgrade\": \"<boolean>\",\n            \"activeVersionId\": \"<string>\",\n            \"resourcesUrl\": \"<string>\"\n          }\n        ],\n        \"customProperties\": {\n          \"language\": \"<string>\"\n        },\n        \"description\": \"<string>\",\n        \"devicePermissions\": {\n          \"cillum_8b\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        \"id\": \"<integer>\",\n        \"roles\": {\n          \"self\": \"<uri>\",\n          \"references\": [\n            {\n              \"role\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"role\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"statistics\": {\n            \"currentPage\": \"<integer>\",\n            \"pageSize\": \"<integer>\",\n            \"totalElements\": \"<integer>\",\n            \"totalPages\": \"<integer>\"\n          }\n        },\n        \"self\": \"<uri>\",\n        \"users\": {\n          \"self\": \"<uri>\",\n          \"references\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n            }\n          ]\n        }\n      },\n      \"self\": \"<uri>\"\n    },\n    {\n      \"group\": {\n        \"name\": \"<string>\",\n        \"applications\": [\n          {\n            \"availability\": \"PRIVATE\",\n            \"contextPath\": \"<string>\",\n            \"description\": \"<string>\",\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"owner\": {\n              \"self\": \"<uri>\",\n              \"tenant\": {\n                \"id\": \"<string>\"\n              }\n            },\n            \"self\": \"<uri>\",\n            \"type\": \"EXTERNAL\",\n            \"manifest\": {\n              \"apiVersion\": \"<string>\",\n              \"billingMode\": \"RESOURCES\",\n              \"contextPath\": \"<string>\",\n              \"extensions\": [\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"isolation\": \"PER_TENANT\",\n              \"livenessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"provider\": {\n                \"name\": \"<string>\"\n              },\n              \"readinessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"requestResources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"resources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"scale\": \"NONE\",\n              \"settings\": [\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                },\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                }\n              ],\n              \"settingsCategory\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"breadcrumbs\": \"<boolean>\",\n            \"contentSecurityPolicy\": \"<string>\",\n            \"dynamicOptionsUrl\": \"<string>\",\n            \"globalTitle\": \"<string>\",\n            \"legacy\": \"<boolean>\",\n            \"rightDrawer\": \"<boolean>\",\n            \"upgrade\": \"<boolean>\",\n            \"activeVersionId\": \"<string>\",\n            \"resourcesUrl\": \"<string>\"\n          },\n          {\n            \"availability\": \"PRIVATE\",\n            \"contextPath\": \"<string>\",\n            \"description\": \"<string>\",\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"owner\": {\n              \"self\": \"<uri>\",\n              \"tenant\": {\n                \"id\": \"<string>\"\n              }\n            },\n            \"self\": \"<uri>\",\n            \"type\": \"EXTERNAL\",\n            \"manifest\": {\n              \"apiVersion\": \"<string>\",\n              \"billingMode\": \"RESOURCES\",\n              \"contextPath\": \"<string>\",\n              \"extensions\": [\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"isolation\": \"MULTI_TENANT\",\n              \"livenessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"provider\": {\n                \"name\": \"<string>\"\n              },\n              \"readinessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"requestResources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"resources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"scale\": \"NONE\",\n              \"settings\": [\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                },\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                }\n              ],\n              \"settingsCategory\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"breadcrumbs\": \"<boolean>\",\n            \"contentSecurityPolicy\": \"<string>\",\n            \"dynamicOptionsUrl\": \"<string>\",\n            \"globalTitle\": \"<string>\",\n            \"legacy\": \"<boolean>\",\n            \"rightDrawer\": \"<boolean>\",\n            \"upgrade\": \"<boolean>\",\n            \"activeVersionId\": \"<string>\",\n            \"resourcesUrl\": \"<string>\"\n          }\n        ],\n        \"customProperties\": {\n          \"language\": \"<string>\",\n          \"nulla__7\": {\n            \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n            \"x-additionalPropertiesName\": \"customProperties\"\n          }\n        },\n        \"description\": \"<string>\",\n        \"devicePermissions\": {\n          \"occaecat_d\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        \"id\": \"<integer>\",\n        \"roles\": {\n          \"self\": \"<uri>\",\n          \"references\": [\n            {\n              \"role\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"role\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"statistics\": {\n            \"currentPage\": \"<integer>\",\n            \"pageSize\": \"<integer>\",\n            \"totalElements\": \"<integer>\",\n            \"totalPages\": \"<integer>\"\n          }\n        },\n        \"self\": \"<uri>\",\n        \"users\": {\n          \"self\": \"<uri>\",\n          \"references\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n            }\n          ]\n        }\n      },\n      \"self\": \"<uri>\"\n    }\n  ],\n  \"prev\": \"<string>\",\n  \"next\": \"<string>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  }\n}"
                            },
                            {
                              "name": "Authentication information is missing or invalid.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/users/:userId/groups?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "users",
                                    ":userId",
                                    "groups"
                                  ],
                                  "query": [
                                    {
                                      "key": "currentPage",
                                      "value": "1",
                                      "description": "The current page of the paginated results."
                                    },
                                    {
                                      "key": "pageSize",
                                      "value": "5",
                                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                    },
                                    {
                                      "key": "withTotalElements",
                                      "value": "false",
                                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                    },
                                    {
                                      "key": "withTotalPages",
                                      "value": "false",
                                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                    }
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "userId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Not enough permissions/roles to perform this operation.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/users/:userId/groups?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "users",
                                    ":userId",
                                    "groups"
                                  ],
                                  "query": [
                                    {
                                      "key": "currentPage",
                                      "value": "1",
                                      "description": "The current page of the paginated results."
                                    },
                                    {
                                      "key": "pageSize",
                                      "value": "5",
                                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                    },
                                    {
                                      "key": "withTotalElements",
                                      "value": "false",
                                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                    },
                                    {
                                      "key": "withTotalPages",
                                      "value": "false",
                                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                    }
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "userId"
                                    }
                                  ]
                                }
                              },
                              "status": "Forbidden",
                              "code": 403,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "User not found.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/users/:userId/groups?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "users",
                                    ":userId",
                                    "groups"
                                  ],
                                  "query": [
                                    {
                                      "key": "currentPage",
                                      "value": "1",
                                      "description": "The current page of the paginated results."
                                    },
                                    {
                                      "key": "pageSize",
                                      "value": "5",
                                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                    },
                                    {
                                      "key": "withTotalElements",
                                      "value": "false",
                                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                    },
                                    {
                                      "key": "withTotalPages",
                                      "value": "false",
                                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                    }
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "userId"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "roles",
                      "item": [
                        {
                          "name": "{roleId}",
                          "item": [
                            {
                              "name": "Unassign a specific role from a specific user in a specific tenant",
                              "request": {
                                "auth": {
                                  "type": "basic",
                                  "basic": [
                                    {
                                      "key": "username",
                                      "value": "{{basicAuthUsername}}",
                                      "type": "string"
                                    },
                                    {
                                      "key": "password",
                                      "value": "{{basicAuthPassword}}",
                                      "type": "string"
                                    }
                                  ]
                                },
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/:roleId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "users",
                                    ":userId",
                                    "roles",
                                    ":roleId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId",
                                      "value": "<string>",
                                      "description": "(Required) Unique identifier of a Cumulocity tenant."
                                    },
                                    {
                                      "key": "userId",
                                      "value": "<string>",
                                      "description": "(Required) Unique identifier of the a user."
                                    },
                                    {
                                      "key": "roleId",
                                      "value": "<string>",
                                      "description": "(Required) Unique identifier of the user role."
                                    }
                                  ]
                                },
                                "description": "Unassign a specific role (by a given role ID) from a specific user (by a given user ID) in a specific tenant (by a given tenant ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_READ <b>OR</b> ROLE_USER_MANAGEMENT_CREATE <b>AND</b> is parent of the user <b>AND</b> has access to roles\n</section>\n"
                              },
                              "response": [
                                {
                                  "name": "A user role was unassigned from a user.",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/:roleId",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "user",
                                        ":tenantId",
                                        "users",
                                        ":userId",
                                        "roles",
                                        ":roleId"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "userId"
                                        },
                                        {
                                          "key": "roleId"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "No Content",
                                  "code": 204,
                                  "_postman_previewlanguage": "text",
                                  "header": [],
                                  "cookie": [],
                                  "body": ""
                                },
                                {
                                  "name": "Authentication information is missing or invalid.",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/:roleId",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "user",
                                        ":tenantId",
                                        "users",
                                        ":userId",
                                        "roles",
                                        ":roleId"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "userId"
                                        },
                                        {
                                          "key": "roleId"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                },
                                {
                                  "name": "Not authorized to perform this operation.",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/:roleId",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "user",
                                        ":tenantId",
                                        "users",
                                        ":userId",
                                        "roles",
                                        ":roleId"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "userId"
                                        },
                                        {
                                          "key": "roleId"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Forbidden",
                                  "code": 403,
                                  "_postman_previewlanguage": "text",
                                  "header": [],
                                  "cookie": [],
                                  "body": ""
                                },
                                {
                                  "name": "User not found.",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/:roleId",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "user",
                                        ":tenantId",
                                        "users",
                                        ":userId",
                                        "roles",
                                        ":roleId"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "userId"
                                        },
                                        {
                                          "key": "roleId"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Not Found",
                                  "code": 404,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "name": "inventory",
                          "item": [
                            {
                              "name": "{id}",
                              "item": [
                                {
                                  "name": "Retrieve a specific inventory role assigned to a user",
                                  "request": {
                                    "auth": {
                                      "type": "basic",
                                      "basic": [
                                        {
                                          "key": "username",
                                          "value": "{{basicAuthUsername}}",
                                          "type": "string"
                                        },
                                        {
                                          "key": "password",
                                          "value": "{{basicAuthPassword}}",
                                          "type": "string"
                                        }
                                      ]
                                    },
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/vnd.com.nsn.cumulocity.inventoryassignment+json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/inventory/:id",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "user",
                                        ":tenantId",
                                        "users",
                                        ":userId",
                                        "roles",
                                        "inventory",
                                        ":id"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId",
                                          "value": "<string>",
                                          "description": "(Required) Unique identifier of a Cumulocity tenant."
                                        },
                                        {
                                          "key": "userId",
                                          "value": "<string>",
                                          "description": "(Required) Unique identifier of the a user."
                                        },
                                        {
                                          "key": "id",
                                          "value": "<integer>",
                                          "description": "(Required) Unique identifier of the inventory assignment."
                                        }
                                      ]
                                    },
                                    "description": "Retrieve a specific inventory role (by a given ID) assigned to a specific user (by a given user ID) in a specific tenant (by a given tenant ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_READ <b>OR</b> ROLE_USER_MANAGEMENT_CREATE <b>AND</b> is the parent of the user\n</section>\n"
                                  },
                                  "response": [
                                    {
                                      "name": "The request has succeeded and the inventory role is sent in the response.",
                                      "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                          {
                                            "key": "Accept",
                                            "value": "application/vnd.com.nsn.cumulocity.inventoryassignment+json"
                                          },
                                          {
                                            "key": "Authorization",
                                            "value": "Basic <credentials>",
                                            "description": "Added as a part of security scheme: basic"
                                          }
                                        ],
                                        "url": {
                                          "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/inventory/:id",
                                          "host": [
                                            "{{baseUrl}}"
                                          ],
                                          "path": [
                                            "user",
                                            ":tenantId",
                                            "users",
                                            ":userId",
                                            "roles",
                                            "inventory",
                                            ":id"
                                          ],
                                          "variable": [
                                            {
                                              "key": "tenantId"
                                            },
                                            {
                                              "key": "userId"
                                            },
                                            {
                                              "key": "id"
                                            }
                                          ]
                                        }
                                      },
                                      "status": "OK",
                                      "code": 200,
                                      "_postman_previewlanguage": "json",
                                      "header": [
                                        {
                                          "key": "Content-Type",
                                          "value": "application/vnd.com.nsn.cumulocity.inventoryassignment+json"
                                        }
                                      ],
                                      "cookie": [],
                                      "body": "{\n  \"id\": \"<integer>\",\n  \"managedObject\": \"<string>\",\n  \"roles\": [\n    {\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"permissions\": [\n        {\n          \"id\": \"<integer>\",\n          \"permission\": \"ADMIN\",\n          \"scope\": \"ALARM\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"permission\": \"*\",\n          \"scope\": \"MANAGED_OBJECT\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"self\": \"<uri>\"\n    },\n    {\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"permissions\": [\n        {\n          \"id\": \"<integer>\",\n          \"permission\": \"ADMIN\",\n          \"scope\": \"*\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"permission\": \"ADMIN\",\n          \"scope\": \"MANAGED_OBJECT\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"self\": \"<uri>\"\n    }\n  ],\n  \"self\": \"<uri>\"\n}"
                                    },
                                    {
                                      "name": "Authentication information is missing or invalid.",
                                      "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                          {
                                            "key": "Accept",
                                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                                          },
                                          {
                                            "key": "Authorization",
                                            "value": "Basic <credentials>",
                                            "description": "Added as a part of security scheme: basic"
                                          }
                                        ],
                                        "url": {
                                          "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/inventory/:id",
                                          "host": [
                                            "{{baseUrl}}"
                                          ],
                                          "path": [
                                            "user",
                                            ":tenantId",
                                            "users",
                                            ":userId",
                                            "roles",
                                            "inventory",
                                            ":id"
                                          ],
                                          "variable": [
                                            {
                                              "key": "tenantId"
                                            },
                                            {
                                              "key": "userId"
                                            },
                                            {
                                              "key": "id"
                                            }
                                          ]
                                        }
                                      },
                                      "status": "Unauthorized",
                                      "code": 401,
                                      "_postman_previewlanguage": "json",
                                      "header": [
                                        {
                                          "key": "Content-Type",
                                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                                        }
                                      ],
                                      "cookie": [],
                                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                    },
                                    {
                                      "name": "Not enough permissions/roles to perform this operation.",
                                      "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                          {
                                            "key": "Accept",
                                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                                          },
                                          {
                                            "key": "Authorization",
                                            "value": "Basic <credentials>",
                                            "description": "Added as a part of security scheme: basic"
                                          }
                                        ],
                                        "url": {
                                          "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/inventory/:id",
                                          "host": [
                                            "{{baseUrl}}"
                                          ],
                                          "path": [
                                            "user",
                                            ":tenantId",
                                            "users",
                                            ":userId",
                                            "roles",
                                            "inventory",
                                            ":id"
                                          ],
                                          "variable": [
                                            {
                                              "key": "tenantId"
                                            },
                                            {
                                              "key": "userId"
                                            },
                                            {
                                              "key": "id"
                                            }
                                          ]
                                        }
                                      },
                                      "status": "Forbidden",
                                      "code": 403,
                                      "_postman_previewlanguage": "json",
                                      "header": [
                                        {
                                          "key": "Content-Type",
                                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                                        }
                                      ],
                                      "cookie": [],
                                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                    },
                                    {
                                      "name": "Role not found.",
                                      "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                          {
                                            "key": "Accept",
                                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                                          },
                                          {
                                            "key": "Authorization",
                                            "value": "Basic <credentials>",
                                            "description": "Added as a part of security scheme: basic"
                                          }
                                        ],
                                        "url": {
                                          "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/inventory/:id",
                                          "host": [
                                            "{{baseUrl}}"
                                          ],
                                          "path": [
                                            "user",
                                            ":tenantId",
                                            "users",
                                            ":userId",
                                            "roles",
                                            "inventory",
                                            ":id"
                                          ],
                                          "variable": [
                                            {
                                              "key": "tenantId"
                                            },
                                            {
                                              "key": "userId"
                                            },
                                            {
                                              "key": "id"
                                            }
                                          ]
                                        }
                                      },
                                      "status": "Not Found",
                                      "code": 404,
                                      "_postman_previewlanguage": "json",
                                      "header": [
                                        {
                                          "key": "Content-Type",
                                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                                        }
                                      ],
                                      "cookie": [],
                                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                    }
                                  ]
                                },
                                {
                                  "name": "Update a specific inventory role assigned to a user",
                                  "request": {
                                    "auth": {
                                      "type": "basic",
                                      "basic": [
                                        {
                                          "key": "username",
                                          "value": "{{basicAuthUsername}}",
                                          "type": "string"
                                        },
                                        {
                                          "key": "password",
                                          "value": "{{basicAuthPassword}}",
                                          "type": "string"
                                        }
                                      ]
                                    },
                                    "method": "PUT",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/vnd.com.nsn.cumulocity.inventoryassignment+json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/vnd.com.nsn.cumulocity.inventoryassignment+json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"roles\": [\n    {\n      \"id\": \"<integer>\"\n    },\n    {\n      \"id\": \"<integer>\"\n    }\n  ]\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/inventory/:id",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "user",
                                        ":tenantId",
                                        "users",
                                        ":userId",
                                        "roles",
                                        "inventory",
                                        ":id"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId",
                                          "value": "<string>",
                                          "description": "(Required) Unique identifier of a Cumulocity tenant."
                                        },
                                        {
                                          "key": "userId",
                                          "value": "<string>",
                                          "description": "(Required) Unique identifier of the a user."
                                        },
                                        {
                                          "key": "id",
                                          "value": "<integer>",
                                          "description": "(Required) Unique identifier of the inventory assignment."
                                        }
                                      ]
                                    },
                                    "description": "Update a specific inventory role (by a given ID) assigned to a specific user (by a given user ID) in a specific tenant (by a given tenant ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_ADMIN to update the assignment of any inventory roles to root users in a user hierarchy <b>OR</b> users that are not in any hierarchy<br/>\nROLE_USER_MANAGEMENT_ADMIN to update the assignment of inventory roles accessible by the assigned user parent, to non-root users in a user hierarchy<br/>\nROLE_USER_MANAGEMENT_CREATE to update the assignment of inventory roles accessible by the current user <b>AND</b> the parent of the assigned user to the descendants of the current user in the user hierarchy\n</section>\n"
                                  },
                                  "response": [
                                    {
                                      "name": "An inventory assignment was updated.",
                                      "originalRequest": {
                                        "method": "PUT",
                                        "header": [
                                          {
                                            "key": "Content-Type",
                                            "value": "application/vnd.com.nsn.cumulocity.inventoryassignment+json"
                                          },
                                          {
                                            "key": "Accept",
                                            "value": "application/vnd.com.nsn.cumulocity.inventoryassignment+json"
                                          },
                                          {
                                            "key": "Authorization",
                                            "value": "Basic <credentials>",
                                            "description": "Added as a part of security scheme: basic"
                                          }
                                        ],
                                        "body": {
                                          "mode": "raw",
                                          "raw": "{\n  \"roles\": [\n    {\n      \"id\": \"<integer>\"\n    },\n    {\n      \"id\": \"<integer>\"\n    }\n  ]\n}",
                                          "options": {
                                            "raw": {
                                              "headerFamily": "json",
                                              "language": "json"
                                            }
                                          }
                                        },
                                        "url": {
                                          "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/inventory/:id",
                                          "host": [
                                            "{{baseUrl}}"
                                          ],
                                          "path": [
                                            "user",
                                            ":tenantId",
                                            "users",
                                            ":userId",
                                            "roles",
                                            "inventory",
                                            ":id"
                                          ],
                                          "variable": [
                                            {
                                              "key": "tenantId"
                                            },
                                            {
                                              "key": "userId"
                                            },
                                            {
                                              "key": "id"
                                            }
                                          ]
                                        }
                                      },
                                      "status": "OK",
                                      "code": 200,
                                      "_postman_previewlanguage": "json",
                                      "header": [
                                        {
                                          "key": "Content-Type",
                                          "value": "application/vnd.com.nsn.cumulocity.inventoryassignment+json"
                                        }
                                      ],
                                      "cookie": [],
                                      "body": "{\n  \"id\": \"<integer>\",\n  \"managedObject\": \"<string>\",\n  \"roles\": [\n    {\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"permissions\": [\n        {\n          \"id\": \"<integer>\",\n          \"permission\": \"ADMIN\",\n          \"scope\": \"ALARM\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"permission\": \"*\",\n          \"scope\": \"MANAGED_OBJECT\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"self\": \"<uri>\"\n    },\n    {\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"permissions\": [\n        {\n          \"id\": \"<integer>\",\n          \"permission\": \"ADMIN\",\n          \"scope\": \"*\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"permission\": \"ADMIN\",\n          \"scope\": \"MANAGED_OBJECT\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"self\": \"<uri>\"\n    }\n  ],\n  \"self\": \"<uri>\"\n}"
                                    },
                                    {
                                      "name": "Authentication information is missing or invalid.",
                                      "originalRequest": {
                                        "method": "PUT",
                                        "header": [
                                          {
                                            "key": "Content-Type",
                                            "value": "application/vnd.com.nsn.cumulocity.inventoryassignment+json"
                                          },
                                          {
                                            "key": "Accept",
                                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                                          },
                                          {
                                            "key": "Authorization",
                                            "value": "Basic <credentials>",
                                            "description": "Added as a part of security scheme: basic"
                                          }
                                        ],
                                        "body": {
                                          "mode": "raw",
                                          "raw": "{\n  \"roles\": [\n    {\n      \"id\": \"<integer>\"\n    },\n    {\n      \"id\": \"<integer>\"\n    }\n  ]\n}",
                                          "options": {
                                            "raw": {
                                              "headerFamily": "json",
                                              "language": "json"
                                            }
                                          }
                                        },
                                        "url": {
                                          "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/inventory/:id",
                                          "host": [
                                            "{{baseUrl}}"
                                          ],
                                          "path": [
                                            "user",
                                            ":tenantId",
                                            "users",
                                            ":userId",
                                            "roles",
                                            "inventory",
                                            ":id"
                                          ],
                                          "variable": [
                                            {
                                              "key": "tenantId"
                                            },
                                            {
                                              "key": "userId"
                                            },
                                            {
                                              "key": "id"
                                            }
                                          ]
                                        }
                                      },
                                      "status": "Unauthorized",
                                      "code": 401,
                                      "_postman_previewlanguage": "json",
                                      "header": [
                                        {
                                          "key": "Content-Type",
                                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                                        }
                                      ],
                                      "cookie": [],
                                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                    },
                                    {
                                      "name": "Not enough permissions/roles to perform this operation.",
                                      "originalRequest": {
                                        "method": "PUT",
                                        "header": [
                                          {
                                            "key": "Content-Type",
                                            "value": "application/vnd.com.nsn.cumulocity.inventoryassignment+json"
                                          },
                                          {
                                            "key": "Accept",
                                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                                          },
                                          {
                                            "key": "Authorization",
                                            "value": "Basic <credentials>",
                                            "description": "Added as a part of security scheme: basic"
                                          }
                                        ],
                                        "body": {
                                          "mode": "raw",
                                          "raw": "{\n  \"roles\": [\n    {\n      \"id\": \"<integer>\"\n    },\n    {\n      \"id\": \"<integer>\"\n    }\n  ]\n}",
                                          "options": {
                                            "raw": {
                                              "headerFamily": "json",
                                              "language": "json"
                                            }
                                          }
                                        },
                                        "url": {
                                          "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/inventory/:id",
                                          "host": [
                                            "{{baseUrl}}"
                                          ],
                                          "path": [
                                            "user",
                                            ":tenantId",
                                            "users",
                                            ":userId",
                                            "roles",
                                            "inventory",
                                            ":id"
                                          ],
                                          "variable": [
                                            {
                                              "key": "tenantId"
                                            },
                                            {
                                              "key": "userId"
                                            },
                                            {
                                              "key": "id"
                                            }
                                          ]
                                        }
                                      },
                                      "status": "Forbidden",
                                      "code": 403,
                                      "_postman_previewlanguage": "json",
                                      "header": [
                                        {
                                          "key": "Content-Type",
                                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                                        }
                                      ],
                                      "cookie": [],
                                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                    },
                                    {
                                      "name": "Role not found.",
                                      "originalRequest": {
                                        "method": "PUT",
                                        "header": [
                                          {
                                            "key": "Content-Type",
                                            "value": "application/vnd.com.nsn.cumulocity.inventoryassignment+json"
                                          },
                                          {
                                            "key": "Accept",
                                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                                          },
                                          {
                                            "key": "Authorization",
                                            "value": "Basic <credentials>",
                                            "description": "Added as a part of security scheme: basic"
                                          }
                                        ],
                                        "body": {
                                          "mode": "raw",
                                          "raw": "{\n  \"roles\": [\n    {\n      \"id\": \"<integer>\"\n    },\n    {\n      \"id\": \"<integer>\"\n    }\n  ]\n}",
                                          "options": {
                                            "raw": {
                                              "headerFamily": "json",
                                              "language": "json"
                                            }
                                          }
                                        },
                                        "url": {
                                          "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/inventory/:id",
                                          "host": [
                                            "{{baseUrl}}"
                                          ],
                                          "path": [
                                            "user",
                                            ":tenantId",
                                            "users",
                                            ":userId",
                                            "roles",
                                            "inventory",
                                            ":id"
                                          ],
                                          "variable": [
                                            {
                                              "key": "tenantId"
                                            },
                                            {
                                              "key": "userId"
                                            },
                                            {
                                              "key": "id"
                                            }
                                          ]
                                        }
                                      },
                                      "status": "Not Found",
                                      "code": 404,
                                      "_postman_previewlanguage": "json",
                                      "header": [
                                        {
                                          "key": "Content-Type",
                                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                                        }
                                      ],
                                      "cookie": [],
                                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                    },
                                    {
                                      "name": "Unprocessable Entity – invalid payload.",
                                      "originalRequest": {
                                        "method": "PUT",
                                        "header": [
                                          {
                                            "key": "Content-Type",
                                            "value": "application/vnd.com.nsn.cumulocity.inventoryassignment+json"
                                          },
                                          {
                                            "key": "Authorization",
                                            "value": "Basic <credentials>",
                                            "description": "Added as a part of security scheme: basic"
                                          }
                                        ],
                                        "body": {
                                          "mode": "raw",
                                          "raw": "{\n  \"roles\": [\n    {\n      \"id\": \"<integer>\"\n    },\n    {\n      \"id\": \"<integer>\"\n    }\n  ]\n}",
                                          "options": {
                                            "raw": {
                                              "headerFamily": "json",
                                              "language": "json"
                                            }
                                          }
                                        },
                                        "url": {
                                          "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/inventory/:id",
                                          "host": [
                                            "{{baseUrl}}"
                                          ],
                                          "path": [
                                            "user",
                                            ":tenantId",
                                            "users",
                                            ":userId",
                                            "roles",
                                            "inventory",
                                            ":id"
                                          ],
                                          "variable": [
                                            {
                                              "key": "tenantId"
                                            },
                                            {
                                              "key": "userId"
                                            },
                                            {
                                              "key": "id"
                                            }
                                          ]
                                        }
                                      },
                                      "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                                      "code": 422,
                                      "_postman_previewlanguage": "text",
                                      "header": [],
                                      "cookie": [],
                                      "body": ""
                                    }
                                  ]
                                },
                                {
                                  "name": "Remove a specific inventory role assigned to a user",
                                  "request": {
                                    "auth": {
                                      "type": "basic",
                                      "basic": [
                                        {
                                          "key": "username",
                                          "value": "{{basicAuthUsername}}",
                                          "type": "string"
                                        },
                                        {
                                          "key": "password",
                                          "value": "{{basicAuthPassword}}",
                                          "type": "string"
                                        }
                                      ]
                                    },
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/inventory/:id",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "user",
                                        ":tenantId",
                                        "users",
                                        ":userId",
                                        "roles",
                                        "inventory",
                                        ":id"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId",
                                          "value": "<string>",
                                          "description": "(Required) Unique identifier of a Cumulocity tenant."
                                        },
                                        {
                                          "key": "userId",
                                          "value": "<string>",
                                          "description": "(Required) Unique identifier of the a user."
                                        },
                                        {
                                          "key": "id",
                                          "value": "<integer>",
                                          "description": "(Required) Unique identifier of the inventory assignment."
                                        }
                                      ]
                                    },
                                    "description": "Remove a specific inventory role (by a given ID) assigned to a specific user (by a given user ID) in a specific tenant (by a given tenant ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_ADMIN <b>AND</b> (is not in user hierarchy <b>OR</b> is root in the user hierarchy) <b>OR</b> ROLE_USER_MANAGEMENT_ADMIN <b>AND</b> is in user hiararchy <b>AND</b> has parent access to inventory assignments <b>OR</b> ROLE_USER_MANAGEMENT_CREATE <b>AND</b> is parent of the user <b>AND</b> is not the current user <b>AND</b> has current user access to inventory assignments <b>AND</b> has parent access to inventory assignments\n</section>\n"
                                  },
                                  "response": [
                                    {
                                      "name": "An inventory assignment was removed.",
                                      "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                          {
                                            "key": "Authorization",
                                            "value": "Basic <credentials>",
                                            "description": "Added as a part of security scheme: basic"
                                          }
                                        ],
                                        "url": {
                                          "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/inventory/:id",
                                          "host": [
                                            "{{baseUrl}}"
                                          ],
                                          "path": [
                                            "user",
                                            ":tenantId",
                                            "users",
                                            ":userId",
                                            "roles",
                                            "inventory",
                                            ":id"
                                          ],
                                          "variable": [
                                            {
                                              "key": "tenantId"
                                            },
                                            {
                                              "key": "userId"
                                            },
                                            {
                                              "key": "id"
                                            }
                                          ]
                                        }
                                      },
                                      "status": "No Content",
                                      "code": 204,
                                      "_postman_previewlanguage": "text",
                                      "header": [],
                                      "cookie": [],
                                      "body": ""
                                    },
                                    {
                                      "name": "Authentication information is missing or invalid.",
                                      "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                          {
                                            "key": "Accept",
                                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                                          },
                                          {
                                            "key": "Authorization",
                                            "value": "Basic <credentials>",
                                            "description": "Added as a part of security scheme: basic"
                                          }
                                        ],
                                        "url": {
                                          "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/inventory/:id",
                                          "host": [
                                            "{{baseUrl}}"
                                          ],
                                          "path": [
                                            "user",
                                            ":tenantId",
                                            "users",
                                            ":userId",
                                            "roles",
                                            "inventory",
                                            ":id"
                                          ],
                                          "variable": [
                                            {
                                              "key": "tenantId"
                                            },
                                            {
                                              "key": "userId"
                                            },
                                            {
                                              "key": "id"
                                            }
                                          ]
                                        }
                                      },
                                      "status": "Unauthorized",
                                      "code": 401,
                                      "_postman_previewlanguage": "json",
                                      "header": [
                                        {
                                          "key": "Content-Type",
                                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                                        }
                                      ],
                                      "cookie": [],
                                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                    },
                                    {
                                      "name": "Not authorized to perform this operation.",
                                      "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                          {
                                            "key": "Authorization",
                                            "value": "Basic <credentials>",
                                            "description": "Added as a part of security scheme: basic"
                                          }
                                        ],
                                        "url": {
                                          "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/inventory/:id",
                                          "host": [
                                            "{{baseUrl}}"
                                          ],
                                          "path": [
                                            "user",
                                            ":tenantId",
                                            "users",
                                            ":userId",
                                            "roles",
                                            "inventory",
                                            ":id"
                                          ],
                                          "variable": [
                                            {
                                              "key": "tenantId"
                                            },
                                            {
                                              "key": "userId"
                                            },
                                            {
                                              "key": "id"
                                            }
                                          ]
                                        }
                                      },
                                      "status": "Forbidden",
                                      "code": 403,
                                      "_postman_previewlanguage": "text",
                                      "header": [],
                                      "cookie": [],
                                      "body": ""
                                    },
                                    {
                                      "name": "Role not found.",
                                      "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                          {
                                            "key": "Accept",
                                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                                          },
                                          {
                                            "key": "Authorization",
                                            "value": "Basic <credentials>",
                                            "description": "Added as a part of security scheme: basic"
                                          }
                                        ],
                                        "url": {
                                          "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/inventory/:id",
                                          "host": [
                                            "{{baseUrl}}"
                                          ],
                                          "path": [
                                            "user",
                                            ":tenantId",
                                            "users",
                                            ":userId",
                                            "roles",
                                            "inventory",
                                            ":id"
                                          ],
                                          "variable": [
                                            {
                                              "key": "tenantId"
                                            },
                                            {
                                              "key": "userId"
                                            },
                                            {
                                              "key": "id"
                                            }
                                          ]
                                        }
                                      },
                                      "status": "Not Found",
                                      "code": 404,
                                      "_postman_previewlanguage": "json",
                                      "header": [
                                        {
                                          "key": "Content-Type",
                                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                                        }
                                      ],
                                      "cookie": [],
                                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "name": "Assign an inventory role to a user",
                              "request": {
                                "auth": {
                                  "type": "basic",
                                  "basic": [
                                    {
                                      "key": "username",
                                      "value": "{{basicAuthUsername}}",
                                      "type": "string"
                                    },
                                    {
                                      "key": "password",
                                      "value": "{{basicAuthPassword}}",
                                      "type": "string"
                                    }
                                  ]
                                },
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/vnd.com.nsn.cumulocity.inventoryassignment+json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.inventoryassignment+json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"managedObject\": \"<string>\",\n  \"roles\": [\n    {\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"permissions\": [\n        {\n          \"permission\": \"*\",\n          \"scope\": \"EVENT\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"permission\": \"ADMIN\",\n          \"scope\": \"EVENT\",\n          \"type\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"permissions\": [\n        {\n          \"permission\": \"*\",\n          \"scope\": \"ALARM\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"permission\": \"*\",\n          \"scope\": \"EVENT\",\n          \"type\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/inventory",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "users",
                                    ":userId",
                                    "roles",
                                    "inventory"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId",
                                      "value": "<string>",
                                      "description": "(Required) Unique identifier of a Cumulocity tenant."
                                    },
                                    {
                                      "key": "userId",
                                      "value": "<string>",
                                      "description": "(Required) Unique identifier of the a user."
                                    }
                                  ]
                                },
                                "description": "Assign an existing inventory role to a specific user (by a given user ID) in a specific tenant (by a given tenant ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_ADMIN to assign any inventory role to root users in a user hierarchy <b>OR</b> users that are not in any hierarchy<br/>\nROLE_USER_MANAGEMENT_ADMIN to assign inventory roles accessible by the parent of the assigned user to non-root users in a user hierarchy<br/>\nROLE_USER_MANAGEMENT_CREATE to assign inventory roles accessible by the current user <b>AND</b> accessible by the parent of the assigned user to the descendants of the current user in a user hierarchy\n</section>\n"
                              },
                              "response": [
                                {
                                  "name": "An inventory role was assigned to a user.",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/vnd.com.nsn.cumulocity.inventoryassignment+json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/vnd.com.nsn.cumulocity.inventoryassignment+json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"managedObject\": \"<string>\",\n  \"roles\": [\n    {\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"permissions\": [\n        {\n          \"permission\": \"*\",\n          \"scope\": \"EVENT\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"permission\": \"ADMIN\",\n          \"scope\": \"EVENT\",\n          \"type\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"permissions\": [\n        {\n          \"permission\": \"*\",\n          \"scope\": \"ALARM\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"permission\": \"*\",\n          \"scope\": \"EVENT\",\n          \"type\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/inventory",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "user",
                                        ":tenantId",
                                        "users",
                                        ":userId",
                                        "roles",
                                        "inventory"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "userId"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "OK",
                                  "code": 200,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/vnd.com.nsn.cumulocity.inventoryassignment+json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"id\": \"<integer>\",\n  \"managedObject\": \"<string>\",\n  \"roles\": [\n    {\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"permissions\": [\n        {\n          \"id\": \"<integer>\",\n          \"permission\": \"ADMIN\",\n          \"scope\": \"ALARM\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"permission\": \"*\",\n          \"scope\": \"MANAGED_OBJECT\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"self\": \"<uri>\"\n    },\n    {\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"permissions\": [\n        {\n          \"id\": \"<integer>\",\n          \"permission\": \"ADMIN\",\n          \"scope\": \"*\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"permission\": \"ADMIN\",\n          \"scope\": \"MANAGED_OBJECT\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"self\": \"<uri>\"\n    }\n  ],\n  \"self\": \"<uri>\"\n}"
                                },
                                {
                                  "name": "Authentication information is missing or invalid.",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/vnd.com.nsn.cumulocity.inventoryassignment+json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"managedObject\": \"<string>\",\n  \"roles\": [\n    {\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"permissions\": [\n        {\n          \"permission\": \"*\",\n          \"scope\": \"EVENT\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"permission\": \"ADMIN\",\n          \"scope\": \"EVENT\",\n          \"type\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"permissions\": [\n        {\n          \"permission\": \"*\",\n          \"scope\": \"ALARM\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"permission\": \"*\",\n          \"scope\": \"EVENT\",\n          \"type\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/inventory",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "user",
                                        ":tenantId",
                                        "users",
                                        ":userId",
                                        "roles",
                                        "inventory"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "userId"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                },
                                {
                                  "name": "Not enough permissions/roles to perform this operation.",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/vnd.com.nsn.cumulocity.inventoryassignment+json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"managedObject\": \"<string>\",\n  \"roles\": [\n    {\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"permissions\": [\n        {\n          \"permission\": \"*\",\n          \"scope\": \"EVENT\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"permission\": \"ADMIN\",\n          \"scope\": \"EVENT\",\n          \"type\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"permissions\": [\n        {\n          \"permission\": \"*\",\n          \"scope\": \"ALARM\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"permission\": \"*\",\n          \"scope\": \"EVENT\",\n          \"type\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/inventory",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "user",
                                        ":tenantId",
                                        "users",
                                        ":userId",
                                        "roles",
                                        "inventory"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "userId"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Forbidden",
                                  "code": 403,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                },
                                {
                                  "name": "User not found.",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/vnd.com.nsn.cumulocity.inventoryassignment+json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"managedObject\": \"<string>\",\n  \"roles\": [\n    {\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"permissions\": [\n        {\n          \"permission\": \"*\",\n          \"scope\": \"EVENT\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"permission\": \"ADMIN\",\n          \"scope\": \"EVENT\",\n          \"type\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"permissions\": [\n        {\n          \"permission\": \"*\",\n          \"scope\": \"ALARM\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"permission\": \"*\",\n          \"scope\": \"EVENT\",\n          \"type\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/inventory",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "user",
                                        ":tenantId",
                                        "users",
                                        ":userId",
                                        "roles",
                                        "inventory"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "userId"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Not Found",
                                  "code": 404,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                },
                                {
                                  "name": "Unprocessable Entity – invalid payload.",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/vnd.com.nsn.cumulocity.inventoryassignment+json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"managedObject\": \"<string>\",\n  \"roles\": [\n    {\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"permissions\": [\n        {\n          \"permission\": \"*\",\n          \"scope\": \"EVENT\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"permission\": \"ADMIN\",\n          \"scope\": \"EVENT\",\n          \"type\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"permissions\": [\n        {\n          \"permission\": \"*\",\n          \"scope\": \"ALARM\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"permission\": \"*\",\n          \"scope\": \"EVENT\",\n          \"type\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/inventory",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "user",
                                        ":tenantId",
                                        "users",
                                        ":userId",
                                        "roles",
                                        "inventory"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "userId"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                                  "code": 422,
                                  "_postman_previewlanguage": "text",
                                  "header": [],
                                  "cookie": [],
                                  "body": ""
                                }
                              ]
                            },
                            {
                              "name": "Retrieve all inventory roles assigned to a user",
                              "request": {
                                "auth": {
                                  "type": "basic",
                                  "basic": [
                                    {
                                      "key": "username",
                                      "value": "{{basicAuthUsername}}",
                                      "type": "string"
                                    },
                                    {
                                      "key": "password",
                                      "value": "{{basicAuthPassword}}",
                                      "type": "string"
                                    }
                                  ]
                                },
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.inventoryassignmentcollection+json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/inventory",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "users",
                                    ":userId",
                                    "roles",
                                    "inventory"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId",
                                      "value": "<string>",
                                      "description": "(Required) Unique identifier of a Cumulocity tenant."
                                    },
                                    {
                                      "key": "userId",
                                      "value": "<string>",
                                      "description": "(Required) Unique identifier of the a user."
                                    }
                                  ]
                                },
                                "description": "Retrieve all inventory roles assigned to a specific user (by a given user ID) in a specific tenant (by a given tenant ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_READ <b>OR</b> ROLE_USER_MANAGEMENT_CREATE <b>AND</b> is the parent of the user\n</section>\n"
                              },
                              "response": [
                                {
                                  "name": "The request has succeeded and the inventory roles are sent in the response.",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/vnd.com.nsn.cumulocity.inventoryassignmentcollection+json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/inventory",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "user",
                                        ":tenantId",
                                        "users",
                                        ":userId",
                                        "roles",
                                        "inventory"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "userId"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "OK",
                                  "code": 200,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/vnd.com.nsn.cumulocity.inventoryassignmentcollection+json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"self\": \"<uri>\",\n  \"inventoryAssignments\": [\n    {\n      \"id\": \"<integer>\",\n      \"managedObject\": \"<string>\",\n      \"roles\": [\n        {\n          \"description\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"permissions\": [\n            {\n              \"id\": \"<integer>\",\n              \"permission\": \"*\",\n              \"scope\": \"OPERATION\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"permission\": \"*\",\n              \"scope\": \"MEASUREMENT\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"self\": \"<uri>\"\n        },\n        {\n          \"description\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"permissions\": [\n            {\n              \"id\": \"<integer>\",\n              \"permission\": \"ADMIN\",\n              \"scope\": \"MANAGED_OBJECT\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"permission\": \"READ\",\n              \"scope\": \"MEASUREMENT\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"self\": \"<uri>\"\n        }\n      ],\n      \"self\": \"<uri>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"managedObject\": \"<string>\",\n      \"roles\": [\n        {\n          \"description\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"permissions\": [\n            {\n              \"id\": \"<integer>\",\n              \"permission\": \"ADMIN\",\n              \"scope\": \"EVENT\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"permission\": \"ADMIN\",\n              \"scope\": \"ALARM\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"self\": \"<uri>\"\n        },\n        {\n          \"description\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"permissions\": [\n            {\n              \"id\": \"<integer>\",\n              \"permission\": \"*\",\n              \"scope\": \"*\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"permission\": \"*\",\n              \"scope\": \"*\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"self\": \"<uri>\"\n        }\n      ],\n      \"self\": \"<uri>\"\n    }\n  ]\n}"
                                },
                                {
                                  "name": "Authentication information is missing or invalid.",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/inventory",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "user",
                                        ":tenantId",
                                        "users",
                                        ":userId",
                                        "roles",
                                        "inventory"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "userId"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                },
                                {
                                  "name": "Not enough permissions/roles to perform this operation.",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/inventory",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "user",
                                        ":tenantId",
                                        "users",
                                        ":userId",
                                        "roles",
                                        "inventory"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "userId"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Forbidden",
                                  "code": 403,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                },
                                {
                                  "name": "User not found.",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles/inventory",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "user",
                                        ":tenantId",
                                        "users",
                                        ":userId",
                                        "roles",
                                        "inventory"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "userId"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Not Found",
                                  "code": 404,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "name": "Assign a role to specific user in a specific tenant",
                          "request": {
                            "auth": {
                              "type": "basic",
                              "basic": [
                                {
                                  "key": "username",
                                  "value": "{{basicAuthUsername}}",
                                  "type": "string"
                                },
                                {
                                  "key": "password",
                                  "value": "{{basicAuthPassword}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.rolereference+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.rolereference+json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"role\": {\n    \"self\": \"<string>\"\n  }\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "users",
                                ":userId",
                                "roles"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of a Cumulocity tenant."
                                },
                                {
                                  "key": "userId",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of the a user."
                                }
                              ]
                            },
                            "description": "Assign a role to a specific user (by a given user ID) in a specific tenant (by a given tenant ID).\n\nWhen a role is assigned to a user, a corresponding audit record is created with type \"User\" and activity \"User updated\".\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_ADMIN to assign any role to root users in a user hierarchy <b>OR</b> users that are not in any hierarchy<br/>\nROLE_USER_MANAGEMENT_ADMIN to assign roles accessible by the parent of assigned user to non-root users in a user hierarchy<br/>\nROLE_USER_MANAGEMENT_CREATE to assign roles accessible by the current user <b>AND</b> accessible by the parent of the assigned user to the descendants of the current user in a user hierarchy\n</section>\n"
                          },
                          "response": [
                            {
                              "name": "A user role was assigned to a user.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/vnd.com.nsn.cumulocity.rolereference+json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.rolereference+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"role\": {\n    \"self\": \"<string>\"\n  }\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "users",
                                    ":userId",
                                    "roles"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "userId"
                                    }
                                  ]
                                }
                              },
                              "status": "Created",
                              "code": 201,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.rolereference+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"role\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"self\": \"<uri>\"\n  },\n  \"self\": \"<uri>\"\n}"
                            },
                            {
                              "name": "Authentication information is missing or invalid.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/vnd.com.nsn.cumulocity.rolereference+json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"role\": {\n    \"self\": \"<string>\"\n  }\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "users",
                                    ":userId",
                                    "roles"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "userId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Not enough permissions/roles to perform this operation.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/vnd.com.nsn.cumulocity.rolereference+json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"role\": {\n    \"self\": \"<string>\"\n  }\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "users",
                                    ":userId",
                                    "roles"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "userId"
                                    }
                                  ]
                                }
                              },
                              "status": "Forbidden",
                              "code": 403,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "User not found.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/vnd.com.nsn.cumulocity.rolereference+json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"role\": {\n    \"self\": \"<string>\"\n  }\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "users",
                                    ":userId",
                                    "roles"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "userId"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Unprocessable Entity – invalid payload.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/vnd.com.nsn.cumulocity.rolereference+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"role\": {\n    \"self\": \"<string>\"\n  }\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/users/:userId/roles",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "users",
                                    ":userId",
                                    "roles"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "userId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                              "code": 422,
                              "_postman_previewlanguage": "text",
                              "header": [],
                              "cookie": [],
                              "body": ""
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Retrieve a specific user for a specific tenant",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.user+json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/:tenantId/users/:userId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            ":tenantId",
                            "users",
                            ":userId"
                          ],
                          "variable": [
                            {
                              "key": "tenantId",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of a Cumulocity tenant."
                            },
                            {
                              "key": "userId",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the a user."
                            }
                          ]
                        },
                        "description": "Retrieve a specific user (by a given user ID) for a specific tenant (by a given tenant ID).\n\nUsers in the response are sorted by username in ascending order.\nOnly objects which the user is allowed to see are returned to the user.\nThe user password is never returned in a GET response. Authentication mechanism is provided by another interface.\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_READ <b>OR</b> ROLE_USER_MANAGEMENT_CREATE <b>AND</b> is parent of the user\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The request has succeeded and the user is sent in the response.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.user+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/users/:userId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "users",
                                ":userId"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "userId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.user+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"applications\": [\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"HOSTED\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"PER_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    },\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"EXTERNAL\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"PER_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    }\n  ],\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"Utc1f\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"displayName\": \"<string>\",\n  \"email\": \"<email>\",\n  \"enabled\": true,\n  \"firstName\": \"<string>\",\n  \"groups\": {\n    \"self\": \"<uri>\",\n    \"references\": [\n      {\n        \"group\": {\n          \"name\": \"<string>\",\n          \"applications\": [\n            {\n              \"availability\": \"PRIVATE\",\n              \"contextPath\": \"<string>\",\n              \"description\": \"<string>\",\n              \"id\": \"<string>\",\n              \"key\": \"<string>\",\n              \"name\": \"<string>\",\n              \"owner\": {\n                \"self\": \"<uri>\",\n                \"tenant\": {\n                  \"id\": \"<string>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"type\": \"HOSTED\",\n              \"manifest\": {\n                \"apiVersion\": \"<string>\",\n                \"billingMode\": \"RESOURCES\",\n                \"contextPath\": \"<string>\",\n                \"extensions\": [\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  },\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  }\n                ],\n                \"isolation\": \"MULTI_TENANT\",\n                \"livenessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"provider\": {\n                  \"name\": \"<string>\"\n                },\n                \"readinessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"requestResources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"resources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"scale\": \"NONE\",\n                \"settings\": [\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  },\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  }\n                ],\n                \"settingsCategory\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"breadcrumbs\": \"<boolean>\",\n              \"contentSecurityPolicy\": \"<string>\",\n              \"dynamicOptionsUrl\": \"<string>\",\n              \"globalTitle\": \"<string>\",\n              \"legacy\": \"<boolean>\",\n              \"rightDrawer\": \"<boolean>\",\n              \"upgrade\": \"<boolean>\",\n              \"activeVersionId\": \"<string>\",\n              \"resourcesUrl\": \"<string>\"\n            },\n            {\n              \"availability\": \"PRIVATE\",\n              \"contextPath\": \"<string>\",\n              \"description\": \"<string>\",\n              \"id\": \"<string>\",\n              \"key\": \"<string>\",\n              \"name\": \"<string>\",\n              \"owner\": {\n                \"self\": \"<uri>\",\n                \"tenant\": {\n                  \"id\": \"<string>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"type\": \"EXTERNAL\",\n              \"manifest\": {\n                \"apiVersion\": \"<string>\",\n                \"billingMode\": \"RESOURCES\",\n                \"contextPath\": \"<string>\",\n                \"extensions\": [\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  },\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  }\n                ],\n                \"isolation\": \"MULTI_TENANT\",\n                \"livenessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"provider\": {\n                  \"name\": \"<string>\"\n                },\n                \"readinessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"requestResources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"resources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"scale\": \"NONE\",\n                \"settings\": [\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  },\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  }\n                ],\n                \"settingsCategory\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"breadcrumbs\": \"<boolean>\",\n              \"contentSecurityPolicy\": \"<string>\",\n              \"dynamicOptionsUrl\": \"<string>\",\n              \"globalTitle\": \"<string>\",\n              \"legacy\": \"<boolean>\",\n              \"rightDrawer\": \"<boolean>\",\n              \"upgrade\": \"<boolean>\",\n              \"activeVersionId\": \"<string>\",\n              \"resourcesUrl\": \"<string>\"\n            }\n          ],\n          \"customProperties\": {\n            \"language\": \"<string>\",\n            \"eu_23\": {\n              \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n              \"x-additionalPropertiesName\": \"customProperties\"\n            }\n          },\n          \"description\": \"<string>\",\n          \"devicePermissions\": {\n            \"eu7\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"eaf5\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"cupidatat45c\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"in042\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          \"id\": \"<integer>\",\n          \"roles\": {\n            \"self\": \"<uri>\",\n            \"references\": [\n              {\n                \"role\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"self\": \"<uri>\"\n                },\n                \"self\": \"<uri>\"\n              },\n              {\n                \"role\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"self\": \"<uri>\"\n                },\n                \"self\": \"<uri>\"\n              }\n            ],\n            \"statistics\": {\n              \"currentPage\": \"<integer>\",\n              \"pageSize\": \"<integer>\",\n              \"totalElements\": \"<integer>\",\n              \"totalPages\": \"<integer>\"\n            }\n          },\n          \"self\": \"<uri>\",\n          \"users\": {\n            \"self\": \"<uri>\",\n            \"references\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n              }\n            ]\n          }\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"group\": {\n          \"name\": \"<string>\",\n          \"applications\": [\n            {\n              \"availability\": \"PRIVATE\",\n              \"contextPath\": \"<string>\",\n              \"description\": \"<string>\",\n              \"id\": \"<string>\",\n              \"key\": \"<string>\",\n              \"name\": \"<string>\",\n              \"owner\": {\n                \"self\": \"<uri>\",\n                \"tenant\": {\n                  \"id\": \"<string>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"type\": \"EXTERNAL\",\n              \"manifest\": {\n                \"apiVersion\": \"<string>\",\n                \"billingMode\": \"RESOURCES\",\n                \"contextPath\": \"<string>\",\n                \"extensions\": [\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  },\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  }\n                ],\n                \"isolation\": \"MULTI_TENANT\",\n                \"livenessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"provider\": {\n                  \"name\": \"<string>\"\n                },\n                \"readinessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"requestResources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"resources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"scale\": \"NONE\",\n                \"settings\": [\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  },\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  }\n                ],\n                \"settingsCategory\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"breadcrumbs\": \"<boolean>\",\n              \"contentSecurityPolicy\": \"<string>\",\n              \"dynamicOptionsUrl\": \"<string>\",\n              \"globalTitle\": \"<string>\",\n              \"legacy\": \"<boolean>\",\n              \"rightDrawer\": \"<boolean>\",\n              \"upgrade\": \"<boolean>\",\n              \"activeVersionId\": \"<string>\",\n              \"resourcesUrl\": \"<string>\"\n            },\n            {\n              \"availability\": \"PRIVATE\",\n              \"contextPath\": \"<string>\",\n              \"description\": \"<string>\",\n              \"id\": \"<string>\",\n              \"key\": \"<string>\",\n              \"name\": \"<string>\",\n              \"owner\": {\n                \"self\": \"<uri>\",\n                \"tenant\": {\n                  \"id\": \"<string>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"type\": \"EXTERNAL\",\n              \"manifest\": {\n                \"apiVersion\": \"<string>\",\n                \"billingMode\": \"RESOURCES\",\n                \"contextPath\": \"<string>\",\n                \"extensions\": [\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  },\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  }\n                ],\n                \"isolation\": \"MULTI_TENANT\",\n                \"livenessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"provider\": {\n                  \"name\": \"<string>\"\n                },\n                \"readinessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"requestResources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"resources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"scale\": \"NONE\",\n                \"settings\": [\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  },\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  }\n                ],\n                \"settingsCategory\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"breadcrumbs\": \"<boolean>\",\n              \"contentSecurityPolicy\": \"<string>\",\n              \"dynamicOptionsUrl\": \"<string>\",\n              \"globalTitle\": \"<string>\",\n              \"legacy\": \"<boolean>\",\n              \"rightDrawer\": \"<boolean>\",\n              \"upgrade\": \"<boolean>\",\n              \"activeVersionId\": \"<string>\",\n              \"resourcesUrl\": \"<string>\"\n            }\n          ],\n          \"customProperties\": {\n            \"language\": \"<string>\",\n            \"nulla_3a2\": {\n              \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n              \"x-additionalPropertiesName\": \"customProperties\"\n            }\n          },\n          \"description\": \"<string>\",\n          \"devicePermissions\": {\n            \"pariatur77\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"aliquip_28\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"tempor_82\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          \"id\": \"<integer>\",\n          \"roles\": {\n            \"self\": \"<uri>\",\n            \"references\": [\n              {\n                \"role\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"self\": \"<uri>\"\n                },\n                \"self\": \"<uri>\"\n              },\n              {\n                \"role\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"self\": \"<uri>\"\n                },\n                \"self\": \"<uri>\"\n              }\n            ],\n            \"statistics\": {\n              \"currentPage\": \"<integer>\",\n              \"pageSize\": \"<integer>\",\n              \"totalElements\": \"<integer>\",\n              \"totalPages\": \"<integer>\"\n            }\n          },\n          \"self\": \"<uri>\",\n          \"users\": {\n            \"self\": \"<uri>\",\n            \"references\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n              }\n            ]\n          }\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"statistics\": {\n      \"currentPage\": \"<integer>\",\n      \"pageSize\": \"<integer>\",\n      \"totalElements\": \"<integer>\",\n      \"totalPages\": \"<integer>\"\n    }\n  },\n  \"id\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"lastPasswordChange\": \"<dateTime>\",\n  \"newsletter\": \"<boolean>\",\n  \"owner\": \"<string>\",\n  \"passwordStrength\": \"RED\",\n  \"phone\": \"<string>\",\n  \"roles\": {\n    \"self\": \"<uri>\",\n    \"references\": [\n      {\n        \"role\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"role\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"statistics\": {\n      \"currentPage\": \"<integer>\",\n      \"pageSize\": \"<integer>\",\n      \"totalElements\": \"<integer>\",\n      \"totalPages\": \"<integer>\"\n    }\n  },\n  \"self\": \"<uri>\",\n  \"shouldResetPassword\": \"<boolean>\",\n  \"twoFactorAuthenticationEnabled\": false,\n  \"userName\": \"<string>\",\n  \"devicePermissions\": {\n    \"ea468\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/users/:userId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "users",
                                ":userId"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "userId"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Not enough permissions/roles to perform this operation.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/users/:userId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "users",
                                ":userId"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "userId"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "User not found.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/users/:userId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "users",
                                ":userId"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "userId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    },
                    {
                      "name": "Update a specific user for a specific tenant",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.user+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.user+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"ullamco1\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"culpa6a\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"displayName\": \"<string>\",\n  \"enabled\": true,\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"newsletter\": \"<boolean>\",\n  \"phone\": \"<string>\",\n  \"sendPasswordResetEmail\": \"<boolean>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/user/:tenantId/users/:userId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            ":tenantId",
                            "users",
                            ":userId"
                          ],
                          "variable": [
                            {
                              "key": "tenantId",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of a Cumulocity tenant."
                            },
                            {
                              "key": "userId",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the a user."
                            }
                          ]
                        },
                        "description": "Update a specific user (by a given user ID) for a specific tenant (by a given tenant ID).\n\nAny change in user's roles, device permissions and groups creates corresponding audit records with type \"User\" and activity \"User updated\" with information which properties have been changed.\n\nWhen the user is updated with changed permissions or groups, a corresponding audit record is created with type \"User\" and activity \"User updated\".\n\nNote that you cannot update the password or email of another user, they can only be updated for the current user.\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_ADMIN to update root users in a user hierarchy <b>OR</b> users that are not in any hierarchy<br/>\nROLE_USER_MANAGEMENT_ADMIN to update non-root users in a user hierarchy <b>AND</b> whose parents have access to roles, groups, device permissions and applications being assigned<br/>\nROLE_USER_MANAGEMENT_CREATE to update descendants of the current user in a user hierarchy <b>AND</b> whose parents have access to roles, groups, device permissions and applications being assigned\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "A user was updated.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.user+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.user+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"ullamco1\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"culpa6a\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"displayName\": \"<string>\",\n  \"enabled\": true,\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"newsletter\": \"<boolean>\",\n  \"phone\": \"<string>\",\n  \"sendPasswordResetEmail\": \"<boolean>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/users/:userId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "users",
                                ":userId"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "userId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.user+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"applications\": [\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"HOSTED\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"PER_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    },\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"EXTERNAL\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"PER_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    }\n  ],\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"Utc1f\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"displayName\": \"<string>\",\n  \"email\": \"<email>\",\n  \"enabled\": true,\n  \"firstName\": \"<string>\",\n  \"groups\": {\n    \"self\": \"<uri>\",\n    \"references\": [\n      {\n        \"group\": {\n          \"name\": \"<string>\",\n          \"applications\": [\n            {\n              \"availability\": \"PRIVATE\",\n              \"contextPath\": \"<string>\",\n              \"description\": \"<string>\",\n              \"id\": \"<string>\",\n              \"key\": \"<string>\",\n              \"name\": \"<string>\",\n              \"owner\": {\n                \"self\": \"<uri>\",\n                \"tenant\": {\n                  \"id\": \"<string>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"type\": \"HOSTED\",\n              \"manifest\": {\n                \"apiVersion\": \"<string>\",\n                \"billingMode\": \"RESOURCES\",\n                \"contextPath\": \"<string>\",\n                \"extensions\": [\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  },\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  }\n                ],\n                \"isolation\": \"MULTI_TENANT\",\n                \"livenessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"provider\": {\n                  \"name\": \"<string>\"\n                },\n                \"readinessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"requestResources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"resources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"scale\": \"NONE\",\n                \"settings\": [\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  },\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  }\n                ],\n                \"settingsCategory\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"breadcrumbs\": \"<boolean>\",\n              \"contentSecurityPolicy\": \"<string>\",\n              \"dynamicOptionsUrl\": \"<string>\",\n              \"globalTitle\": \"<string>\",\n              \"legacy\": \"<boolean>\",\n              \"rightDrawer\": \"<boolean>\",\n              \"upgrade\": \"<boolean>\",\n              \"activeVersionId\": \"<string>\",\n              \"resourcesUrl\": \"<string>\"\n            },\n            {\n              \"availability\": \"PRIVATE\",\n              \"contextPath\": \"<string>\",\n              \"description\": \"<string>\",\n              \"id\": \"<string>\",\n              \"key\": \"<string>\",\n              \"name\": \"<string>\",\n              \"owner\": {\n                \"self\": \"<uri>\",\n                \"tenant\": {\n                  \"id\": \"<string>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"type\": \"EXTERNAL\",\n              \"manifest\": {\n                \"apiVersion\": \"<string>\",\n                \"billingMode\": \"RESOURCES\",\n                \"contextPath\": \"<string>\",\n                \"extensions\": [\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  },\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  }\n                ],\n                \"isolation\": \"MULTI_TENANT\",\n                \"livenessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"provider\": {\n                  \"name\": \"<string>\"\n                },\n                \"readinessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"requestResources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"resources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"scale\": \"NONE\",\n                \"settings\": [\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  },\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  }\n                ],\n                \"settingsCategory\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"breadcrumbs\": \"<boolean>\",\n              \"contentSecurityPolicy\": \"<string>\",\n              \"dynamicOptionsUrl\": \"<string>\",\n              \"globalTitle\": \"<string>\",\n              \"legacy\": \"<boolean>\",\n              \"rightDrawer\": \"<boolean>\",\n              \"upgrade\": \"<boolean>\",\n              \"activeVersionId\": \"<string>\",\n              \"resourcesUrl\": \"<string>\"\n            }\n          ],\n          \"customProperties\": {\n            \"language\": \"<string>\",\n            \"eu_23\": {\n              \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n              \"x-additionalPropertiesName\": \"customProperties\"\n            }\n          },\n          \"description\": \"<string>\",\n          \"devicePermissions\": {\n            \"eu7\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"eaf5\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"cupidatat45c\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"in042\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          \"id\": \"<integer>\",\n          \"roles\": {\n            \"self\": \"<uri>\",\n            \"references\": [\n              {\n                \"role\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"self\": \"<uri>\"\n                },\n                \"self\": \"<uri>\"\n              },\n              {\n                \"role\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"self\": \"<uri>\"\n                },\n                \"self\": \"<uri>\"\n              }\n            ],\n            \"statistics\": {\n              \"currentPage\": \"<integer>\",\n              \"pageSize\": \"<integer>\",\n              \"totalElements\": \"<integer>\",\n              \"totalPages\": \"<integer>\"\n            }\n          },\n          \"self\": \"<uri>\",\n          \"users\": {\n            \"self\": \"<uri>\",\n            \"references\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n              }\n            ]\n          }\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"group\": {\n          \"name\": \"<string>\",\n          \"applications\": [\n            {\n              \"availability\": \"PRIVATE\",\n              \"contextPath\": \"<string>\",\n              \"description\": \"<string>\",\n              \"id\": \"<string>\",\n              \"key\": \"<string>\",\n              \"name\": \"<string>\",\n              \"owner\": {\n                \"self\": \"<uri>\",\n                \"tenant\": {\n                  \"id\": \"<string>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"type\": \"EXTERNAL\",\n              \"manifest\": {\n                \"apiVersion\": \"<string>\",\n                \"billingMode\": \"RESOURCES\",\n                \"contextPath\": \"<string>\",\n                \"extensions\": [\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  },\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  }\n                ],\n                \"isolation\": \"MULTI_TENANT\",\n                \"livenessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"provider\": {\n                  \"name\": \"<string>\"\n                },\n                \"readinessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"requestResources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"resources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"scale\": \"NONE\",\n                \"settings\": [\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  },\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  }\n                ],\n                \"settingsCategory\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"breadcrumbs\": \"<boolean>\",\n              \"contentSecurityPolicy\": \"<string>\",\n              \"dynamicOptionsUrl\": \"<string>\",\n              \"globalTitle\": \"<string>\",\n              \"legacy\": \"<boolean>\",\n              \"rightDrawer\": \"<boolean>\",\n              \"upgrade\": \"<boolean>\",\n              \"activeVersionId\": \"<string>\",\n              \"resourcesUrl\": \"<string>\"\n            },\n            {\n              \"availability\": \"PRIVATE\",\n              \"contextPath\": \"<string>\",\n              \"description\": \"<string>\",\n              \"id\": \"<string>\",\n              \"key\": \"<string>\",\n              \"name\": \"<string>\",\n              \"owner\": {\n                \"self\": \"<uri>\",\n                \"tenant\": {\n                  \"id\": \"<string>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"type\": \"EXTERNAL\",\n              \"manifest\": {\n                \"apiVersion\": \"<string>\",\n                \"billingMode\": \"RESOURCES\",\n                \"contextPath\": \"<string>\",\n                \"extensions\": [\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  },\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  }\n                ],\n                \"isolation\": \"MULTI_TENANT\",\n                \"livenessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"provider\": {\n                  \"name\": \"<string>\"\n                },\n                \"readinessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"requestResources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"resources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"scale\": \"NONE\",\n                \"settings\": [\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  },\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  }\n                ],\n                \"settingsCategory\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"breadcrumbs\": \"<boolean>\",\n              \"contentSecurityPolicy\": \"<string>\",\n              \"dynamicOptionsUrl\": \"<string>\",\n              \"globalTitle\": \"<string>\",\n              \"legacy\": \"<boolean>\",\n              \"rightDrawer\": \"<boolean>\",\n              \"upgrade\": \"<boolean>\",\n              \"activeVersionId\": \"<string>\",\n              \"resourcesUrl\": \"<string>\"\n            }\n          ],\n          \"customProperties\": {\n            \"language\": \"<string>\",\n            \"nulla_3a2\": {\n              \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n              \"x-additionalPropertiesName\": \"customProperties\"\n            }\n          },\n          \"description\": \"<string>\",\n          \"devicePermissions\": {\n            \"pariatur77\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"aliquip_28\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"tempor_82\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          \"id\": \"<integer>\",\n          \"roles\": {\n            \"self\": \"<uri>\",\n            \"references\": [\n              {\n                \"role\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"self\": \"<uri>\"\n                },\n                \"self\": \"<uri>\"\n              },\n              {\n                \"role\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"self\": \"<uri>\"\n                },\n                \"self\": \"<uri>\"\n              }\n            ],\n            \"statistics\": {\n              \"currentPage\": \"<integer>\",\n              \"pageSize\": \"<integer>\",\n              \"totalElements\": \"<integer>\",\n              \"totalPages\": \"<integer>\"\n            }\n          },\n          \"self\": \"<uri>\",\n          \"users\": {\n            \"self\": \"<uri>\",\n            \"references\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n              }\n            ]\n          }\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"statistics\": {\n      \"currentPage\": \"<integer>\",\n      \"pageSize\": \"<integer>\",\n      \"totalElements\": \"<integer>\",\n      \"totalPages\": \"<integer>\"\n    }\n  },\n  \"id\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"lastPasswordChange\": \"<dateTime>\",\n  \"newsletter\": \"<boolean>\",\n  \"owner\": \"<string>\",\n  \"passwordStrength\": \"RED\",\n  \"phone\": \"<string>\",\n  \"roles\": {\n    \"self\": \"<uri>\",\n    \"references\": [\n      {\n        \"role\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"role\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"statistics\": {\n      \"currentPage\": \"<integer>\",\n      \"pageSize\": \"<integer>\",\n      \"totalElements\": \"<integer>\",\n      \"totalPages\": \"<integer>\"\n    }\n  },\n  \"self\": \"<uri>\",\n  \"shouldResetPassword\": \"<boolean>\",\n  \"twoFactorAuthenticationEnabled\": false,\n  \"userName\": \"<string>\",\n  \"devicePermissions\": {\n    \"ea468\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.user+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"ullamco1\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"culpa6a\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"displayName\": \"<string>\",\n  \"enabled\": true,\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"newsletter\": \"<boolean>\",\n  \"phone\": \"<string>\",\n  \"sendPasswordResetEmail\": \"<boolean>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/users/:userId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "users",
                                ":userId"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "userId"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Not enough permissions/roles to perform this operation.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.user+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"ullamco1\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"culpa6a\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"displayName\": \"<string>\",\n  \"enabled\": true,\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"newsletter\": \"<boolean>\",\n  \"phone\": \"<string>\",\n  \"sendPasswordResetEmail\": \"<boolean>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/users/:userId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "users",
                                ":userId"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "userId"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "User not found.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.user+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"ullamco1\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"culpa6a\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"displayName\": \"<string>\",\n  \"enabled\": true,\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"newsletter\": \"<boolean>\",\n  \"phone\": \"<string>\",\n  \"sendPasswordResetEmail\": \"<boolean>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/users/:userId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "users",
                                ":userId"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "userId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Unprocessable Entity – invalid payload.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.user+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"ullamco1\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"culpa6a\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"displayName\": \"<string>\",\n  \"enabled\": true,\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"newsletter\": \"<boolean>\",\n  \"phone\": \"<string>\",\n  \"sendPasswordResetEmail\": \"<boolean>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/users/:userId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "users",
                                ":userId"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "userId"
                                }
                              ]
                            }
                          },
                          "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                          "code": 422,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "Delete a specific user for a specific tenant",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/:tenantId/users/:userId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            ":tenantId",
                            "users",
                            ":userId"
                          ],
                          "variable": [
                            {
                              "key": "tenantId",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of a Cumulocity tenant."
                            },
                            {
                              "key": "userId",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the a user."
                            }
                          ]
                        },
                        "description": "Delete a specific user (by a given user ID) for a specific tenant (by a given tenant ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_ADMIN <b>OR</b> ROLE_USER_MANAGEMENT_CREATE <b>AND</b> is parent of the user <b>AND</b> not the current user\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "A user was removed.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/users/:userId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "users",
                                ":userId"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "userId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/users/:userId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "users",
                                ":userId"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "userId"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Not authorized to perform this operation.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/users/:userId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "users",
                                ":userId"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "userId"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "User not found.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/users/:userId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "users",
                                ":userId"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "userId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Create a user for a specific tenant",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.user+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.user+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"userName\": \"<string>\",\n  \"email\": \"<email>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"nostrud_65\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"ipsum9\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"displayName\": \"<string>\",\n  \"enabled\": true,\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"newsletter\": \"<boolean>\",\n  \"password\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"sendPasswordResetEmail\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/user/:tenantId/users",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        ":tenantId",
                        "users"
                      ],
                      "variable": [
                        {
                          "key": "tenantId",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of a Cumulocity tenant."
                        }
                      ]
                    },
                    "description": "Create a user for a specific tenant (by a given tenant ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_ADMIN <b>OR</b> ROLE_USER_MANAGEMENT_CREATE <b>AND</b> has access to roles, groups, device permissions and applications\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "A user was created.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.user+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.user+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"userName\": \"<string>\",\n  \"email\": \"<email>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"nostrud_65\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"ipsum9\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"displayName\": \"<string>\",\n  \"enabled\": true,\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"newsletter\": \"<boolean>\",\n  \"password\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"sendPasswordResetEmail\": \"<boolean>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/user/:tenantId/users",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            ":tenantId",
                            "users"
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.user+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"applications\": [\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"HOSTED\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"PER_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    },\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"EXTERNAL\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"PER_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    }\n  ],\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"Utc1f\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"displayName\": \"<string>\",\n  \"email\": \"<email>\",\n  \"enabled\": true,\n  \"firstName\": \"<string>\",\n  \"groups\": {\n    \"self\": \"<uri>\",\n    \"references\": [\n      {\n        \"group\": {\n          \"name\": \"<string>\",\n          \"applications\": [\n            {\n              \"availability\": \"PRIVATE\",\n              \"contextPath\": \"<string>\",\n              \"description\": \"<string>\",\n              \"id\": \"<string>\",\n              \"key\": \"<string>\",\n              \"name\": \"<string>\",\n              \"owner\": {\n                \"self\": \"<uri>\",\n                \"tenant\": {\n                  \"id\": \"<string>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"type\": \"HOSTED\",\n              \"manifest\": {\n                \"apiVersion\": \"<string>\",\n                \"billingMode\": \"RESOURCES\",\n                \"contextPath\": \"<string>\",\n                \"extensions\": [\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  },\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  }\n                ],\n                \"isolation\": \"MULTI_TENANT\",\n                \"livenessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"provider\": {\n                  \"name\": \"<string>\"\n                },\n                \"readinessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"requestResources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"resources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"scale\": \"NONE\",\n                \"settings\": [\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  },\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  }\n                ],\n                \"settingsCategory\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"breadcrumbs\": \"<boolean>\",\n              \"contentSecurityPolicy\": \"<string>\",\n              \"dynamicOptionsUrl\": \"<string>\",\n              \"globalTitle\": \"<string>\",\n              \"legacy\": \"<boolean>\",\n              \"rightDrawer\": \"<boolean>\",\n              \"upgrade\": \"<boolean>\",\n              \"activeVersionId\": \"<string>\",\n              \"resourcesUrl\": \"<string>\"\n            },\n            {\n              \"availability\": \"PRIVATE\",\n              \"contextPath\": \"<string>\",\n              \"description\": \"<string>\",\n              \"id\": \"<string>\",\n              \"key\": \"<string>\",\n              \"name\": \"<string>\",\n              \"owner\": {\n                \"self\": \"<uri>\",\n                \"tenant\": {\n                  \"id\": \"<string>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"type\": \"EXTERNAL\",\n              \"manifest\": {\n                \"apiVersion\": \"<string>\",\n                \"billingMode\": \"RESOURCES\",\n                \"contextPath\": \"<string>\",\n                \"extensions\": [\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  },\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  }\n                ],\n                \"isolation\": \"MULTI_TENANT\",\n                \"livenessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"provider\": {\n                  \"name\": \"<string>\"\n                },\n                \"readinessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"requestResources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"resources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"scale\": \"NONE\",\n                \"settings\": [\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  },\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  }\n                ],\n                \"settingsCategory\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"breadcrumbs\": \"<boolean>\",\n              \"contentSecurityPolicy\": \"<string>\",\n              \"dynamicOptionsUrl\": \"<string>\",\n              \"globalTitle\": \"<string>\",\n              \"legacy\": \"<boolean>\",\n              \"rightDrawer\": \"<boolean>\",\n              \"upgrade\": \"<boolean>\",\n              \"activeVersionId\": \"<string>\",\n              \"resourcesUrl\": \"<string>\"\n            }\n          ],\n          \"customProperties\": {\n            \"language\": \"<string>\",\n            \"eu_23\": {\n              \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n              \"x-additionalPropertiesName\": \"customProperties\"\n            }\n          },\n          \"description\": \"<string>\",\n          \"devicePermissions\": {\n            \"eu7\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"eaf5\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"cupidatat45c\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"in042\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          \"id\": \"<integer>\",\n          \"roles\": {\n            \"self\": \"<uri>\",\n            \"references\": [\n              {\n                \"role\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"self\": \"<uri>\"\n                },\n                \"self\": \"<uri>\"\n              },\n              {\n                \"role\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"self\": \"<uri>\"\n                },\n                \"self\": \"<uri>\"\n              }\n            ],\n            \"statistics\": {\n              \"currentPage\": \"<integer>\",\n              \"pageSize\": \"<integer>\",\n              \"totalElements\": \"<integer>\",\n              \"totalPages\": \"<integer>\"\n            }\n          },\n          \"self\": \"<uri>\",\n          \"users\": {\n            \"self\": \"<uri>\",\n            \"references\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n              }\n            ]\n          }\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"group\": {\n          \"name\": \"<string>\",\n          \"applications\": [\n            {\n              \"availability\": \"PRIVATE\",\n              \"contextPath\": \"<string>\",\n              \"description\": \"<string>\",\n              \"id\": \"<string>\",\n              \"key\": \"<string>\",\n              \"name\": \"<string>\",\n              \"owner\": {\n                \"self\": \"<uri>\",\n                \"tenant\": {\n                  \"id\": \"<string>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"type\": \"EXTERNAL\",\n              \"manifest\": {\n                \"apiVersion\": \"<string>\",\n                \"billingMode\": \"RESOURCES\",\n                \"contextPath\": \"<string>\",\n                \"extensions\": [\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  },\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  }\n                ],\n                \"isolation\": \"MULTI_TENANT\",\n                \"livenessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"provider\": {\n                  \"name\": \"<string>\"\n                },\n                \"readinessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"requestResources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"resources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"scale\": \"NONE\",\n                \"settings\": [\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  },\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  }\n                ],\n                \"settingsCategory\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"breadcrumbs\": \"<boolean>\",\n              \"contentSecurityPolicy\": \"<string>\",\n              \"dynamicOptionsUrl\": \"<string>\",\n              \"globalTitle\": \"<string>\",\n              \"legacy\": \"<boolean>\",\n              \"rightDrawer\": \"<boolean>\",\n              \"upgrade\": \"<boolean>\",\n              \"activeVersionId\": \"<string>\",\n              \"resourcesUrl\": \"<string>\"\n            },\n            {\n              \"availability\": \"PRIVATE\",\n              \"contextPath\": \"<string>\",\n              \"description\": \"<string>\",\n              \"id\": \"<string>\",\n              \"key\": \"<string>\",\n              \"name\": \"<string>\",\n              \"owner\": {\n                \"self\": \"<uri>\",\n                \"tenant\": {\n                  \"id\": \"<string>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"type\": \"EXTERNAL\",\n              \"manifest\": {\n                \"apiVersion\": \"<string>\",\n                \"billingMode\": \"RESOURCES\",\n                \"contextPath\": \"<string>\",\n                \"extensions\": [\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  },\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  }\n                ],\n                \"isolation\": \"MULTI_TENANT\",\n                \"livenessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"provider\": {\n                  \"name\": \"<string>\"\n                },\n                \"readinessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"requestResources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"resources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"scale\": \"NONE\",\n                \"settings\": [\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  },\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  }\n                ],\n                \"settingsCategory\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"breadcrumbs\": \"<boolean>\",\n              \"contentSecurityPolicy\": \"<string>\",\n              \"dynamicOptionsUrl\": \"<string>\",\n              \"globalTitle\": \"<string>\",\n              \"legacy\": \"<boolean>\",\n              \"rightDrawer\": \"<boolean>\",\n              \"upgrade\": \"<boolean>\",\n              \"activeVersionId\": \"<string>\",\n              \"resourcesUrl\": \"<string>\"\n            }\n          ],\n          \"customProperties\": {\n            \"language\": \"<string>\",\n            \"nulla_3a2\": {\n              \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n              \"x-additionalPropertiesName\": \"customProperties\"\n            }\n          },\n          \"description\": \"<string>\",\n          \"devicePermissions\": {\n            \"pariatur77\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"aliquip_28\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"tempor_82\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          \"id\": \"<integer>\",\n          \"roles\": {\n            \"self\": \"<uri>\",\n            \"references\": [\n              {\n                \"role\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"self\": \"<uri>\"\n                },\n                \"self\": \"<uri>\"\n              },\n              {\n                \"role\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"self\": \"<uri>\"\n                },\n                \"self\": \"<uri>\"\n              }\n            ],\n            \"statistics\": {\n              \"currentPage\": \"<integer>\",\n              \"pageSize\": \"<integer>\",\n              \"totalElements\": \"<integer>\",\n              \"totalPages\": \"<integer>\"\n            }\n          },\n          \"self\": \"<uri>\",\n          \"users\": {\n            \"self\": \"<uri>\",\n            \"references\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n              }\n            ]\n          }\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"statistics\": {\n      \"currentPage\": \"<integer>\",\n      \"pageSize\": \"<integer>\",\n      \"totalElements\": \"<integer>\",\n      \"totalPages\": \"<integer>\"\n    }\n  },\n  \"id\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"lastPasswordChange\": \"<dateTime>\",\n  \"newsletter\": \"<boolean>\",\n  \"owner\": \"<string>\",\n  \"passwordStrength\": \"RED\",\n  \"phone\": \"<string>\",\n  \"roles\": {\n    \"self\": \"<uri>\",\n    \"references\": [\n      {\n        \"role\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"role\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"statistics\": {\n      \"currentPage\": \"<integer>\",\n      \"pageSize\": \"<integer>\",\n      \"totalElements\": \"<integer>\",\n      \"totalPages\": \"<integer>\"\n    }\n  },\n  \"self\": \"<uri>\",\n  \"shouldResetPassword\": \"<boolean>\",\n  \"twoFactorAuthenticationEnabled\": false,\n  \"userName\": \"<string>\",\n  \"devicePermissions\": {\n    \"ea468\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.user+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"userName\": \"<string>\",\n  \"email\": \"<email>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"nostrud_65\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"ipsum9\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"displayName\": \"<string>\",\n  \"enabled\": true,\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"newsletter\": \"<boolean>\",\n  \"password\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"sendPasswordResetEmail\": \"<boolean>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/user/:tenantId/users",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            ":tenantId",
                            "users"
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not enough permissions/roles to perform this operation.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.user+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"userName\": \"<string>\",\n  \"email\": \"<email>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"nostrud_65\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"ipsum9\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"displayName\": \"<string>\",\n  \"enabled\": true,\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"newsletter\": \"<boolean>\",\n  \"password\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"sendPasswordResetEmail\": \"<boolean>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/user/:tenantId/users",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            ":tenantId",
                            "users"
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Duplicate – The userName or alias already exists.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.user+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"userName\": \"<string>\",\n  \"email\": \"<email>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"nostrud_65\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"ipsum9\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"displayName\": \"<string>\",\n  \"enabled\": true,\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"newsletter\": \"<boolean>\",\n  \"password\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"sendPasswordResetEmail\": \"<boolean>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/user/:tenantId/users",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            ":tenantId",
                            "users"
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "Conflict",
                      "code": 409,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Unprocessable Entity – invalid payload.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.user+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"userName\": \"<string>\",\n  \"email\": \"<email>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"nostrud_65\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"ipsum9\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"displayName\": \"<string>\",\n  \"enabled\": true,\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"newsletter\": \"<boolean>\",\n  \"password\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"sendPasswordResetEmail\": \"<boolean>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/user/:tenantId/users",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            ":tenantId",
                            "users"
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                      "code": 422,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Retrieve all users for a specific tenant",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.usercollection+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/user/:tenantId/users?currentPage=1&groups=<string>,<string>&onlyDevices=false&owner=<string>&pageSize=5&username=<string>&withSubusersCount=false&withTotalElements=false&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        ":tenantId",
                        "users"
                      ],
                      "query": [
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "groups",
                          "value": "<string>,<string>",
                          "description": "Numeric group identifiers. The response will contain only users which belong to at least one of the specified groups.\n>**&#9432; Info:** If you query for multiple user groups at once, comma-separate the values.\n"
                        },
                        {
                          "key": "onlyDevices",
                          "value": "false",
                          "description": "If set to `true`, the response will only contain users created during bootstrap process (starting with “device_”).\nIf the flag is absent or `false` the result will not contain “device_” users.\n"
                        },
                        {
                          "key": "owner",
                          "value": "<string>",
                          "description": "Exact username of the owner of the user"
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "username",
                          "value": "<string>",
                          "description": "Prefix or full username"
                        },
                        {
                          "key": "withSubusersCount",
                          "value": "false",
                          "description": "If set to `true`, then each of returned user will contain an additional field “subusersCount”.\nIt is the number of direct subusers (users with corresponding “owner”).\n"
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantId",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of a Cumulocity tenant."
                        }
                      ]
                    },
                    "description": "Retrieve all users for a specific tenant (by a given tenant ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_READ <b>OR</b> ROLE_USER_MANAGEMENT_CREATE\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and all users are sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.usercollection+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/:tenantId/users?currentPage=1&groups=<string>,<string>&onlyDevices=false&owner=<string>&pageSize=5&username=<string>&withSubusersCount=false&withTotalElements=false&withTotalPages=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            ":tenantId",
                            "users"
                          ],
                          "query": [
                            {
                              "key": "currentPage",
                              "value": "1",
                              "description": "The current page of the paginated results."
                            },
                            {
                              "key": "groups",
                              "value": "<string>,<string>",
                              "description": "Numeric group identifiers. The response will contain only users which belong to at least one of the specified groups.\n>**&#9432; Info:** If you query for multiple user groups at once, comma-separate the values.\n"
                            },
                            {
                              "key": "onlyDevices",
                              "value": "false",
                              "description": "If set to `true`, the response will only contain users created during bootstrap process (starting with “device_”).\nIf the flag is absent or `false` the result will not contain “device_” users.\n"
                            },
                            {
                              "key": "owner",
                              "value": "<string>",
                              "description": "Exact username of the owner of the user"
                            },
                            {
                              "key": "pageSize",
                              "value": "5",
                              "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                            },
                            {
                              "key": "username",
                              "value": "<string>",
                              "description": "Prefix or full username"
                            },
                            {
                              "key": "withSubusersCount",
                              "value": "false",
                              "description": "If set to `true`, then each of returned user will contain an additional field “subusersCount”.\nIt is the number of direct subusers (users with corresponding “owner”).\n"
                            },
                            {
                              "key": "withTotalElements",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                            },
                            {
                              "key": "withTotalPages",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.usercollection+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  },\n  \"users\": [\n    {\n      \"applications\": [\n        {\n          \"availability\": \"PRIVATE\",\n          \"contextPath\": \"<string>\",\n          \"description\": \"<string>\",\n          \"id\": \"<string>\",\n          \"key\": \"<string>\",\n          \"name\": \"<string>\",\n          \"owner\": {\n            \"self\": \"<uri>\",\n            \"tenant\": {\n              \"id\": \"<string>\"\n            }\n          },\n          \"self\": \"<uri>\",\n          \"type\": \"MICROSERVICE\",\n          \"manifest\": {\n            \"apiVersion\": \"<string>\",\n            \"billingMode\": \"RESOURCES\",\n            \"contextPath\": \"<string>\",\n            \"extensions\": [\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"isolation\": \"MULTI_TENANT\",\n            \"livenessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"provider\": {\n              \"name\": \"<string>\"\n            },\n            \"readinessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"requestResources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"resources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"scale\": \"NONE\",\n            \"settings\": [\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              },\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              }\n            ],\n            \"settingsCategory\": \"<string>\",\n            \"version\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"breadcrumbs\": \"<boolean>\",\n          \"contentSecurityPolicy\": \"<string>\",\n          \"dynamicOptionsUrl\": \"<string>\",\n          \"globalTitle\": \"<string>\",\n          \"legacy\": \"<boolean>\",\n          \"rightDrawer\": \"<boolean>\",\n          \"upgrade\": \"<boolean>\",\n          \"activeVersionId\": \"<string>\",\n          \"resourcesUrl\": \"<string>\"\n        },\n        {\n          \"availability\": \"PRIVATE\",\n          \"contextPath\": \"<string>\",\n          \"description\": \"<string>\",\n          \"id\": \"<string>\",\n          \"key\": \"<string>\",\n          \"name\": \"<string>\",\n          \"owner\": {\n            \"self\": \"<uri>\",\n            \"tenant\": {\n              \"id\": \"<string>\"\n            }\n          },\n          \"self\": \"<uri>\",\n          \"type\": \"MICROSERVICE\",\n          \"manifest\": {\n            \"apiVersion\": \"<string>\",\n            \"billingMode\": \"RESOURCES\",\n            \"contextPath\": \"<string>\",\n            \"extensions\": [\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"isolation\": \"PER_TENANT\",\n            \"livenessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"provider\": {\n              \"name\": \"<string>\"\n            },\n            \"readinessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"requestResources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"resources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"scale\": \"NONE\",\n            \"settings\": [\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              },\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              }\n            ],\n            \"settingsCategory\": \"<string>\",\n            \"version\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"breadcrumbs\": \"<boolean>\",\n          \"contentSecurityPolicy\": \"<string>\",\n          \"dynamicOptionsUrl\": \"<string>\",\n          \"globalTitle\": \"<string>\",\n          \"legacy\": \"<boolean>\",\n          \"rightDrawer\": \"<boolean>\",\n          \"upgrade\": \"<boolean>\",\n          \"activeVersionId\": \"<string>\",\n          \"resourcesUrl\": \"<string>\"\n        }\n      ],\n      \"customProperties\": {\n        \"language\": \"<string>\",\n        \"tempor_\": {\n          \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n          \"x-additionalPropertiesName\": \"customProperties\"\n        },\n        \"adipisicing472\": {\n          \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n          \"x-additionalPropertiesName\": \"customProperties\"\n        },\n        \"minim_632\": {\n          \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n          \"x-additionalPropertiesName\": \"customProperties\"\n        },\n        \"tempor_259\": {\n          \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n          \"x-additionalPropertiesName\": \"customProperties\"\n        }\n      },\n      \"displayName\": \"<string>\",\n      \"email\": \"<email>\",\n      \"enabled\": true,\n      \"firstName\": \"<string>\",\n      \"groups\": {\n        \"self\": \"<uri>\",\n        \"references\": [\n          {\n            \"group\": {\n              \"name\": \"<string>\",\n              \"applications\": [\n                {\n                  \"availability\": \"PRIVATE\",\n                  \"contextPath\": \"<string>\",\n                  \"description\": \"<string>\",\n                  \"id\": \"<string>\",\n                  \"key\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"owner\": {\n                    \"self\": \"<uri>\",\n                    \"tenant\": {\n                      \"id\": \"<string>\"\n                    }\n                  },\n                  \"self\": \"<uri>\",\n                  \"type\": \"HOSTED\",\n                  \"manifest\": {\n                    \"apiVersion\": \"<string>\",\n                    \"billingMode\": \"RESOURCES\",\n                    \"contextPath\": \"<string>\",\n                    \"extensions\": [\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      },\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      }\n                    ],\n                    \"isolation\": \"MULTI_TENANT\",\n                    \"livenessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"provider\": {\n                      \"name\": \"<string>\"\n                    },\n                    \"readinessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"requestResources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"resources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"roles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"requiredRoles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"scale\": \"NONE\",\n                    \"settings\": [\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      },\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      }\n                    ],\n                    \"settingsCategory\": \"<string>\",\n                    \"version\": \"<string>\"\n                  },\n                  \"roles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"requiredRoles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"breadcrumbs\": \"<boolean>\",\n                  \"contentSecurityPolicy\": \"<string>\",\n                  \"dynamicOptionsUrl\": \"<string>\",\n                  \"globalTitle\": \"<string>\",\n                  \"legacy\": \"<boolean>\",\n                  \"rightDrawer\": \"<boolean>\",\n                  \"upgrade\": \"<boolean>\",\n                  \"activeVersionId\": \"<string>\",\n                  \"resourcesUrl\": \"<string>\"\n                },\n                {\n                  \"availability\": \"PRIVATE\",\n                  \"contextPath\": \"<string>\",\n                  \"description\": \"<string>\",\n                  \"id\": \"<string>\",\n                  \"key\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"owner\": {\n                    \"self\": \"<uri>\",\n                    \"tenant\": {\n                      \"id\": \"<string>\"\n                    }\n                  },\n                  \"self\": \"<uri>\",\n                  \"type\": \"MICROSERVICE\",\n                  \"manifest\": {\n                    \"apiVersion\": \"<string>\",\n                    \"billingMode\": \"RESOURCES\",\n                    \"contextPath\": \"<string>\",\n                    \"extensions\": [\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      },\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      }\n                    ],\n                    \"isolation\": \"PER_TENANT\",\n                    \"livenessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"provider\": {\n                      \"name\": \"<string>\"\n                    },\n                    \"readinessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"requestResources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"resources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"roles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"requiredRoles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"scale\": \"NONE\",\n                    \"settings\": [\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      },\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      }\n                    ],\n                    \"settingsCategory\": \"<string>\",\n                    \"version\": \"<string>\"\n                  },\n                  \"roles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"requiredRoles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"breadcrumbs\": \"<boolean>\",\n                  \"contentSecurityPolicy\": \"<string>\",\n                  \"dynamicOptionsUrl\": \"<string>\",\n                  \"globalTitle\": \"<string>\",\n                  \"legacy\": \"<boolean>\",\n                  \"rightDrawer\": \"<boolean>\",\n                  \"upgrade\": \"<boolean>\",\n                  \"activeVersionId\": \"<string>\",\n                  \"resourcesUrl\": \"<string>\"\n                }\n              ],\n              \"customProperties\": {\n                \"language\": \"<string>\"\n              },\n              \"description\": \"<string>\",\n              \"devicePermissions\": {\n                \"dolore_7\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"consectetur1b\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              },\n              \"id\": \"<integer>\",\n              \"roles\": {\n                \"self\": \"<uri>\",\n                \"references\": [\n                  {\n                    \"role\": {\n                      \"id\": \"<string>\",\n                      \"name\": \"<string>\",\n                      \"self\": \"<uri>\"\n                    },\n                    \"self\": \"<uri>\"\n                  },\n                  {\n                    \"role\": {\n                      \"id\": \"<string>\",\n                      \"name\": \"<string>\",\n                      \"self\": \"<uri>\"\n                    },\n                    \"self\": \"<uri>\"\n                  }\n                ],\n                \"statistics\": {\n                  \"currentPage\": \"<integer>\",\n                  \"pageSize\": \"<integer>\",\n                  \"totalElements\": \"<integer>\",\n                  \"totalPages\": \"<integer>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"users\": {\n                \"self\": \"<uri>\",\n                \"references\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                  }\n                ]\n              }\n            },\n            \"self\": \"<uri>\"\n          },\n          {\n            \"group\": {\n              \"name\": \"<string>\",\n              \"applications\": [\n                {\n                  \"availability\": \"PRIVATE\",\n                  \"contextPath\": \"<string>\",\n                  \"description\": \"<string>\",\n                  \"id\": \"<string>\",\n                  \"key\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"owner\": {\n                    \"self\": \"<uri>\",\n                    \"tenant\": {\n                      \"id\": \"<string>\"\n                    }\n                  },\n                  \"self\": \"<uri>\",\n                  \"type\": \"MICROSERVICE\",\n                  \"manifest\": {\n                    \"apiVersion\": \"<string>\",\n                    \"billingMode\": \"RESOURCES\",\n                    \"contextPath\": \"<string>\",\n                    \"extensions\": [\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      },\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      }\n                    ],\n                    \"isolation\": \"PER_TENANT\",\n                    \"livenessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"provider\": {\n                      \"name\": \"<string>\"\n                    },\n                    \"readinessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"requestResources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"resources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"roles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"requiredRoles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"scale\": \"NONE\",\n                    \"settings\": [\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      },\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      }\n                    ],\n                    \"settingsCategory\": \"<string>\",\n                    \"version\": \"<string>\"\n                  },\n                  \"roles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"requiredRoles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"breadcrumbs\": \"<boolean>\",\n                  \"contentSecurityPolicy\": \"<string>\",\n                  \"dynamicOptionsUrl\": \"<string>\",\n                  \"globalTitle\": \"<string>\",\n                  \"legacy\": \"<boolean>\",\n                  \"rightDrawer\": \"<boolean>\",\n                  \"upgrade\": \"<boolean>\",\n                  \"activeVersionId\": \"<string>\",\n                  \"resourcesUrl\": \"<string>\"\n                },\n                {\n                  \"availability\": \"PRIVATE\",\n                  \"contextPath\": \"<string>\",\n                  \"description\": \"<string>\",\n                  \"id\": \"<string>\",\n                  \"key\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"owner\": {\n                    \"self\": \"<uri>\",\n                    \"tenant\": {\n                      \"id\": \"<string>\"\n                    }\n                  },\n                  \"self\": \"<uri>\",\n                  \"type\": \"MICROSERVICE\",\n                  \"manifest\": {\n                    \"apiVersion\": \"<string>\",\n                    \"billingMode\": \"RESOURCES\",\n                    \"contextPath\": \"<string>\",\n                    \"extensions\": [\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      },\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      }\n                    ],\n                    \"isolation\": \"PER_TENANT\",\n                    \"livenessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"provider\": {\n                      \"name\": \"<string>\"\n                    },\n                    \"readinessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"requestResources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"resources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"roles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"requiredRoles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"scale\": \"NONE\",\n                    \"settings\": [\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      },\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      }\n                    ],\n                    \"settingsCategory\": \"<string>\",\n                    \"version\": \"<string>\"\n                  },\n                  \"roles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"requiredRoles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"breadcrumbs\": \"<boolean>\",\n                  \"contentSecurityPolicy\": \"<string>\",\n                  \"dynamicOptionsUrl\": \"<string>\",\n                  \"globalTitle\": \"<string>\",\n                  \"legacy\": \"<boolean>\",\n                  \"rightDrawer\": \"<boolean>\",\n                  \"upgrade\": \"<boolean>\",\n                  \"activeVersionId\": \"<string>\",\n                  \"resourcesUrl\": \"<string>\"\n                }\n              ],\n              \"customProperties\": {\n                \"language\": \"<string>\",\n                \"deserunt8\": {\n                  \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n                  \"x-additionalPropertiesName\": \"customProperties\"\n                },\n                \"do5\": {\n                  \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n                  \"x-additionalPropertiesName\": \"customProperties\"\n                },\n                \"ut1a\": {\n                  \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n                  \"x-additionalPropertiesName\": \"customProperties\"\n                },\n                \"Ut6\": {\n                  \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n                  \"x-additionalPropertiesName\": \"customProperties\"\n                },\n                \"exc\": {\n                  \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n                  \"x-additionalPropertiesName\": \"customProperties\"\n                }\n              },\n              \"description\": \"<string>\",\n              \"devicePermissions\": {\n                \"ex_4\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              },\n              \"id\": \"<integer>\",\n              \"roles\": {\n                \"self\": \"<uri>\",\n                \"references\": [\n                  {\n                    \"role\": {\n                      \"id\": \"<string>\",\n                      \"name\": \"<string>\",\n                      \"self\": \"<uri>\"\n                    },\n                    \"self\": \"<uri>\"\n                  },\n                  {\n                    \"role\": {\n                      \"id\": \"<string>\",\n                      \"name\": \"<string>\",\n                      \"self\": \"<uri>\"\n                    },\n                    \"self\": \"<uri>\"\n                  }\n                ],\n                \"statistics\": {\n                  \"currentPage\": \"<integer>\",\n                  \"pageSize\": \"<integer>\",\n                  \"totalElements\": \"<integer>\",\n                  \"totalPages\": \"<integer>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"users\": {\n                \"self\": \"<uri>\",\n                \"references\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                  }\n                ]\n              }\n            },\n            \"self\": \"<uri>\"\n          }\n        ],\n        \"statistics\": {\n          \"currentPage\": \"<integer>\",\n          \"pageSize\": \"<integer>\",\n          \"totalElements\": \"<integer>\",\n          \"totalPages\": \"<integer>\"\n        }\n      },\n      \"id\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"lastPasswordChange\": \"<dateTime>\",\n      \"newsletter\": \"<boolean>\",\n      \"owner\": \"<string>\",\n      \"passwordStrength\": \"RED\",\n      \"phone\": \"<string>\",\n      \"roles\": {\n        \"self\": \"<uri>\",\n        \"references\": [\n          {\n            \"role\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          },\n          {\n            \"role\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          }\n        ],\n        \"statistics\": {\n          \"currentPage\": \"<integer>\",\n          \"pageSize\": \"<integer>\",\n          \"totalElements\": \"<integer>\",\n          \"totalPages\": \"<integer>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"shouldResetPassword\": \"<boolean>\",\n      \"twoFactorAuthenticationEnabled\": false,\n      \"userName\": \"<string>\",\n      \"devicePermissions\": {\n        \"anim_f\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"deserunt_afb\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"nostrud_74d\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"applications\": [\n        {\n          \"availability\": \"PRIVATE\",\n          \"contextPath\": \"<string>\",\n          \"description\": \"<string>\",\n          \"id\": \"<string>\",\n          \"key\": \"<string>\",\n          \"name\": \"<string>\",\n          \"owner\": {\n            \"self\": \"<uri>\",\n            \"tenant\": {\n              \"id\": \"<string>\"\n            }\n          },\n          \"self\": \"<uri>\",\n          \"type\": \"EXTERNAL\",\n          \"manifest\": {\n            \"apiVersion\": \"<string>\",\n            \"billingMode\": \"RESOURCES\",\n            \"contextPath\": \"<string>\",\n            \"extensions\": [\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"isolation\": \"PER_TENANT\",\n            \"livenessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"provider\": {\n              \"name\": \"<string>\"\n            },\n            \"readinessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"requestResources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"resources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"scale\": \"NONE\",\n            \"settings\": [\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              },\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              }\n            ],\n            \"settingsCategory\": \"<string>\",\n            \"version\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"breadcrumbs\": \"<boolean>\",\n          \"contentSecurityPolicy\": \"<string>\",\n          \"dynamicOptionsUrl\": \"<string>\",\n          \"globalTitle\": \"<string>\",\n          \"legacy\": \"<boolean>\",\n          \"rightDrawer\": \"<boolean>\",\n          \"upgrade\": \"<boolean>\",\n          \"activeVersionId\": \"<string>\",\n          \"resourcesUrl\": \"<string>\"\n        },\n        {\n          \"availability\": \"PRIVATE\",\n          \"contextPath\": \"<string>\",\n          \"description\": \"<string>\",\n          \"id\": \"<string>\",\n          \"key\": \"<string>\",\n          \"name\": \"<string>\",\n          \"owner\": {\n            \"self\": \"<uri>\",\n            \"tenant\": {\n              \"id\": \"<string>\"\n            }\n          },\n          \"self\": \"<uri>\",\n          \"type\": \"MICROSERVICE\",\n          \"manifest\": {\n            \"apiVersion\": \"<string>\",\n            \"billingMode\": \"RESOURCES\",\n            \"contextPath\": \"<string>\",\n            \"extensions\": [\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"isolation\": \"MULTI_TENANT\",\n            \"livenessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"provider\": {\n              \"name\": \"<string>\"\n            },\n            \"readinessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"requestResources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"resources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"scale\": \"NONE\",\n            \"settings\": [\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              },\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              }\n            ],\n            \"settingsCategory\": \"<string>\",\n            \"version\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"breadcrumbs\": \"<boolean>\",\n          \"contentSecurityPolicy\": \"<string>\",\n          \"dynamicOptionsUrl\": \"<string>\",\n          \"globalTitle\": \"<string>\",\n          \"legacy\": \"<boolean>\",\n          \"rightDrawer\": \"<boolean>\",\n          \"upgrade\": \"<boolean>\",\n          \"activeVersionId\": \"<string>\",\n          \"resourcesUrl\": \"<string>\"\n        }\n      ],\n      \"customProperties\": {\n        \"language\": \"<string>\",\n        \"voluptate_2_\": {\n          \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n          \"x-additionalPropertiesName\": \"customProperties\"\n        },\n        \"sit9\": {\n          \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n          \"x-additionalPropertiesName\": \"customProperties\"\n        },\n        \"deserunt1c4\": {\n          \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n          \"x-additionalPropertiesName\": \"customProperties\"\n        }\n      },\n      \"displayName\": \"<string>\",\n      \"email\": \"<email>\",\n      \"enabled\": true,\n      \"firstName\": \"<string>\",\n      \"groups\": {\n        \"self\": \"<uri>\",\n        \"references\": [\n          {\n            \"group\": {\n              \"name\": \"<string>\",\n              \"applications\": [\n                {\n                  \"availability\": \"PRIVATE\",\n                  \"contextPath\": \"<string>\",\n                  \"description\": \"<string>\",\n                  \"id\": \"<string>\",\n                  \"key\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"owner\": {\n                    \"self\": \"<uri>\",\n                    \"tenant\": {\n                      \"id\": \"<string>\"\n                    }\n                  },\n                  \"self\": \"<uri>\",\n                  \"type\": \"EXTERNAL\",\n                  \"manifest\": {\n                    \"apiVersion\": \"<string>\",\n                    \"billingMode\": \"RESOURCES\",\n                    \"contextPath\": \"<string>\",\n                    \"extensions\": [\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      },\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      }\n                    ],\n                    \"isolation\": \"PER_TENANT\",\n                    \"livenessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"provider\": {\n                      \"name\": \"<string>\"\n                    },\n                    \"readinessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"requestResources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"resources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"roles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"requiredRoles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"scale\": \"NONE\",\n                    \"settings\": [\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      },\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      }\n                    ],\n                    \"settingsCategory\": \"<string>\",\n                    \"version\": \"<string>\"\n                  },\n                  \"roles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"requiredRoles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"breadcrumbs\": \"<boolean>\",\n                  \"contentSecurityPolicy\": \"<string>\",\n                  \"dynamicOptionsUrl\": \"<string>\",\n                  \"globalTitle\": \"<string>\",\n                  \"legacy\": \"<boolean>\",\n                  \"rightDrawer\": \"<boolean>\",\n                  \"upgrade\": \"<boolean>\",\n                  \"activeVersionId\": \"<string>\",\n                  \"resourcesUrl\": \"<string>\"\n                },\n                {\n                  \"availability\": \"PRIVATE\",\n                  \"contextPath\": \"<string>\",\n                  \"description\": \"<string>\",\n                  \"id\": \"<string>\",\n                  \"key\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"owner\": {\n                    \"self\": \"<uri>\",\n                    \"tenant\": {\n                      \"id\": \"<string>\"\n                    }\n                  },\n                  \"self\": \"<uri>\",\n                  \"type\": \"EXTERNAL\",\n                  \"manifest\": {\n                    \"apiVersion\": \"<string>\",\n                    \"billingMode\": \"RESOURCES\",\n                    \"contextPath\": \"<string>\",\n                    \"extensions\": [\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      },\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      }\n                    ],\n                    \"isolation\": \"MULTI_TENANT\",\n                    \"livenessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"provider\": {\n                      \"name\": \"<string>\"\n                    },\n                    \"readinessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"requestResources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"resources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"roles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"requiredRoles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"scale\": \"NONE\",\n                    \"settings\": [\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      },\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      }\n                    ],\n                    \"settingsCategory\": \"<string>\",\n                    \"version\": \"<string>\"\n                  },\n                  \"roles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"requiredRoles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"breadcrumbs\": \"<boolean>\",\n                  \"contentSecurityPolicy\": \"<string>\",\n                  \"dynamicOptionsUrl\": \"<string>\",\n                  \"globalTitle\": \"<string>\",\n                  \"legacy\": \"<boolean>\",\n                  \"rightDrawer\": \"<boolean>\",\n                  \"upgrade\": \"<boolean>\",\n                  \"activeVersionId\": \"<string>\",\n                  \"resourcesUrl\": \"<string>\"\n                }\n              ],\n              \"customProperties\": {\n                \"language\": \"<string>\",\n                \"fugiatd\": {\n                  \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n                  \"x-additionalPropertiesName\": \"customProperties\"\n                }\n              },\n              \"description\": \"<string>\",\n              \"devicePermissions\": {\n                \"sed_726\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"anim94\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"eu_b17\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"exercitation12\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              },\n              \"id\": \"<integer>\",\n              \"roles\": {\n                \"self\": \"<uri>\",\n                \"references\": [\n                  {\n                    \"role\": {\n                      \"id\": \"<string>\",\n                      \"name\": \"<string>\",\n                      \"self\": \"<uri>\"\n                    },\n                    \"self\": \"<uri>\"\n                  },\n                  {\n                    \"role\": {\n                      \"id\": \"<string>\",\n                      \"name\": \"<string>\",\n                      \"self\": \"<uri>\"\n                    },\n                    \"self\": \"<uri>\"\n                  }\n                ],\n                \"statistics\": {\n                  \"currentPage\": \"<integer>\",\n                  \"pageSize\": \"<integer>\",\n                  \"totalElements\": \"<integer>\",\n                  \"totalPages\": \"<integer>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"users\": {\n                \"self\": \"<uri>\",\n                \"references\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                  }\n                ]\n              }\n            },\n            \"self\": \"<uri>\"\n          },\n          {\n            \"group\": {\n              \"name\": \"<string>\",\n              \"applications\": [\n                {\n                  \"availability\": \"PRIVATE\",\n                  \"contextPath\": \"<string>\",\n                  \"description\": \"<string>\",\n                  \"id\": \"<string>\",\n                  \"key\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"owner\": {\n                    \"self\": \"<uri>\",\n                    \"tenant\": {\n                      \"id\": \"<string>\"\n                    }\n                  },\n                  \"self\": \"<uri>\",\n                  \"type\": \"HOSTED\",\n                  \"manifest\": {\n                    \"apiVersion\": \"<string>\",\n                    \"billingMode\": \"RESOURCES\",\n                    \"contextPath\": \"<string>\",\n                    \"extensions\": [\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      },\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      }\n                    ],\n                    \"isolation\": \"MULTI_TENANT\",\n                    \"livenessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"provider\": {\n                      \"name\": \"<string>\"\n                    },\n                    \"readinessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"requestResources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"resources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"roles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"requiredRoles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"scale\": \"NONE\",\n                    \"settings\": [\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      },\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      }\n                    ],\n                    \"settingsCategory\": \"<string>\",\n                    \"version\": \"<string>\"\n                  },\n                  \"roles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"requiredRoles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"breadcrumbs\": \"<boolean>\",\n                  \"contentSecurityPolicy\": \"<string>\",\n                  \"dynamicOptionsUrl\": \"<string>\",\n                  \"globalTitle\": \"<string>\",\n                  \"legacy\": \"<boolean>\",\n                  \"rightDrawer\": \"<boolean>\",\n                  \"upgrade\": \"<boolean>\",\n                  \"activeVersionId\": \"<string>\",\n                  \"resourcesUrl\": \"<string>\"\n                },\n                {\n                  \"availability\": \"PRIVATE\",\n                  \"contextPath\": \"<string>\",\n                  \"description\": \"<string>\",\n                  \"id\": \"<string>\",\n                  \"key\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"owner\": {\n                    \"self\": \"<uri>\",\n                    \"tenant\": {\n                      \"id\": \"<string>\"\n                    }\n                  },\n                  \"self\": \"<uri>\",\n                  \"type\": \"MICROSERVICE\",\n                  \"manifest\": {\n                    \"apiVersion\": \"<string>\",\n                    \"billingMode\": \"RESOURCES\",\n                    \"contextPath\": \"<string>\",\n                    \"extensions\": [\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      },\n                      {\n                        \"path\": \"<string>\",\n                        \"type\": \"<string>\"\n                      }\n                    ],\n                    \"isolation\": \"PER_TENANT\",\n                    \"livenessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"provider\": {\n                      \"name\": \"<string>\"\n                    },\n                    \"readinessProbe\": {\n                      \"failureThreshold\": \"<integer>\",\n                      \"periodSeconds\": \"<integer>\",\n                      \"timeoutSeconds\": \"<integer>\",\n                      \"successThreshold\": \"<integer>\",\n                      \"initialDelaySeconds\": \"<integer>\",\n                      \"httpGet\": {\n                        \"path\": \"<string>\",\n                        \"port\": \"<integer>\"\n                      }\n                    },\n                    \"requestResources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"resources\": {\n                      \"cpu\": \"<string>\",\n                      \"memory\": \"<string>\"\n                    },\n                    \"roles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"requiredRoles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"scale\": \"NONE\",\n                    \"settings\": [\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      },\n                      {\n                        \"key\": \"<string>\",\n                        \"valueSchema\": {\n                          \"type\": \"<string>\"\n                        },\n                        \"defaultValue\": \"<string>\",\n                        \"editable\": \"<boolean>\",\n                        \"inheritFromOwner\": \"<boolean>\"\n                      }\n                    ],\n                    \"settingsCategory\": \"<string>\",\n                    \"version\": \"<string>\"\n                  },\n                  \"roles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"requiredRoles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"breadcrumbs\": \"<boolean>\",\n                  \"contentSecurityPolicy\": \"<string>\",\n                  \"dynamicOptionsUrl\": \"<string>\",\n                  \"globalTitle\": \"<string>\",\n                  \"legacy\": \"<boolean>\",\n                  \"rightDrawer\": \"<boolean>\",\n                  \"upgrade\": \"<boolean>\",\n                  \"activeVersionId\": \"<string>\",\n                  \"resourcesUrl\": \"<string>\"\n                }\n              ],\n              \"customProperties\": {\n                \"language\": \"<string>\",\n                \"irure_0\": {\n                  \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n                  \"x-additionalPropertiesName\": \"customProperties\"\n                },\n                \"dolore_5\": {\n                  \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n                  \"x-additionalPropertiesName\": \"customProperties\"\n                }\n              },\n              \"description\": \"<string>\",\n              \"devicePermissions\": {\n                \"Excepteur1_\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"ullamco33b\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              },\n              \"id\": \"<integer>\",\n              \"roles\": {\n                \"self\": \"<uri>\",\n                \"references\": [\n                  {\n                    \"role\": {\n                      \"id\": \"<string>\",\n                      \"name\": \"<string>\",\n                      \"self\": \"<uri>\"\n                    },\n                    \"self\": \"<uri>\"\n                  },\n                  {\n                    \"role\": {\n                      \"id\": \"<string>\",\n                      \"name\": \"<string>\",\n                      \"self\": \"<uri>\"\n                    },\n                    \"self\": \"<uri>\"\n                  }\n                ],\n                \"statistics\": {\n                  \"currentPage\": \"<integer>\",\n                  \"pageSize\": \"<integer>\",\n                  \"totalElements\": \"<integer>\",\n                  \"totalPages\": \"<integer>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"users\": {\n                \"self\": \"<uri>\",\n                \"references\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                  }\n                ]\n              }\n            },\n            \"self\": \"<uri>\"\n          }\n        ],\n        \"statistics\": {\n          \"currentPage\": \"<integer>\",\n          \"pageSize\": \"<integer>\",\n          \"totalElements\": \"<integer>\",\n          \"totalPages\": \"<integer>\"\n        }\n      },\n      \"id\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"lastPasswordChange\": \"<dateTime>\",\n      \"newsletter\": \"<boolean>\",\n      \"owner\": \"<string>\",\n      \"passwordStrength\": \"GREEN\",\n      \"phone\": \"<string>\",\n      \"roles\": {\n        \"self\": \"<uri>\",\n        \"references\": [\n          {\n            \"role\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          },\n          {\n            \"role\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          }\n        ],\n        \"statistics\": {\n          \"currentPage\": \"<integer>\",\n          \"pageSize\": \"<integer>\",\n          \"totalElements\": \"<integer>\",\n          \"totalPages\": \"<integer>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"shouldResetPassword\": \"<boolean>\",\n      \"twoFactorAuthenticationEnabled\": false,\n      \"userName\": \"<string>\",\n      \"devicePermissions\": {\n        \"ex1\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ]\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/:tenantId/users?currentPage=1&groups=<string>,<string>&onlyDevices=false&owner=<string>&pageSize=5&username=<string>&withSubusersCount=false&withTotalElements=false&withTotalPages=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            ":tenantId",
                            "users"
                          ],
                          "query": [
                            {
                              "key": "currentPage",
                              "value": "1",
                              "description": "The current page of the paginated results."
                            },
                            {
                              "key": "groups",
                              "value": "<string>,<string>",
                              "description": "Numeric group identifiers. The response will contain only users which belong to at least one of the specified groups.\n>**&#9432; Info:** If you query for multiple user groups at once, comma-separate the values.\n"
                            },
                            {
                              "key": "onlyDevices",
                              "value": "false",
                              "description": "If set to `true`, the response will only contain users created during bootstrap process (starting with “device_”).\nIf the flag is absent or `false` the result will not contain “device_” users.\n"
                            },
                            {
                              "key": "owner",
                              "value": "<string>",
                              "description": "Exact username of the owner of the user"
                            },
                            {
                              "key": "pageSize",
                              "value": "5",
                              "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                            },
                            {
                              "key": "username",
                              "value": "<string>",
                              "description": "Prefix or full username"
                            },
                            {
                              "key": "withSubusersCount",
                              "value": "false",
                              "description": "If set to `true`, then each of returned user will contain an additional field “subusersCount”.\nIt is the number of direct subusers (users with corresponding “owner”).\n"
                            },
                            {
                              "key": "withTotalElements",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                            },
                            {
                              "key": "withTotalPages",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not enough permissions/roles to perform this operation.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/:tenantId/users?currentPage=1&groups=<string>,<string>&onlyDevices=false&owner=<string>&pageSize=5&username=<string>&withSubusersCount=false&withTotalElements=false&withTotalPages=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            ":tenantId",
                            "users"
                          ],
                          "query": [
                            {
                              "key": "currentPage",
                              "value": "1",
                              "description": "The current page of the paginated results."
                            },
                            {
                              "key": "groups",
                              "value": "<string>,<string>",
                              "description": "Numeric group identifiers. The response will contain only users which belong to at least one of the specified groups.\n>**&#9432; Info:** If you query for multiple user groups at once, comma-separate the values.\n"
                            },
                            {
                              "key": "onlyDevices",
                              "value": "false",
                              "description": "If set to `true`, the response will only contain users created during bootstrap process (starting with “device_”).\nIf the flag is absent or `false` the result will not contain “device_” users.\n"
                            },
                            {
                              "key": "owner",
                              "value": "<string>",
                              "description": "Exact username of the owner of the user"
                            },
                            {
                              "key": "pageSize",
                              "value": "5",
                              "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                            },
                            {
                              "key": "username",
                              "value": "<string>",
                              "description": "Prefix or full username"
                            },
                            {
                              "key": "withSubusersCount",
                              "value": "false",
                              "description": "If set to `true`, then each of returned user will contain an additional field “subusersCount”.\nIt is the number of direct subusers (users with corresponding “owner”).\n"
                            },
                            {
                              "key": "withTotalElements",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                            },
                            {
                              "key": "withTotalPages",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "userByName",
              "item": [
                {
                  "name": "{username}",
                  "item": [
                    {
                      "name": "Retrieve a user by username in a specific tenant",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.user+json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/:tenantId/userByName/:username",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            ":tenantId",
                            "userByName",
                            ":username"
                          ],
                          "variable": [
                            {
                              "key": "tenantId",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of a Cumulocity tenant."
                            },
                            {
                              "key": "username",
                              "value": "<string>",
                              "description": "(Required) The username of the a user."
                            }
                          ]
                        },
                        "description": "Retrieve a user by username in a specific tenant (by a given tenant ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_ADMIN <b>OR</b> ROLE_USER_MANAGEMENT_CREATE <b>AND</b> is parent of the user\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The request has succeeded and the user is sent in the response.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.user+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/userByName/:username",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "userByName",
                                ":username"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "username"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.user+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"applications\": [\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"HOSTED\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"PER_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    },\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"EXTERNAL\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"PER_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    }\n  ],\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"Utc1f\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"displayName\": \"<string>\",\n  \"email\": \"<email>\",\n  \"enabled\": true,\n  \"firstName\": \"<string>\",\n  \"groups\": {\n    \"self\": \"<uri>\",\n    \"references\": [\n      {\n        \"group\": {\n          \"name\": \"<string>\",\n          \"applications\": [\n            {\n              \"availability\": \"PRIVATE\",\n              \"contextPath\": \"<string>\",\n              \"description\": \"<string>\",\n              \"id\": \"<string>\",\n              \"key\": \"<string>\",\n              \"name\": \"<string>\",\n              \"owner\": {\n                \"self\": \"<uri>\",\n                \"tenant\": {\n                  \"id\": \"<string>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"type\": \"HOSTED\",\n              \"manifest\": {\n                \"apiVersion\": \"<string>\",\n                \"billingMode\": \"RESOURCES\",\n                \"contextPath\": \"<string>\",\n                \"extensions\": [\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  },\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  }\n                ],\n                \"isolation\": \"MULTI_TENANT\",\n                \"livenessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"provider\": {\n                  \"name\": \"<string>\"\n                },\n                \"readinessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"requestResources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"resources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"scale\": \"NONE\",\n                \"settings\": [\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  },\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  }\n                ],\n                \"settingsCategory\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"breadcrumbs\": \"<boolean>\",\n              \"contentSecurityPolicy\": \"<string>\",\n              \"dynamicOptionsUrl\": \"<string>\",\n              \"globalTitle\": \"<string>\",\n              \"legacy\": \"<boolean>\",\n              \"rightDrawer\": \"<boolean>\",\n              \"upgrade\": \"<boolean>\",\n              \"activeVersionId\": \"<string>\",\n              \"resourcesUrl\": \"<string>\"\n            },\n            {\n              \"availability\": \"PRIVATE\",\n              \"contextPath\": \"<string>\",\n              \"description\": \"<string>\",\n              \"id\": \"<string>\",\n              \"key\": \"<string>\",\n              \"name\": \"<string>\",\n              \"owner\": {\n                \"self\": \"<uri>\",\n                \"tenant\": {\n                  \"id\": \"<string>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"type\": \"EXTERNAL\",\n              \"manifest\": {\n                \"apiVersion\": \"<string>\",\n                \"billingMode\": \"RESOURCES\",\n                \"contextPath\": \"<string>\",\n                \"extensions\": [\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  },\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  }\n                ],\n                \"isolation\": \"MULTI_TENANT\",\n                \"livenessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"provider\": {\n                  \"name\": \"<string>\"\n                },\n                \"readinessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"requestResources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"resources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"scale\": \"NONE\",\n                \"settings\": [\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  },\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  }\n                ],\n                \"settingsCategory\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"breadcrumbs\": \"<boolean>\",\n              \"contentSecurityPolicy\": \"<string>\",\n              \"dynamicOptionsUrl\": \"<string>\",\n              \"globalTitle\": \"<string>\",\n              \"legacy\": \"<boolean>\",\n              \"rightDrawer\": \"<boolean>\",\n              \"upgrade\": \"<boolean>\",\n              \"activeVersionId\": \"<string>\",\n              \"resourcesUrl\": \"<string>\"\n            }\n          ],\n          \"customProperties\": {\n            \"language\": \"<string>\",\n            \"eu_23\": {\n              \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n              \"x-additionalPropertiesName\": \"customProperties\"\n            }\n          },\n          \"description\": \"<string>\",\n          \"devicePermissions\": {\n            \"eu7\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"eaf5\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"cupidatat45c\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"in042\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          \"id\": \"<integer>\",\n          \"roles\": {\n            \"self\": \"<uri>\",\n            \"references\": [\n              {\n                \"role\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"self\": \"<uri>\"\n                },\n                \"self\": \"<uri>\"\n              },\n              {\n                \"role\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"self\": \"<uri>\"\n                },\n                \"self\": \"<uri>\"\n              }\n            ],\n            \"statistics\": {\n              \"currentPage\": \"<integer>\",\n              \"pageSize\": \"<integer>\",\n              \"totalElements\": \"<integer>\",\n              \"totalPages\": \"<integer>\"\n            }\n          },\n          \"self\": \"<uri>\",\n          \"users\": {\n            \"self\": \"<uri>\",\n            \"references\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n              }\n            ]\n          }\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"group\": {\n          \"name\": \"<string>\",\n          \"applications\": [\n            {\n              \"availability\": \"PRIVATE\",\n              \"contextPath\": \"<string>\",\n              \"description\": \"<string>\",\n              \"id\": \"<string>\",\n              \"key\": \"<string>\",\n              \"name\": \"<string>\",\n              \"owner\": {\n                \"self\": \"<uri>\",\n                \"tenant\": {\n                  \"id\": \"<string>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"type\": \"EXTERNAL\",\n              \"manifest\": {\n                \"apiVersion\": \"<string>\",\n                \"billingMode\": \"RESOURCES\",\n                \"contextPath\": \"<string>\",\n                \"extensions\": [\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  },\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  }\n                ],\n                \"isolation\": \"MULTI_TENANT\",\n                \"livenessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"provider\": {\n                  \"name\": \"<string>\"\n                },\n                \"readinessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"requestResources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"resources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"scale\": \"NONE\",\n                \"settings\": [\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  },\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  }\n                ],\n                \"settingsCategory\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"breadcrumbs\": \"<boolean>\",\n              \"contentSecurityPolicy\": \"<string>\",\n              \"dynamicOptionsUrl\": \"<string>\",\n              \"globalTitle\": \"<string>\",\n              \"legacy\": \"<boolean>\",\n              \"rightDrawer\": \"<boolean>\",\n              \"upgrade\": \"<boolean>\",\n              \"activeVersionId\": \"<string>\",\n              \"resourcesUrl\": \"<string>\"\n            },\n            {\n              \"availability\": \"PRIVATE\",\n              \"contextPath\": \"<string>\",\n              \"description\": \"<string>\",\n              \"id\": \"<string>\",\n              \"key\": \"<string>\",\n              \"name\": \"<string>\",\n              \"owner\": {\n                \"self\": \"<uri>\",\n                \"tenant\": {\n                  \"id\": \"<string>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"type\": \"EXTERNAL\",\n              \"manifest\": {\n                \"apiVersion\": \"<string>\",\n                \"billingMode\": \"RESOURCES\",\n                \"contextPath\": \"<string>\",\n                \"extensions\": [\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  },\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  }\n                ],\n                \"isolation\": \"MULTI_TENANT\",\n                \"livenessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"provider\": {\n                  \"name\": \"<string>\"\n                },\n                \"readinessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"requestResources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"resources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"scale\": \"NONE\",\n                \"settings\": [\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  },\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  }\n                ],\n                \"settingsCategory\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"breadcrumbs\": \"<boolean>\",\n              \"contentSecurityPolicy\": \"<string>\",\n              \"dynamicOptionsUrl\": \"<string>\",\n              \"globalTitle\": \"<string>\",\n              \"legacy\": \"<boolean>\",\n              \"rightDrawer\": \"<boolean>\",\n              \"upgrade\": \"<boolean>\",\n              \"activeVersionId\": \"<string>\",\n              \"resourcesUrl\": \"<string>\"\n            }\n          ],\n          \"customProperties\": {\n            \"language\": \"<string>\",\n            \"nulla_3a2\": {\n              \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n              \"x-additionalPropertiesName\": \"customProperties\"\n            }\n          },\n          \"description\": \"<string>\",\n          \"devicePermissions\": {\n            \"pariatur77\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"aliquip_28\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"tempor_82\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          \"id\": \"<integer>\",\n          \"roles\": {\n            \"self\": \"<uri>\",\n            \"references\": [\n              {\n                \"role\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"self\": \"<uri>\"\n                },\n                \"self\": \"<uri>\"\n              },\n              {\n                \"role\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"self\": \"<uri>\"\n                },\n                \"self\": \"<uri>\"\n              }\n            ],\n            \"statistics\": {\n              \"currentPage\": \"<integer>\",\n              \"pageSize\": \"<integer>\",\n              \"totalElements\": \"<integer>\",\n              \"totalPages\": \"<integer>\"\n            }\n          },\n          \"self\": \"<uri>\",\n          \"users\": {\n            \"self\": \"<uri>\",\n            \"references\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n              }\n            ]\n          }\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"statistics\": {\n      \"currentPage\": \"<integer>\",\n      \"pageSize\": \"<integer>\",\n      \"totalElements\": \"<integer>\",\n      \"totalPages\": \"<integer>\"\n    }\n  },\n  \"id\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"lastPasswordChange\": \"<dateTime>\",\n  \"newsletter\": \"<boolean>\",\n  \"owner\": \"<string>\",\n  \"passwordStrength\": \"RED\",\n  \"phone\": \"<string>\",\n  \"roles\": {\n    \"self\": \"<uri>\",\n    \"references\": [\n      {\n        \"role\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"role\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"statistics\": {\n      \"currentPage\": \"<integer>\",\n      \"pageSize\": \"<integer>\",\n      \"totalElements\": \"<integer>\",\n      \"totalPages\": \"<integer>\"\n    }\n  },\n  \"self\": \"<uri>\",\n  \"shouldResetPassword\": \"<boolean>\",\n  \"twoFactorAuthenticationEnabled\": false,\n  \"userName\": \"<string>\",\n  \"devicePermissions\": {\n    \"ea468\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/userByName/:username",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "userByName",
                                ":username"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "username"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Not enough permissions/roles to perform this operation.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/userByName/:username",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "userByName",
                                ":username"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "username"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "User not found.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/userByName/:username",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "userByName",
                                ":username"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "username"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "groups",
              "item": [
                {
                  "name": "{groupId}",
                  "item": [
                    {
                      "name": "roles",
                      "item": [
                        {
                          "name": "{roleId}",
                          "item": [
                            {
                              "name": "Unassign a specific role for a specific user group in a specific tenant",
                              "request": {
                                "auth": {
                                  "type": "basic",
                                  "basic": [
                                    {
                                      "key": "username",
                                      "value": "{{basicAuthUsername}}",
                                      "type": "string"
                                    },
                                    {
                                      "key": "password",
                                      "value": "{{basicAuthPassword}}",
                                      "type": "string"
                                    }
                                  ]
                                },
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/roles/:roleId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "groups",
                                    ":groupId",
                                    "roles",
                                    ":roleId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId",
                                      "value": "<string>",
                                      "description": "(Required) Unique identifier of a Cumulocity tenant."
                                    },
                                    {
                                      "key": "groupId",
                                      "value": "<integer>",
                                      "description": "(Required) Unique identifier of the user group."
                                    },
                                    {
                                      "key": "roleId",
                                      "value": "<string>",
                                      "description": "(Required) Unique identifier of the user role."
                                    }
                                  ]
                                },
                                "description": "Unassign a specific role (given by a role ID) for a specific user group (by a given user group ID) in a specific tenant (by a given tenant ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_ADMIN\n</section>\n"
                              },
                              "response": [
                                {
                                  "name": "A role was unassigned from a user group.",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/roles/:roleId",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "user",
                                        ":tenantId",
                                        "groups",
                                        ":groupId",
                                        "roles",
                                        ":roleId"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "groupId"
                                        },
                                        {
                                          "key": "roleId"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "No Content",
                                  "code": 204,
                                  "_postman_previewlanguage": "text",
                                  "header": [],
                                  "cookie": [],
                                  "body": ""
                                },
                                {
                                  "name": "Authentication information is missing or invalid.",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/roles/:roleId",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "user",
                                        ":tenantId",
                                        "groups",
                                        ":groupId",
                                        "roles",
                                        ":roleId"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "groupId"
                                        },
                                        {
                                          "key": "roleId"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                },
                                {
                                  "name": "Not authorized to perform this operation.",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/roles/:roleId",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "user",
                                        ":tenantId",
                                        "groups",
                                        ":groupId",
                                        "roles",
                                        ":roleId"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "groupId"
                                        },
                                        {
                                          "key": "roleId"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Forbidden",
                                  "code": 403,
                                  "_postman_previewlanguage": "text",
                                  "header": [],
                                  "cookie": [],
                                  "body": ""
                                },
                                {
                                  "name": "Role not found.",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/roles/:roleId",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "user",
                                        ":tenantId",
                                        "groups",
                                        ":groupId",
                                        "roles",
                                        ":roleId"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "groupId"
                                        },
                                        {
                                          "key": "roleId"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Not Found",
                                  "code": 404,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "name": "Assign a role to a specific user group in a specific tenant",
                          "request": {
                            "auth": {
                              "type": "basic",
                              "basic": [
                                {
                                  "key": "username",
                                  "value": "{{basicAuthUsername}}",
                                  "type": "string"
                                },
                                {
                                  "key": "password",
                                  "value": "{{basicAuthPassword}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.rolereference+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.rolereference+json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"role\": {\n    \"self\": \"<string>\"\n  }\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/roles",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "groups",
                                ":groupId",
                                "roles"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of a Cumulocity tenant."
                                },
                                {
                                  "key": "groupId",
                                  "value": "<integer>",
                                  "description": "(Required) Unique identifier of the user group."
                                }
                              ]
                            },
                            "description": "Assign a role to a specific user group (by a given user group ID) in a specific tenant (by a given tenant ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_ADMIN\n</section>\n"
                          },
                          "response": [
                            {
                              "name": "A user role was assigned to a user group.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/vnd.com.nsn.cumulocity.rolereference+json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.rolereference+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"role\": {\n    \"self\": \"<string>\"\n  }\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/roles",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "groups",
                                    ":groupId",
                                    "roles"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "groupId"
                                    }
                                  ]
                                }
                              },
                              "status": "Created",
                              "code": 201,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.rolereference+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"role\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"self\": \"<uri>\"\n  },\n  \"self\": \"<uri>\"\n}"
                            },
                            {
                              "name": "Authentication information is missing or invalid.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/vnd.com.nsn.cumulocity.rolereference+json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"role\": {\n    \"self\": \"<string>\"\n  }\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/roles",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "groups",
                                    ":groupId",
                                    "roles"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "groupId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Not authorized to perform this operation.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/vnd.com.nsn.cumulocity.rolereference+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"role\": {\n    \"self\": \"<string>\"\n  }\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/roles",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "groups",
                                    ":groupId",
                                    "roles"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "groupId"
                                    }
                                  ]
                                }
                              },
                              "status": "Forbidden",
                              "code": 403,
                              "_postman_previewlanguage": "text",
                              "header": [],
                              "cookie": [],
                              "body": ""
                            },
                            {
                              "name": "Group not found.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/vnd.com.nsn.cumulocity.rolereference+json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"role\": {\n    \"self\": \"<string>\"\n  }\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/roles",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "groups",
                                    ":groupId",
                                    "roles"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "groupId"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Conflict – Role already assigned to the user group.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/vnd.com.nsn.cumulocity.rolereference+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"role\": {\n    \"self\": \"<string>\"\n  }\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/roles",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "groups",
                                    ":groupId",
                                    "roles"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "groupId"
                                    }
                                  ]
                                }
                              },
                              "status": "Conflict",
                              "code": 409,
                              "_postman_previewlanguage": "text",
                              "header": [],
                              "cookie": [],
                              "body": ""
                            },
                            {
                              "name": "Unprocessable Entity – invalid payload.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/vnd.com.nsn.cumulocity.rolereference+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"role\": {\n    \"self\": \"<string>\"\n  }\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/roles",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "groups",
                                    ":groupId",
                                    "roles"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "groupId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                              "code": 422,
                              "_postman_previewlanguage": "text",
                              "header": [],
                              "cookie": [],
                              "body": ""
                            }
                          ]
                        },
                        {
                          "name": "Retrieve all roles assigned to a specific user group in a specific tenant",
                          "request": {
                            "auth": {
                              "type": "basic",
                              "basic": [
                                {
                                  "key": "username",
                                  "value": "{{basicAuthUsername}}",
                                  "type": "string"
                                },
                                {
                                  "key": "password",
                                  "value": "{{basicAuthPassword}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.rolereferencecollection+json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/roles?currentPage=1&pageSize=5",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "groups",
                                ":groupId",
                                "roles"
                              ],
                              "query": [
                                {
                                  "key": "currentPage",
                                  "value": "1",
                                  "description": "The current page of the paginated results."
                                },
                                {
                                  "key": "pageSize",
                                  "value": "5",
                                  "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of a Cumulocity tenant."
                                },
                                {
                                  "key": "groupId",
                                  "value": "<integer>",
                                  "description": "(Required) Unique identifier of the user group."
                                }
                              ]
                            },
                            "description": "Retrieve all roles assigned to a specific user group (by a given user group ID) in a specific tenant (by a given tenant ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_READ\n</section>\n"
                          },
                          "response": [
                            {
                              "name": "The request succeeded and the roles are sent in the response.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.rolereferencecollection+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/roles?currentPage=1&pageSize=5",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "groups",
                                    ":groupId",
                                    "roles"
                                  ],
                                  "query": [
                                    {
                                      "key": "currentPage",
                                      "value": "1",
                                      "description": "The current page of the paginated results."
                                    },
                                    {
                                      "key": "pageSize",
                                      "value": "5",
                                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                    }
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "groupId"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.rolereferencecollection+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"references\": {\n    \"role\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"self\": \"<uri>\"\n    },\n    \"self\": \"<uri>\"\n  },\n  \"self\": \"<uri>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  }\n}"
                            },
                            {
                              "name": "Authentication information is missing or invalid.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/roles?currentPage=1&pageSize=5",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "groups",
                                    ":groupId",
                                    "roles"
                                  ],
                                  "query": [
                                    {
                                      "key": "currentPage",
                                      "value": "1",
                                      "description": "The current page of the paginated results."
                                    },
                                    {
                                      "key": "pageSize",
                                      "value": "5",
                                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                    }
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "groupId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Not enough permissions/roles to perform this operation.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/roles?currentPage=1&pageSize=5",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "groups",
                                    ":groupId",
                                    "roles"
                                  ],
                                  "query": [
                                    {
                                      "key": "currentPage",
                                      "value": "1",
                                      "description": "The current page of the paginated results."
                                    },
                                    {
                                      "key": "pageSize",
                                      "value": "5",
                                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                    }
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "groupId"
                                    }
                                  ]
                                }
                              },
                              "status": "Forbidden",
                              "code": 403,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Group not found.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/roles?currentPage=1&pageSize=5",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "groups",
                                    ":groupId",
                                    "roles"
                                  ],
                                  "query": [
                                    {
                                      "key": "currentPage",
                                      "value": "1",
                                      "description": "The current page of the paginated results."
                                    },
                                    {
                                      "key": "pageSize",
                                      "value": "5",
                                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                    }
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "groupId"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "users",
                      "item": [
                        {
                          "name": "{userId}",
                          "item": [
                            {
                              "name": "Remove a specific user from a specific user group of a specific tenant",
                              "request": {
                                "auth": {
                                  "type": "basic",
                                  "basic": [
                                    {
                                      "key": "username",
                                      "value": "{{basicAuthUsername}}",
                                      "type": "string"
                                    },
                                    {
                                      "key": "password",
                                      "value": "{{basicAuthPassword}}",
                                      "type": "string"
                                    }
                                  ]
                                },
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/users/:userId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "groups",
                                    ":groupId",
                                    "users",
                                    ":userId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId",
                                      "value": "<string>",
                                      "description": "(Required) Unique identifier of a Cumulocity tenant."
                                    },
                                    {
                                      "key": "groupId",
                                      "value": "<integer>",
                                      "description": "(Required) Unique identifier of the user group."
                                    },
                                    {
                                      "key": "userId",
                                      "value": "<string>",
                                      "description": "(Required) Unique identifier of the a user."
                                    }
                                  ]
                                },
                                "description": "Remove a specific user (by a given user ID) from a specific user group (by a given user group ID) of a specific tenant (by a given tenant ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_ADMIN <b>OR</b> ROLE_USER_MANAGEMENT_CREATE <b>AND</b> is parent of the user <b>AND</b> is not the current user\n</section>\n"
                              },
                              "response": [
                                {
                                  "name": "A user was removed from a group.",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/users/:userId",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "user",
                                        ":tenantId",
                                        "groups",
                                        ":groupId",
                                        "users",
                                        ":userId"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "groupId"
                                        },
                                        {
                                          "key": "userId"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "No Content",
                                  "code": 204,
                                  "_postman_previewlanguage": "text",
                                  "header": [],
                                  "cookie": [],
                                  "body": ""
                                },
                                {
                                  "name": "Authentication information is missing or invalid.",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/users/:userId",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "user",
                                        ":tenantId",
                                        "groups",
                                        ":groupId",
                                        "users",
                                        ":userId"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "groupId"
                                        },
                                        {
                                          "key": "userId"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                },
                                {
                                  "name": "Not authorized to perform this operation.",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/users/:userId",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "user",
                                        ":tenantId",
                                        "groups",
                                        ":groupId",
                                        "users",
                                        ":userId"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "groupId"
                                        },
                                        {
                                          "key": "userId"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Forbidden",
                                  "code": 403,
                                  "_postman_previewlanguage": "text",
                                  "header": [],
                                  "cookie": [],
                                  "body": ""
                                },
                                {
                                  "name": "User not found.",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/users/:userId",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "user",
                                        ":tenantId",
                                        "groups",
                                        ":groupId",
                                        "users",
                                        ":userId"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "groupId"
                                        },
                                        {
                                          "key": "userId"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Not Found",
                                  "code": 404,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "name": "Add a user to a specific user group of a specific tenant",
                          "request": {
                            "auth": {
                              "type": "basic",
                              "basic": [
                                {
                                  "key": "username",
                                  "value": "{{basicAuthUsername}}",
                                  "type": "string"
                                },
                                {
                                  "key": "password",
                                  "value": "{{basicAuthPassword}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.userreference+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.userreference+json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"user\": {\n    \"self\": \"<string>\"\n  }\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/users",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "groups",
                                ":groupId",
                                "users"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of a Cumulocity tenant."
                                },
                                {
                                  "key": "groupId",
                                  "value": "<integer>",
                                  "description": "(Required) Unique identifier of the user group."
                                }
                              ]
                            },
                            "description": "Add a user to a specific user group (by a given user group ID) of a specific tenant (by a given tenant ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_ADMIN to assign root users in a user hierarchy <b>OR</b> users that are not in any hierarchy to any group<br/>\nROLE_USER_MANAGEMENT_ADMIN to assign non-root users in a user hierarchy to groups accessible by the parent of assigned user<br/>\nROLE_USER_MANAGEMENT_CREATE to assign descendants of the current user in a user hierarchy to groups accessible by current user <b>AND</b> accessible by the parent of assigned user\n</section>\n"
                          },
                          "response": [
                            {
                              "name": "The user was added to the group.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/vnd.com.nsn.cumulocity.userreference+json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.userreference+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"user\": {\n    \"self\": \"<string>\"\n  }\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/users",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "groups",
                                    ":groupId",
                                    "users"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "groupId"
                                    }
                                  ]
                                }
                              },
                              "status": "Created",
                              "code": 201,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.userreference+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"self\": \"<uri>\",\n  \"user\": {\n    \"applications\": [\n      {\n        \"availability\": \"PRIVATE\",\n        \"contextPath\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<string>\",\n        \"key\": \"<string>\",\n        \"name\": \"<string>\",\n        \"owner\": {\n          \"self\": \"<uri>\",\n          \"tenant\": {\n            \"id\": \"<string>\"\n          }\n        },\n        \"self\": \"<uri>\",\n        \"type\": \"HOSTED\",\n        \"manifest\": {\n          \"apiVersion\": \"<string>\",\n          \"billingMode\": \"RESOURCES\",\n          \"contextPath\": \"<string>\",\n          \"extensions\": [\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"isolation\": \"MULTI_TENANT\",\n          \"livenessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"provider\": {\n            \"name\": \"<string>\"\n          },\n          \"readinessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"requestResources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"resources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"scale\": \"NONE\",\n          \"settings\": [\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            },\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            }\n          ],\n          \"settingsCategory\": \"<string>\",\n          \"version\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"breadcrumbs\": \"<boolean>\",\n        \"contentSecurityPolicy\": \"<string>\",\n        \"dynamicOptionsUrl\": \"<string>\",\n        \"globalTitle\": \"<string>\",\n        \"legacy\": \"<boolean>\",\n        \"rightDrawer\": \"<boolean>\",\n        \"upgrade\": \"<boolean>\",\n        \"activeVersionId\": \"<string>\",\n        \"resourcesUrl\": \"<string>\"\n      },\n      {\n        \"availability\": \"PRIVATE\",\n        \"contextPath\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<string>\",\n        \"key\": \"<string>\",\n        \"name\": \"<string>\",\n        \"owner\": {\n          \"self\": \"<uri>\",\n          \"tenant\": {\n            \"id\": \"<string>\"\n          }\n        },\n        \"self\": \"<uri>\",\n        \"type\": \"EXTERNAL\",\n        \"manifest\": {\n          \"apiVersion\": \"<string>\",\n          \"billingMode\": \"RESOURCES\",\n          \"contextPath\": \"<string>\",\n          \"extensions\": [\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"isolation\": \"PER_TENANT\",\n          \"livenessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"provider\": {\n            \"name\": \"<string>\"\n          },\n          \"readinessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"requestResources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"resources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"scale\": \"NONE\",\n          \"settings\": [\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            },\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            }\n          ],\n          \"settingsCategory\": \"<string>\",\n          \"version\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"breadcrumbs\": \"<boolean>\",\n        \"contentSecurityPolicy\": \"<string>\",\n        \"dynamicOptionsUrl\": \"<string>\",\n        \"globalTitle\": \"<string>\",\n        \"legacy\": \"<boolean>\",\n        \"rightDrawer\": \"<boolean>\",\n        \"upgrade\": \"<boolean>\",\n        \"activeVersionId\": \"<string>\",\n        \"resourcesUrl\": \"<string>\"\n      }\n    ],\n    \"customProperties\": {\n      \"language\": \"<string>\"\n    },\n    \"displayName\": \"<string>\",\n    \"email\": \"<email>\",\n    \"enabled\": true,\n    \"firstName\": \"<string>\",\n    \"groups\": {\n      \"self\": \"<uri>\",\n      \"references\": [\n        {\n          \"group\": {\n            \"name\": \"<string>\",\n            \"applications\": [\n              {\n                \"availability\": \"PRIVATE\",\n                \"contextPath\": \"<string>\",\n                \"description\": \"<string>\",\n                \"id\": \"<string>\",\n                \"key\": \"<string>\",\n                \"name\": \"<string>\",\n                \"owner\": {\n                  \"self\": \"<uri>\",\n                  \"tenant\": {\n                    \"id\": \"<string>\"\n                  }\n                },\n                \"self\": \"<uri>\",\n                \"type\": \"HOSTED\",\n                \"manifest\": {\n                  \"apiVersion\": \"<string>\",\n                  \"billingMode\": \"RESOURCES\",\n                  \"contextPath\": \"<string>\",\n                  \"extensions\": [\n                    {\n                      \"path\": \"<string>\",\n                      \"type\": \"<string>\"\n                    },\n                    {\n                      \"path\": \"<string>\",\n                      \"type\": \"<string>\"\n                    }\n                  ],\n                  \"isolation\": \"PER_TENANT\",\n                  \"livenessProbe\": {\n                    \"failureThreshold\": \"<integer>\",\n                    \"periodSeconds\": \"<integer>\",\n                    \"timeoutSeconds\": \"<integer>\",\n                    \"successThreshold\": \"<integer>\",\n                    \"initialDelaySeconds\": \"<integer>\",\n                    \"httpGet\": {\n                      \"path\": \"<string>\",\n                      \"port\": \"<integer>\"\n                    }\n                  },\n                  \"provider\": {\n                    \"name\": \"<string>\"\n                  },\n                  \"readinessProbe\": {\n                    \"failureThreshold\": \"<integer>\",\n                    \"periodSeconds\": \"<integer>\",\n                    \"timeoutSeconds\": \"<integer>\",\n                    \"successThreshold\": \"<integer>\",\n                    \"initialDelaySeconds\": \"<integer>\",\n                    \"httpGet\": {\n                      \"path\": \"<string>\",\n                      \"port\": \"<integer>\"\n                    }\n                  },\n                  \"requestResources\": {\n                    \"cpu\": \"<string>\",\n                    \"memory\": \"<string>\"\n                  },\n                  \"resources\": {\n                    \"cpu\": \"<string>\",\n                    \"memory\": \"<string>\"\n                  },\n                  \"roles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"requiredRoles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"scale\": \"NONE\",\n                  \"settings\": [\n                    {\n                      \"key\": \"<string>\",\n                      \"valueSchema\": {\n                        \"type\": \"<string>\"\n                      },\n                      \"defaultValue\": \"<string>\",\n                      \"editable\": \"<boolean>\",\n                      \"inheritFromOwner\": \"<boolean>\"\n                    },\n                    {\n                      \"key\": \"<string>\",\n                      \"valueSchema\": {\n                        \"type\": \"<string>\"\n                      },\n                      \"defaultValue\": \"<string>\",\n                      \"editable\": \"<boolean>\",\n                      \"inheritFromOwner\": \"<boolean>\"\n                    }\n                  ],\n                  \"settingsCategory\": \"<string>\",\n                  \"version\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"breadcrumbs\": \"<boolean>\",\n                \"contentSecurityPolicy\": \"<string>\",\n                \"dynamicOptionsUrl\": \"<string>\",\n                \"globalTitle\": \"<string>\",\n                \"legacy\": \"<boolean>\",\n                \"rightDrawer\": \"<boolean>\",\n                \"upgrade\": \"<boolean>\",\n                \"activeVersionId\": \"<string>\",\n                \"resourcesUrl\": \"<string>\"\n              },\n              {\n                \"availability\": \"PRIVATE\",\n                \"contextPath\": \"<string>\",\n                \"description\": \"<string>\",\n                \"id\": \"<string>\",\n                \"key\": \"<string>\",\n                \"name\": \"<string>\",\n                \"owner\": {\n                  \"self\": \"<uri>\",\n                  \"tenant\": {\n                    \"id\": \"<string>\"\n                  }\n                },\n                \"self\": \"<uri>\",\n                \"type\": \"EXTERNAL\",\n                \"manifest\": {\n                  \"apiVersion\": \"<string>\",\n                  \"billingMode\": \"RESOURCES\",\n                  \"contextPath\": \"<string>\",\n                  \"extensions\": [\n                    {\n                      \"path\": \"<string>\",\n                      \"type\": \"<string>\"\n                    },\n                    {\n                      \"path\": \"<string>\",\n                      \"type\": \"<string>\"\n                    }\n                  ],\n                  \"isolation\": \"MULTI_TENANT\",\n                  \"livenessProbe\": {\n                    \"failureThreshold\": \"<integer>\",\n                    \"periodSeconds\": \"<integer>\",\n                    \"timeoutSeconds\": \"<integer>\",\n                    \"successThreshold\": \"<integer>\",\n                    \"initialDelaySeconds\": \"<integer>\",\n                    \"httpGet\": {\n                      \"path\": \"<string>\",\n                      \"port\": \"<integer>\"\n                    }\n                  },\n                  \"provider\": {\n                    \"name\": \"<string>\"\n                  },\n                  \"readinessProbe\": {\n                    \"failureThreshold\": \"<integer>\",\n                    \"periodSeconds\": \"<integer>\",\n                    \"timeoutSeconds\": \"<integer>\",\n                    \"successThreshold\": \"<integer>\",\n                    \"initialDelaySeconds\": \"<integer>\",\n                    \"httpGet\": {\n                      \"path\": \"<string>\",\n                      \"port\": \"<integer>\"\n                    }\n                  },\n                  \"requestResources\": {\n                    \"cpu\": \"<string>\",\n                    \"memory\": \"<string>\"\n                  },\n                  \"resources\": {\n                    \"cpu\": \"<string>\",\n                    \"memory\": \"<string>\"\n                  },\n                  \"roles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"requiredRoles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"scale\": \"NONE\",\n                  \"settings\": [\n                    {\n                      \"key\": \"<string>\",\n                      \"valueSchema\": {\n                        \"type\": \"<string>\"\n                      },\n                      \"defaultValue\": \"<string>\",\n                      \"editable\": \"<boolean>\",\n                      \"inheritFromOwner\": \"<boolean>\"\n                    },\n                    {\n                      \"key\": \"<string>\",\n                      \"valueSchema\": {\n                        \"type\": \"<string>\"\n                      },\n                      \"defaultValue\": \"<string>\",\n                      \"editable\": \"<boolean>\",\n                      \"inheritFromOwner\": \"<boolean>\"\n                    }\n                  ],\n                  \"settingsCategory\": \"<string>\",\n                  \"version\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"breadcrumbs\": \"<boolean>\",\n                \"contentSecurityPolicy\": \"<string>\",\n                \"dynamicOptionsUrl\": \"<string>\",\n                \"globalTitle\": \"<string>\",\n                \"legacy\": \"<boolean>\",\n                \"rightDrawer\": \"<boolean>\",\n                \"upgrade\": \"<boolean>\",\n                \"activeVersionId\": \"<string>\",\n                \"resourcesUrl\": \"<string>\"\n              }\n            ],\n            \"customProperties\": {\n              \"language\": \"<string>\",\n              \"ad_0\": {\n                \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n                \"x-additionalPropertiesName\": \"customProperties\"\n              }\n            },\n            \"description\": \"<string>\",\n            \"devicePermissions\": {\n              \"tempor1\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"irure_4ba\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            \"id\": \"<integer>\",\n            \"roles\": {\n              \"self\": \"<uri>\",\n              \"references\": [\n                {\n                  \"role\": {\n                    \"id\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"self\": \"<uri>\"\n                  },\n                  \"self\": \"<uri>\"\n                },\n                {\n                  \"role\": {\n                    \"id\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"self\": \"<uri>\"\n                  },\n                  \"self\": \"<uri>\"\n                }\n              ],\n              \"statistics\": {\n                \"currentPage\": \"<integer>\",\n                \"pageSize\": \"<integer>\",\n                \"totalElements\": \"<integer>\",\n                \"totalPages\": \"<integer>\"\n              }\n            },\n            \"self\": \"<uri>\",\n            \"users\": {\n              \"self\": \"<uri>\",\n              \"references\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                }\n              ]\n            }\n          },\n          \"self\": \"<uri>\"\n        },\n        {\n          \"group\": {\n            \"name\": \"<string>\",\n            \"applications\": [\n              {\n                \"availability\": \"PRIVATE\",\n                \"contextPath\": \"<string>\",\n                \"description\": \"<string>\",\n                \"id\": \"<string>\",\n                \"key\": \"<string>\",\n                \"name\": \"<string>\",\n                \"owner\": {\n                  \"self\": \"<uri>\",\n                  \"tenant\": {\n                    \"id\": \"<string>\"\n                  }\n                },\n                \"self\": \"<uri>\",\n                \"type\": \"EXTERNAL\",\n                \"manifest\": {\n                  \"apiVersion\": \"<string>\",\n                  \"billingMode\": \"RESOURCES\",\n                  \"contextPath\": \"<string>\",\n                  \"extensions\": [\n                    {\n                      \"path\": \"<string>\",\n                      \"type\": \"<string>\"\n                    },\n                    {\n                      \"path\": \"<string>\",\n                      \"type\": \"<string>\"\n                    }\n                  ],\n                  \"isolation\": \"PER_TENANT\",\n                  \"livenessProbe\": {\n                    \"failureThreshold\": \"<integer>\",\n                    \"periodSeconds\": \"<integer>\",\n                    \"timeoutSeconds\": \"<integer>\",\n                    \"successThreshold\": \"<integer>\",\n                    \"initialDelaySeconds\": \"<integer>\",\n                    \"httpGet\": {\n                      \"path\": \"<string>\",\n                      \"port\": \"<integer>\"\n                    }\n                  },\n                  \"provider\": {\n                    \"name\": \"<string>\"\n                  },\n                  \"readinessProbe\": {\n                    \"failureThreshold\": \"<integer>\",\n                    \"periodSeconds\": \"<integer>\",\n                    \"timeoutSeconds\": \"<integer>\",\n                    \"successThreshold\": \"<integer>\",\n                    \"initialDelaySeconds\": \"<integer>\",\n                    \"httpGet\": {\n                      \"path\": \"<string>\",\n                      \"port\": \"<integer>\"\n                    }\n                  },\n                  \"requestResources\": {\n                    \"cpu\": \"<string>\",\n                    \"memory\": \"<string>\"\n                  },\n                  \"resources\": {\n                    \"cpu\": \"<string>\",\n                    \"memory\": \"<string>\"\n                  },\n                  \"roles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"requiredRoles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"scale\": \"NONE\",\n                  \"settings\": [\n                    {\n                      \"key\": \"<string>\",\n                      \"valueSchema\": {\n                        \"type\": \"<string>\"\n                      },\n                      \"defaultValue\": \"<string>\",\n                      \"editable\": \"<boolean>\",\n                      \"inheritFromOwner\": \"<boolean>\"\n                    },\n                    {\n                      \"key\": \"<string>\",\n                      \"valueSchema\": {\n                        \"type\": \"<string>\"\n                      },\n                      \"defaultValue\": \"<string>\",\n                      \"editable\": \"<boolean>\",\n                      \"inheritFromOwner\": \"<boolean>\"\n                    }\n                  ],\n                  \"settingsCategory\": \"<string>\",\n                  \"version\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"breadcrumbs\": \"<boolean>\",\n                \"contentSecurityPolicy\": \"<string>\",\n                \"dynamicOptionsUrl\": \"<string>\",\n                \"globalTitle\": \"<string>\",\n                \"legacy\": \"<boolean>\",\n                \"rightDrawer\": \"<boolean>\",\n                \"upgrade\": \"<boolean>\",\n                \"activeVersionId\": \"<string>\",\n                \"resourcesUrl\": \"<string>\"\n              },\n              {\n                \"availability\": \"PRIVATE\",\n                \"contextPath\": \"<string>\",\n                \"description\": \"<string>\",\n                \"id\": \"<string>\",\n                \"key\": \"<string>\",\n                \"name\": \"<string>\",\n                \"owner\": {\n                  \"self\": \"<uri>\",\n                  \"tenant\": {\n                    \"id\": \"<string>\"\n                  }\n                },\n                \"self\": \"<uri>\",\n                \"type\": \"EXTERNAL\",\n                \"manifest\": {\n                  \"apiVersion\": \"<string>\",\n                  \"billingMode\": \"RESOURCES\",\n                  \"contextPath\": \"<string>\",\n                  \"extensions\": [\n                    {\n                      \"path\": \"<string>\",\n                      \"type\": \"<string>\"\n                    },\n                    {\n                      \"path\": \"<string>\",\n                      \"type\": \"<string>\"\n                    }\n                  ],\n                  \"isolation\": \"PER_TENANT\",\n                  \"livenessProbe\": {\n                    \"failureThreshold\": \"<integer>\",\n                    \"periodSeconds\": \"<integer>\",\n                    \"timeoutSeconds\": \"<integer>\",\n                    \"successThreshold\": \"<integer>\",\n                    \"initialDelaySeconds\": \"<integer>\",\n                    \"httpGet\": {\n                      \"path\": \"<string>\",\n                      \"port\": \"<integer>\"\n                    }\n                  },\n                  \"provider\": {\n                    \"name\": \"<string>\"\n                  },\n                  \"readinessProbe\": {\n                    \"failureThreshold\": \"<integer>\",\n                    \"periodSeconds\": \"<integer>\",\n                    \"timeoutSeconds\": \"<integer>\",\n                    \"successThreshold\": \"<integer>\",\n                    \"initialDelaySeconds\": \"<integer>\",\n                    \"httpGet\": {\n                      \"path\": \"<string>\",\n                      \"port\": \"<integer>\"\n                    }\n                  },\n                  \"requestResources\": {\n                    \"cpu\": \"<string>\",\n                    \"memory\": \"<string>\"\n                  },\n                  \"resources\": {\n                    \"cpu\": \"<string>\",\n                    \"memory\": \"<string>\"\n                  },\n                  \"roles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"requiredRoles\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"scale\": \"NONE\",\n                  \"settings\": [\n                    {\n                      \"key\": \"<string>\",\n                      \"valueSchema\": {\n                        \"type\": \"<string>\"\n                      },\n                      \"defaultValue\": \"<string>\",\n                      \"editable\": \"<boolean>\",\n                      \"inheritFromOwner\": \"<boolean>\"\n                    },\n                    {\n                      \"key\": \"<string>\",\n                      \"valueSchema\": {\n                        \"type\": \"<string>\"\n                      },\n                      \"defaultValue\": \"<string>\",\n                      \"editable\": \"<boolean>\",\n                      \"inheritFromOwner\": \"<boolean>\"\n                    }\n                  ],\n                  \"settingsCategory\": \"<string>\",\n                  \"version\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"breadcrumbs\": \"<boolean>\",\n                \"contentSecurityPolicy\": \"<string>\",\n                \"dynamicOptionsUrl\": \"<string>\",\n                \"globalTitle\": \"<string>\",\n                \"legacy\": \"<boolean>\",\n                \"rightDrawer\": \"<boolean>\",\n                \"upgrade\": \"<boolean>\",\n                \"activeVersionId\": \"<string>\",\n                \"resourcesUrl\": \"<string>\"\n              }\n            ],\n            \"customProperties\": {\n              \"language\": \"<string>\",\n              \"ut_206\": {\n                \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n                \"x-additionalPropertiesName\": \"customProperties\"\n              }\n            },\n            \"description\": \"<string>\",\n            \"devicePermissions\": {\n              \"velit1ec\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            \"id\": \"<integer>\",\n            \"roles\": {\n              \"self\": \"<uri>\",\n              \"references\": [\n                {\n                  \"role\": {\n                    \"id\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"self\": \"<uri>\"\n                  },\n                  \"self\": \"<uri>\"\n                },\n                {\n                  \"role\": {\n                    \"id\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"self\": \"<uri>\"\n                  },\n                  \"self\": \"<uri>\"\n                }\n              ],\n              \"statistics\": {\n                \"currentPage\": \"<integer>\",\n                \"pageSize\": \"<integer>\",\n                \"totalElements\": \"<integer>\",\n                \"totalPages\": \"<integer>\"\n              }\n            },\n            \"self\": \"<uri>\",\n            \"users\": {\n              \"self\": \"<uri>\",\n              \"references\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                }\n              ]\n            }\n          },\n          \"self\": \"<uri>\"\n        }\n      ],\n      \"statistics\": {\n        \"currentPage\": \"<integer>\",\n        \"pageSize\": \"<integer>\",\n        \"totalElements\": \"<integer>\",\n        \"totalPages\": \"<integer>\"\n      }\n    },\n    \"id\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"lastPasswordChange\": \"<dateTime>\",\n    \"newsletter\": \"<boolean>\",\n    \"owner\": \"<string>\",\n    \"passwordStrength\": \"YELLOW\",\n    \"phone\": \"<string>\",\n    \"roles\": {\n      \"self\": \"<uri>\",\n      \"references\": [\n        {\n          \"role\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        },\n        {\n          \"role\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"self\": \"<uri>\"\n          },\n          \"self\": \"<uri>\"\n        }\n      ],\n      \"statistics\": {\n        \"currentPage\": \"<integer>\",\n        \"pageSize\": \"<integer>\",\n        \"totalElements\": \"<integer>\",\n        \"totalPages\": \"<integer>\"\n      }\n    },\n    \"self\": \"<uri>\",\n    \"shouldResetPassword\": \"<boolean>\",\n    \"twoFactorAuthenticationEnabled\": false,\n    \"userName\": \"<string>\",\n    \"devicePermissions\": {\n      \"occaecat97_\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"ullamco5a\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"enim02d\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}"
                            },
                            {
                              "name": "Authentication information is missing or invalid.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/vnd.com.nsn.cumulocity.userreference+json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"user\": {\n    \"self\": \"<string>\"\n  }\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/users",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "groups",
                                    ":groupId",
                                    "users"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "groupId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Not enough permissions/roles to perform this operation.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/vnd.com.nsn.cumulocity.userreference+json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"user\": {\n    \"self\": \"<string>\"\n  }\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/users",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "groups",
                                    ":groupId",
                                    "users"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "groupId"
                                    }
                                  ]
                                }
                              },
                              "status": "Forbidden",
                              "code": 403,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Group not found.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/vnd.com.nsn.cumulocity.userreference+json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"user\": {\n    \"self\": \"<string>\"\n  }\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/users",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "groups",
                                    ":groupId",
                                    "users"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "groupId"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Unprocessable Entity – invalid payload.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/vnd.com.nsn.cumulocity.userreference+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"user\": {\n    \"self\": \"<string>\"\n  }\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/users",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "groups",
                                    ":groupId",
                                    "users"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "groupId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                              "code": 422,
                              "_postman_previewlanguage": "text",
                              "header": [],
                              "cookie": [],
                              "body": ""
                            }
                          ]
                        },
                        {
                          "name": "Retrieve the users of a specific user group of a specific tenant",
                          "request": {
                            "auth": {
                              "type": "basic",
                              "basic": [
                                {
                                  "key": "username",
                                  "value": "{{basicAuthUsername}}",
                                  "type": "string"
                                },
                                {
                                  "key": "password",
                                  "value": "{{basicAuthPassword}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.userreferencecollection+json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/users?currentPage=1&pageSize=5&withTotalElements=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "groups",
                                ":groupId",
                                "users"
                              ],
                              "query": [
                                {
                                  "key": "currentPage",
                                  "value": "1",
                                  "description": "The current page of the paginated results."
                                },
                                {
                                  "key": "pageSize",
                                  "value": "5",
                                  "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                },
                                {
                                  "key": "withTotalElements",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of a Cumulocity tenant."
                                },
                                {
                                  "key": "groupId",
                                  "value": "<integer>",
                                  "description": "(Required) Unique identifier of the user group."
                                }
                              ]
                            },
                            "description": "Retrieve the users of a specific user group (by a given user group ID) of a specific tenant (by a given tenant ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_READ <b>OR</b> (ROLE_USER_MANAGEMENT_CREATE <b>AND</b> has access to the user group)\n</section>\n"
                          },
                          "response": [
                            {
                              "name": "The request has succeeded and the users are sent in the response.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.userreferencecollection+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/users?currentPage=1&pageSize=5&withTotalElements=false",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "groups",
                                    ":groupId",
                                    "users"
                                  ],
                                  "query": [
                                    {
                                      "key": "currentPage",
                                      "value": "1",
                                      "description": "The current page of the paginated results."
                                    },
                                    {
                                      "key": "pageSize",
                                      "value": "5",
                                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                    },
                                    {
                                      "key": "withTotalElements",
                                      "value": "false",
                                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                    }
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "groupId"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.userreferencecollection+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"references\": [\n    {\n      \"self\": \"<uri>\",\n      \"user\": {\n        \"applications\": [\n          {\n            \"availability\": \"PRIVATE\",\n            \"contextPath\": \"<string>\",\n            \"description\": \"<string>\",\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"owner\": {\n              \"self\": \"<uri>\",\n              \"tenant\": {\n                \"id\": \"<string>\"\n              }\n            },\n            \"self\": \"<uri>\",\n            \"type\": \"EXTERNAL\",\n            \"manifest\": {\n              \"apiVersion\": \"<string>\",\n              \"billingMode\": \"RESOURCES\",\n              \"contextPath\": \"<string>\",\n              \"extensions\": [\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"isolation\": \"MULTI_TENANT\",\n              \"livenessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"provider\": {\n                \"name\": \"<string>\"\n              },\n              \"readinessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"requestResources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"resources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"scale\": \"NONE\",\n              \"settings\": [\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                },\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                }\n              ],\n              \"settingsCategory\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"breadcrumbs\": \"<boolean>\",\n            \"contentSecurityPolicy\": \"<string>\",\n            \"dynamicOptionsUrl\": \"<string>\",\n            \"globalTitle\": \"<string>\",\n            \"legacy\": \"<boolean>\",\n            \"rightDrawer\": \"<boolean>\",\n            \"upgrade\": \"<boolean>\",\n            \"activeVersionId\": \"<string>\",\n            \"resourcesUrl\": \"<string>\"\n          },\n          {\n            \"availability\": \"PRIVATE\",\n            \"contextPath\": \"<string>\",\n            \"description\": \"<string>\",\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"owner\": {\n              \"self\": \"<uri>\",\n              \"tenant\": {\n                \"id\": \"<string>\"\n              }\n            },\n            \"self\": \"<uri>\",\n            \"type\": \"EXTERNAL\",\n            \"manifest\": {\n              \"apiVersion\": \"<string>\",\n              \"billingMode\": \"RESOURCES\",\n              \"contextPath\": \"<string>\",\n              \"extensions\": [\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"isolation\": \"MULTI_TENANT\",\n              \"livenessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"provider\": {\n                \"name\": \"<string>\"\n              },\n              \"readinessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"requestResources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"resources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"scale\": \"NONE\",\n              \"settings\": [\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                },\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                }\n              ],\n              \"settingsCategory\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"breadcrumbs\": \"<boolean>\",\n            \"contentSecurityPolicy\": \"<string>\",\n            \"dynamicOptionsUrl\": \"<string>\",\n            \"globalTitle\": \"<string>\",\n            \"legacy\": \"<boolean>\",\n            \"rightDrawer\": \"<boolean>\",\n            \"upgrade\": \"<boolean>\",\n            \"activeVersionId\": \"<string>\",\n            \"resourcesUrl\": \"<string>\"\n          }\n        ],\n        \"customProperties\": {\n          \"language\": \"<string>\",\n          \"velit24\": {\n            \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n            \"x-additionalPropertiesName\": \"customProperties\"\n          }\n        },\n        \"displayName\": \"<string>\",\n        \"email\": \"<email>\",\n        \"enabled\": true,\n        \"firstName\": \"<string>\",\n        \"groups\": {\n          \"self\": \"<uri>\",\n          \"references\": [\n            {\n              \"group\": {\n                \"name\": \"<string>\",\n                \"applications\": [\n                  {\n                    \"availability\": \"PRIVATE\",\n                    \"contextPath\": \"<string>\",\n                    \"description\": \"<string>\",\n                    \"id\": \"<string>\",\n                    \"key\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"owner\": {\n                      \"self\": \"<uri>\",\n                      \"tenant\": {\n                        \"id\": \"<string>\"\n                      }\n                    },\n                    \"self\": \"<uri>\",\n                    \"type\": \"EXTERNAL\",\n                    \"manifest\": {\n                      \"apiVersion\": \"<string>\",\n                      \"billingMode\": \"RESOURCES\",\n                      \"contextPath\": \"<string>\",\n                      \"extensions\": [\n                        {\n                          \"path\": \"<string>\",\n                          \"type\": \"<string>\"\n                        },\n                        {\n                          \"path\": \"<string>\",\n                          \"type\": \"<string>\"\n                        }\n                      ],\n                      \"isolation\": \"MULTI_TENANT\",\n                      \"livenessProbe\": {\n                        \"failureThreshold\": \"<integer>\",\n                        \"periodSeconds\": \"<integer>\",\n                        \"timeoutSeconds\": \"<integer>\",\n                        \"successThreshold\": \"<integer>\",\n                        \"initialDelaySeconds\": \"<integer>\",\n                        \"httpGet\": {\n                          \"path\": \"<string>\",\n                          \"port\": \"<integer>\"\n                        }\n                      },\n                      \"provider\": {\n                        \"name\": \"<string>\"\n                      },\n                      \"readinessProbe\": {\n                        \"failureThreshold\": \"<integer>\",\n                        \"periodSeconds\": \"<integer>\",\n                        \"timeoutSeconds\": \"<integer>\",\n                        \"successThreshold\": \"<integer>\",\n                        \"initialDelaySeconds\": \"<integer>\",\n                        \"httpGet\": {\n                          \"path\": \"<string>\",\n                          \"port\": \"<integer>\"\n                        }\n                      },\n                      \"requestResources\": {\n                        \"cpu\": \"<string>\",\n                        \"memory\": \"<string>\"\n                      },\n                      \"resources\": {\n                        \"cpu\": \"<string>\",\n                        \"memory\": \"<string>\"\n                      },\n                      \"roles\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"requiredRoles\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"scale\": \"NONE\",\n                      \"settings\": [\n                        {\n                          \"key\": \"<string>\",\n                          \"valueSchema\": {\n                            \"type\": \"<string>\"\n                          },\n                          \"defaultValue\": \"<string>\",\n                          \"editable\": \"<boolean>\",\n                          \"inheritFromOwner\": \"<boolean>\"\n                        },\n                        {\n                          \"key\": \"<string>\",\n                          \"valueSchema\": {\n                            \"type\": \"<string>\"\n                          },\n                          \"defaultValue\": \"<string>\",\n                          \"editable\": \"<boolean>\",\n                          \"inheritFromOwner\": \"<boolean>\"\n                        }\n                      ],\n                      \"settingsCategory\": \"<string>\",\n                      \"version\": \"<string>\"\n                    },\n                    \"roles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"requiredRoles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"breadcrumbs\": \"<boolean>\",\n                    \"contentSecurityPolicy\": \"<string>\",\n                    \"dynamicOptionsUrl\": \"<string>\",\n                    \"globalTitle\": \"<string>\",\n                    \"legacy\": \"<boolean>\",\n                    \"rightDrawer\": \"<boolean>\",\n                    \"upgrade\": \"<boolean>\",\n                    \"activeVersionId\": \"<string>\",\n                    \"resourcesUrl\": \"<string>\"\n                  },\n                  {\n                    \"availability\": \"PRIVATE\",\n                    \"contextPath\": \"<string>\",\n                    \"description\": \"<string>\",\n                    \"id\": \"<string>\",\n                    \"key\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"owner\": {\n                      \"self\": \"<uri>\",\n                      \"tenant\": {\n                        \"id\": \"<string>\"\n                      }\n                    },\n                    \"self\": \"<uri>\",\n                    \"type\": \"HOSTED\",\n                    \"manifest\": {\n                      \"apiVersion\": \"<string>\",\n                      \"billingMode\": \"RESOURCES\",\n                      \"contextPath\": \"<string>\",\n                      \"extensions\": [\n                        {\n                          \"path\": \"<string>\",\n                          \"type\": \"<string>\"\n                        },\n                        {\n                          \"path\": \"<string>\",\n                          \"type\": \"<string>\"\n                        }\n                      ],\n                      \"isolation\": \"MULTI_TENANT\",\n                      \"livenessProbe\": {\n                        \"failureThreshold\": \"<integer>\",\n                        \"periodSeconds\": \"<integer>\",\n                        \"timeoutSeconds\": \"<integer>\",\n                        \"successThreshold\": \"<integer>\",\n                        \"initialDelaySeconds\": \"<integer>\",\n                        \"httpGet\": {\n                          \"path\": \"<string>\",\n                          \"port\": \"<integer>\"\n                        }\n                      },\n                      \"provider\": {\n                        \"name\": \"<string>\"\n                      },\n                      \"readinessProbe\": {\n                        \"failureThreshold\": \"<integer>\",\n                        \"periodSeconds\": \"<integer>\",\n                        \"timeoutSeconds\": \"<integer>\",\n                        \"successThreshold\": \"<integer>\",\n                        \"initialDelaySeconds\": \"<integer>\",\n                        \"httpGet\": {\n                          \"path\": \"<string>\",\n                          \"port\": \"<integer>\"\n                        }\n                      },\n                      \"requestResources\": {\n                        \"cpu\": \"<string>\",\n                        \"memory\": \"<string>\"\n                      },\n                      \"resources\": {\n                        \"cpu\": \"<string>\",\n                        \"memory\": \"<string>\"\n                      },\n                      \"roles\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"requiredRoles\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"scale\": \"NONE\",\n                      \"settings\": [\n                        {\n                          \"key\": \"<string>\",\n                          \"valueSchema\": {\n                            \"type\": \"<string>\"\n                          },\n                          \"defaultValue\": \"<string>\",\n                          \"editable\": \"<boolean>\",\n                          \"inheritFromOwner\": \"<boolean>\"\n                        },\n                        {\n                          \"key\": \"<string>\",\n                          \"valueSchema\": {\n                            \"type\": \"<string>\"\n                          },\n                          \"defaultValue\": \"<string>\",\n                          \"editable\": \"<boolean>\",\n                          \"inheritFromOwner\": \"<boolean>\"\n                        }\n                      ],\n                      \"settingsCategory\": \"<string>\",\n                      \"version\": \"<string>\"\n                    },\n                    \"roles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"requiredRoles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"breadcrumbs\": \"<boolean>\",\n                    \"contentSecurityPolicy\": \"<string>\",\n                    \"dynamicOptionsUrl\": \"<string>\",\n                    \"globalTitle\": \"<string>\",\n                    \"legacy\": \"<boolean>\",\n                    \"rightDrawer\": \"<boolean>\",\n                    \"upgrade\": \"<boolean>\",\n                    \"activeVersionId\": \"<string>\",\n                    \"resourcesUrl\": \"<string>\"\n                  }\n                ],\n                \"customProperties\": {\n                  \"language\": \"<string>\",\n                  \"proident_9f\": {\n                    \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n                    \"x-additionalPropertiesName\": \"customProperties\"\n                  },\n                  \"exercitation_ac\": {\n                    \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n                    \"x-additionalPropertiesName\": \"customProperties\"\n                  },\n                  \"laborumdeb\": {\n                    \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n                    \"x-additionalPropertiesName\": \"customProperties\"\n                  }\n                },\n                \"description\": \"<string>\",\n                \"devicePermissions\": {\n                  \"Excepteur_7\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ]\n                },\n                \"id\": \"<integer>\",\n                \"roles\": {\n                  \"self\": \"<uri>\",\n                  \"references\": [\n                    {\n                      \"role\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\",\n                        \"self\": \"<uri>\"\n                      },\n                      \"self\": \"<uri>\"\n                    },\n                    {\n                      \"role\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\",\n                        \"self\": \"<uri>\"\n                      },\n                      \"self\": \"<uri>\"\n                    }\n                  ],\n                  \"statistics\": {\n                    \"currentPage\": \"<integer>\",\n                    \"pageSize\": \"<integer>\",\n                    \"totalElements\": \"<integer>\",\n                    \"totalPages\": \"<integer>\"\n                  }\n                },\n                \"self\": \"<uri>\",\n                \"users\": {\n                  \"self\": \"<uri>\",\n                  \"references\": [\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                    },\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                    }\n                  ]\n                }\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"group\": {\n                \"name\": \"<string>\",\n                \"applications\": [\n                  {\n                    \"availability\": \"PRIVATE\",\n                    \"contextPath\": \"<string>\",\n                    \"description\": \"<string>\",\n                    \"id\": \"<string>\",\n                    \"key\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"owner\": {\n                      \"self\": \"<uri>\",\n                      \"tenant\": {\n                        \"id\": \"<string>\"\n                      }\n                    },\n                    \"self\": \"<uri>\",\n                    \"type\": \"HOSTED\",\n                    \"manifest\": {\n                      \"apiVersion\": \"<string>\",\n                      \"billingMode\": \"RESOURCES\",\n                      \"contextPath\": \"<string>\",\n                      \"extensions\": [\n                        {\n                          \"path\": \"<string>\",\n                          \"type\": \"<string>\"\n                        },\n                        {\n                          \"path\": \"<string>\",\n                          \"type\": \"<string>\"\n                        }\n                      ],\n                      \"isolation\": \"MULTI_TENANT\",\n                      \"livenessProbe\": {\n                        \"failureThreshold\": \"<integer>\",\n                        \"periodSeconds\": \"<integer>\",\n                        \"timeoutSeconds\": \"<integer>\",\n                        \"successThreshold\": \"<integer>\",\n                        \"initialDelaySeconds\": \"<integer>\",\n                        \"httpGet\": {\n                          \"path\": \"<string>\",\n                          \"port\": \"<integer>\"\n                        }\n                      },\n                      \"provider\": {\n                        \"name\": \"<string>\"\n                      },\n                      \"readinessProbe\": {\n                        \"failureThreshold\": \"<integer>\",\n                        \"periodSeconds\": \"<integer>\",\n                        \"timeoutSeconds\": \"<integer>\",\n                        \"successThreshold\": \"<integer>\",\n                        \"initialDelaySeconds\": \"<integer>\",\n                        \"httpGet\": {\n                          \"path\": \"<string>\",\n                          \"port\": \"<integer>\"\n                        }\n                      },\n                      \"requestResources\": {\n                        \"cpu\": \"<string>\",\n                        \"memory\": \"<string>\"\n                      },\n                      \"resources\": {\n                        \"cpu\": \"<string>\",\n                        \"memory\": \"<string>\"\n                      },\n                      \"roles\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"requiredRoles\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"scale\": \"NONE\",\n                      \"settings\": [\n                        {\n                          \"key\": \"<string>\",\n                          \"valueSchema\": {\n                            \"type\": \"<string>\"\n                          },\n                          \"defaultValue\": \"<string>\",\n                          \"editable\": \"<boolean>\",\n                          \"inheritFromOwner\": \"<boolean>\"\n                        },\n                        {\n                          \"key\": \"<string>\",\n                          \"valueSchema\": {\n                            \"type\": \"<string>\"\n                          },\n                          \"defaultValue\": \"<string>\",\n                          \"editable\": \"<boolean>\",\n                          \"inheritFromOwner\": \"<boolean>\"\n                        }\n                      ],\n                      \"settingsCategory\": \"<string>\",\n                      \"version\": \"<string>\"\n                    },\n                    \"roles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"requiredRoles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"breadcrumbs\": \"<boolean>\",\n                    \"contentSecurityPolicy\": \"<string>\",\n                    \"dynamicOptionsUrl\": \"<string>\",\n                    \"globalTitle\": \"<string>\",\n                    \"legacy\": \"<boolean>\",\n                    \"rightDrawer\": \"<boolean>\",\n                    \"upgrade\": \"<boolean>\",\n                    \"activeVersionId\": \"<string>\",\n                    \"resourcesUrl\": \"<string>\"\n                  },\n                  {\n                    \"availability\": \"PRIVATE\",\n                    \"contextPath\": \"<string>\",\n                    \"description\": \"<string>\",\n                    \"id\": \"<string>\",\n                    \"key\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"owner\": {\n                      \"self\": \"<uri>\",\n                      \"tenant\": {\n                        \"id\": \"<string>\"\n                      }\n                    },\n                    \"self\": \"<uri>\",\n                    \"type\": \"EXTERNAL\",\n                    \"manifest\": {\n                      \"apiVersion\": \"<string>\",\n                      \"billingMode\": \"RESOURCES\",\n                      \"contextPath\": \"<string>\",\n                      \"extensions\": [\n                        {\n                          \"path\": \"<string>\",\n                          \"type\": \"<string>\"\n                        },\n                        {\n                          \"path\": \"<string>\",\n                          \"type\": \"<string>\"\n                        }\n                      ],\n                      \"isolation\": \"MULTI_TENANT\",\n                      \"livenessProbe\": {\n                        \"failureThreshold\": \"<integer>\",\n                        \"periodSeconds\": \"<integer>\",\n                        \"timeoutSeconds\": \"<integer>\",\n                        \"successThreshold\": \"<integer>\",\n                        \"initialDelaySeconds\": \"<integer>\",\n                        \"httpGet\": {\n                          \"path\": \"<string>\",\n                          \"port\": \"<integer>\"\n                        }\n                      },\n                      \"provider\": {\n                        \"name\": \"<string>\"\n                      },\n                      \"readinessProbe\": {\n                        \"failureThreshold\": \"<integer>\",\n                        \"periodSeconds\": \"<integer>\",\n                        \"timeoutSeconds\": \"<integer>\",\n                        \"successThreshold\": \"<integer>\",\n                        \"initialDelaySeconds\": \"<integer>\",\n                        \"httpGet\": {\n                          \"path\": \"<string>\",\n                          \"port\": \"<integer>\"\n                        }\n                      },\n                      \"requestResources\": {\n                        \"cpu\": \"<string>\",\n                        \"memory\": \"<string>\"\n                      },\n                      \"resources\": {\n                        \"cpu\": \"<string>\",\n                        \"memory\": \"<string>\"\n                      },\n                      \"roles\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"requiredRoles\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"scale\": \"NONE\",\n                      \"settings\": [\n                        {\n                          \"key\": \"<string>\",\n                          \"valueSchema\": {\n                            \"type\": \"<string>\"\n                          },\n                          \"defaultValue\": \"<string>\",\n                          \"editable\": \"<boolean>\",\n                          \"inheritFromOwner\": \"<boolean>\"\n                        },\n                        {\n                          \"key\": \"<string>\",\n                          \"valueSchema\": {\n                            \"type\": \"<string>\"\n                          },\n                          \"defaultValue\": \"<string>\",\n                          \"editable\": \"<boolean>\",\n                          \"inheritFromOwner\": \"<boolean>\"\n                        }\n                      ],\n                      \"settingsCategory\": \"<string>\",\n                      \"version\": \"<string>\"\n                    },\n                    \"roles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"requiredRoles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"breadcrumbs\": \"<boolean>\",\n                    \"contentSecurityPolicy\": \"<string>\",\n                    \"dynamicOptionsUrl\": \"<string>\",\n                    \"globalTitle\": \"<string>\",\n                    \"legacy\": \"<boolean>\",\n                    \"rightDrawer\": \"<boolean>\",\n                    \"upgrade\": \"<boolean>\",\n                    \"activeVersionId\": \"<string>\",\n                    \"resourcesUrl\": \"<string>\"\n                  }\n                ],\n                \"customProperties\": {\n                  \"language\": \"<string>\"\n                },\n                \"description\": \"<string>\",\n                \"devicePermissions\": {\n                  \"sint_0\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"Excepteur_43\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"incididunt_e\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ]\n                },\n                \"id\": \"<integer>\",\n                \"roles\": {\n                  \"self\": \"<uri>\",\n                  \"references\": [\n                    {\n                      \"role\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\",\n                        \"self\": \"<uri>\"\n                      },\n                      \"self\": \"<uri>\"\n                    },\n                    {\n                      \"role\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\",\n                        \"self\": \"<uri>\"\n                      },\n                      \"self\": \"<uri>\"\n                    }\n                  ],\n                  \"statistics\": {\n                    \"currentPage\": \"<integer>\",\n                    \"pageSize\": \"<integer>\",\n                    \"totalElements\": \"<integer>\",\n                    \"totalPages\": \"<integer>\"\n                  }\n                },\n                \"self\": \"<uri>\",\n                \"users\": {\n                  \"self\": \"<uri>\",\n                  \"references\": [\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                    },\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                    }\n                  ]\n                }\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"statistics\": {\n            \"currentPage\": \"<integer>\",\n            \"pageSize\": \"<integer>\",\n            \"totalElements\": \"<integer>\",\n            \"totalPages\": \"<integer>\"\n          }\n        },\n        \"id\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"lastPasswordChange\": \"<dateTime>\",\n        \"newsletter\": \"<boolean>\",\n        \"owner\": \"<string>\",\n        \"passwordStrength\": \"YELLOW\",\n        \"phone\": \"<string>\",\n        \"roles\": {\n          \"self\": \"<uri>\",\n          \"references\": [\n            {\n              \"role\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"role\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"statistics\": {\n            \"currentPage\": \"<integer>\",\n            \"pageSize\": \"<integer>\",\n            \"totalElements\": \"<integer>\",\n            \"totalPages\": \"<integer>\"\n          }\n        },\n        \"self\": \"<uri>\",\n        \"shouldResetPassword\": \"<boolean>\",\n        \"twoFactorAuthenticationEnabled\": false,\n        \"userName\": \"<string>\",\n        \"devicePermissions\": {\n          \"reprehenderite\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"aliquaf79\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      }\n    },\n    {\n      \"self\": \"<uri>\",\n      \"user\": {\n        \"applications\": [\n          {\n            \"availability\": \"PRIVATE\",\n            \"contextPath\": \"<string>\",\n            \"description\": \"<string>\",\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"owner\": {\n              \"self\": \"<uri>\",\n              \"tenant\": {\n                \"id\": \"<string>\"\n              }\n            },\n            \"self\": \"<uri>\",\n            \"type\": \"HOSTED\",\n            \"manifest\": {\n              \"apiVersion\": \"<string>\",\n              \"billingMode\": \"RESOURCES\",\n              \"contextPath\": \"<string>\",\n              \"extensions\": [\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"isolation\": \"PER_TENANT\",\n              \"livenessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"provider\": {\n                \"name\": \"<string>\"\n              },\n              \"readinessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"requestResources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"resources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"scale\": \"NONE\",\n              \"settings\": [\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                },\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                }\n              ],\n              \"settingsCategory\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"breadcrumbs\": \"<boolean>\",\n            \"contentSecurityPolicy\": \"<string>\",\n            \"dynamicOptionsUrl\": \"<string>\",\n            \"globalTitle\": \"<string>\",\n            \"legacy\": \"<boolean>\",\n            \"rightDrawer\": \"<boolean>\",\n            \"upgrade\": \"<boolean>\",\n            \"activeVersionId\": \"<string>\",\n            \"resourcesUrl\": \"<string>\"\n          },\n          {\n            \"availability\": \"PRIVATE\",\n            \"contextPath\": \"<string>\",\n            \"description\": \"<string>\",\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"owner\": {\n              \"self\": \"<uri>\",\n              \"tenant\": {\n                \"id\": \"<string>\"\n              }\n            },\n            \"self\": \"<uri>\",\n            \"type\": \"HOSTED\",\n            \"manifest\": {\n              \"apiVersion\": \"<string>\",\n              \"billingMode\": \"RESOURCES\",\n              \"contextPath\": \"<string>\",\n              \"extensions\": [\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"isolation\": \"PER_TENANT\",\n              \"livenessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"provider\": {\n                \"name\": \"<string>\"\n              },\n              \"readinessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"requestResources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"resources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"scale\": \"NONE\",\n              \"settings\": [\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                },\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                }\n              ],\n              \"settingsCategory\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"breadcrumbs\": \"<boolean>\",\n            \"contentSecurityPolicy\": \"<string>\",\n            \"dynamicOptionsUrl\": \"<string>\",\n            \"globalTitle\": \"<string>\",\n            \"legacy\": \"<boolean>\",\n            \"rightDrawer\": \"<boolean>\",\n            \"upgrade\": \"<boolean>\",\n            \"activeVersionId\": \"<string>\",\n            \"resourcesUrl\": \"<string>\"\n          }\n        ],\n        \"customProperties\": {\n          \"language\": \"<string>\",\n          \"reprehenderit31e\": {\n            \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n            \"x-additionalPropertiesName\": \"customProperties\"\n          },\n          \"consectetur7\": {\n            \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n            \"x-additionalPropertiesName\": \"customProperties\"\n          },\n          \"ad_6cf\": {\n            \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n            \"x-additionalPropertiesName\": \"customProperties\"\n          }\n        },\n        \"displayName\": \"<string>\",\n        \"email\": \"<email>\",\n        \"enabled\": true,\n        \"firstName\": \"<string>\",\n        \"groups\": {\n          \"self\": \"<uri>\",\n          \"references\": [\n            {\n              \"group\": {\n                \"name\": \"<string>\",\n                \"applications\": [\n                  {\n                    \"availability\": \"PRIVATE\",\n                    \"contextPath\": \"<string>\",\n                    \"description\": \"<string>\",\n                    \"id\": \"<string>\",\n                    \"key\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"owner\": {\n                      \"self\": \"<uri>\",\n                      \"tenant\": {\n                        \"id\": \"<string>\"\n                      }\n                    },\n                    \"self\": \"<uri>\",\n                    \"type\": \"EXTERNAL\",\n                    \"manifest\": {\n                      \"apiVersion\": \"<string>\",\n                      \"billingMode\": \"RESOURCES\",\n                      \"contextPath\": \"<string>\",\n                      \"extensions\": [\n                        {\n                          \"path\": \"<string>\",\n                          \"type\": \"<string>\"\n                        },\n                        {\n                          \"path\": \"<string>\",\n                          \"type\": \"<string>\"\n                        }\n                      ],\n                      \"isolation\": \"MULTI_TENANT\",\n                      \"livenessProbe\": {\n                        \"failureThreshold\": \"<integer>\",\n                        \"periodSeconds\": \"<integer>\",\n                        \"timeoutSeconds\": \"<integer>\",\n                        \"successThreshold\": \"<integer>\",\n                        \"initialDelaySeconds\": \"<integer>\",\n                        \"httpGet\": {\n                          \"path\": \"<string>\",\n                          \"port\": \"<integer>\"\n                        }\n                      },\n                      \"provider\": {\n                        \"name\": \"<string>\"\n                      },\n                      \"readinessProbe\": {\n                        \"failureThreshold\": \"<integer>\",\n                        \"periodSeconds\": \"<integer>\",\n                        \"timeoutSeconds\": \"<integer>\",\n                        \"successThreshold\": \"<integer>\",\n                        \"initialDelaySeconds\": \"<integer>\",\n                        \"httpGet\": {\n                          \"path\": \"<string>\",\n                          \"port\": \"<integer>\"\n                        }\n                      },\n                      \"requestResources\": {\n                        \"cpu\": \"<string>\",\n                        \"memory\": \"<string>\"\n                      },\n                      \"resources\": {\n                        \"cpu\": \"<string>\",\n                        \"memory\": \"<string>\"\n                      },\n                      \"roles\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"requiredRoles\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"scale\": \"NONE\",\n                      \"settings\": [\n                        {\n                          \"key\": \"<string>\",\n                          \"valueSchema\": {\n                            \"type\": \"<string>\"\n                          },\n                          \"defaultValue\": \"<string>\",\n                          \"editable\": \"<boolean>\",\n                          \"inheritFromOwner\": \"<boolean>\"\n                        },\n                        {\n                          \"key\": \"<string>\",\n                          \"valueSchema\": {\n                            \"type\": \"<string>\"\n                          },\n                          \"defaultValue\": \"<string>\",\n                          \"editable\": \"<boolean>\",\n                          \"inheritFromOwner\": \"<boolean>\"\n                        }\n                      ],\n                      \"settingsCategory\": \"<string>\",\n                      \"version\": \"<string>\"\n                    },\n                    \"roles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"requiredRoles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"breadcrumbs\": \"<boolean>\",\n                    \"contentSecurityPolicy\": \"<string>\",\n                    \"dynamicOptionsUrl\": \"<string>\",\n                    \"globalTitle\": \"<string>\",\n                    \"legacy\": \"<boolean>\",\n                    \"rightDrawer\": \"<boolean>\",\n                    \"upgrade\": \"<boolean>\",\n                    \"activeVersionId\": \"<string>\",\n                    \"resourcesUrl\": \"<string>\"\n                  },\n                  {\n                    \"availability\": \"PRIVATE\",\n                    \"contextPath\": \"<string>\",\n                    \"description\": \"<string>\",\n                    \"id\": \"<string>\",\n                    \"key\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"owner\": {\n                      \"self\": \"<uri>\",\n                      \"tenant\": {\n                        \"id\": \"<string>\"\n                      }\n                    },\n                    \"self\": \"<uri>\",\n                    \"type\": \"EXTERNAL\",\n                    \"manifest\": {\n                      \"apiVersion\": \"<string>\",\n                      \"billingMode\": \"RESOURCES\",\n                      \"contextPath\": \"<string>\",\n                      \"extensions\": [\n                        {\n                          \"path\": \"<string>\",\n                          \"type\": \"<string>\"\n                        },\n                        {\n                          \"path\": \"<string>\",\n                          \"type\": \"<string>\"\n                        }\n                      ],\n                      \"isolation\": \"MULTI_TENANT\",\n                      \"livenessProbe\": {\n                        \"failureThreshold\": \"<integer>\",\n                        \"periodSeconds\": \"<integer>\",\n                        \"timeoutSeconds\": \"<integer>\",\n                        \"successThreshold\": \"<integer>\",\n                        \"initialDelaySeconds\": \"<integer>\",\n                        \"httpGet\": {\n                          \"path\": \"<string>\",\n                          \"port\": \"<integer>\"\n                        }\n                      },\n                      \"provider\": {\n                        \"name\": \"<string>\"\n                      },\n                      \"readinessProbe\": {\n                        \"failureThreshold\": \"<integer>\",\n                        \"periodSeconds\": \"<integer>\",\n                        \"timeoutSeconds\": \"<integer>\",\n                        \"successThreshold\": \"<integer>\",\n                        \"initialDelaySeconds\": \"<integer>\",\n                        \"httpGet\": {\n                          \"path\": \"<string>\",\n                          \"port\": \"<integer>\"\n                        }\n                      },\n                      \"requestResources\": {\n                        \"cpu\": \"<string>\",\n                        \"memory\": \"<string>\"\n                      },\n                      \"resources\": {\n                        \"cpu\": \"<string>\",\n                        \"memory\": \"<string>\"\n                      },\n                      \"roles\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"requiredRoles\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"scale\": \"NONE\",\n                      \"settings\": [\n                        {\n                          \"key\": \"<string>\",\n                          \"valueSchema\": {\n                            \"type\": \"<string>\"\n                          },\n                          \"defaultValue\": \"<string>\",\n                          \"editable\": \"<boolean>\",\n                          \"inheritFromOwner\": \"<boolean>\"\n                        },\n                        {\n                          \"key\": \"<string>\",\n                          \"valueSchema\": {\n                            \"type\": \"<string>\"\n                          },\n                          \"defaultValue\": \"<string>\",\n                          \"editable\": \"<boolean>\",\n                          \"inheritFromOwner\": \"<boolean>\"\n                        }\n                      ],\n                      \"settingsCategory\": \"<string>\",\n                      \"version\": \"<string>\"\n                    },\n                    \"roles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"requiredRoles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"breadcrumbs\": \"<boolean>\",\n                    \"contentSecurityPolicy\": \"<string>\",\n                    \"dynamicOptionsUrl\": \"<string>\",\n                    \"globalTitle\": \"<string>\",\n                    \"legacy\": \"<boolean>\",\n                    \"rightDrawer\": \"<boolean>\",\n                    \"upgrade\": \"<boolean>\",\n                    \"activeVersionId\": \"<string>\",\n                    \"resourcesUrl\": \"<string>\"\n                  }\n                ],\n                \"customProperties\": {\n                  \"language\": \"<string>\"\n                },\n                \"description\": \"<string>\",\n                \"devicePermissions\": {\n                  \"veniam_f7_\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ]\n                },\n                \"id\": \"<integer>\",\n                \"roles\": {\n                  \"self\": \"<uri>\",\n                  \"references\": [\n                    {\n                      \"role\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\",\n                        \"self\": \"<uri>\"\n                      },\n                      \"self\": \"<uri>\"\n                    },\n                    {\n                      \"role\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\",\n                        \"self\": \"<uri>\"\n                      },\n                      \"self\": \"<uri>\"\n                    }\n                  ],\n                  \"statistics\": {\n                    \"currentPage\": \"<integer>\",\n                    \"pageSize\": \"<integer>\",\n                    \"totalElements\": \"<integer>\",\n                    \"totalPages\": \"<integer>\"\n                  }\n                },\n                \"self\": \"<uri>\",\n                \"users\": {\n                  \"self\": \"<uri>\",\n                  \"references\": [\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                    },\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                    }\n                  ]\n                }\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"group\": {\n                \"name\": \"<string>\",\n                \"applications\": [\n                  {\n                    \"availability\": \"PRIVATE\",\n                    \"contextPath\": \"<string>\",\n                    \"description\": \"<string>\",\n                    \"id\": \"<string>\",\n                    \"key\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"owner\": {\n                      \"self\": \"<uri>\",\n                      \"tenant\": {\n                        \"id\": \"<string>\"\n                      }\n                    },\n                    \"self\": \"<uri>\",\n                    \"type\": \"EXTERNAL\",\n                    \"manifest\": {\n                      \"apiVersion\": \"<string>\",\n                      \"billingMode\": \"RESOURCES\",\n                      \"contextPath\": \"<string>\",\n                      \"extensions\": [\n                        {\n                          \"path\": \"<string>\",\n                          \"type\": \"<string>\"\n                        },\n                        {\n                          \"path\": \"<string>\",\n                          \"type\": \"<string>\"\n                        }\n                      ],\n                      \"isolation\": \"PER_TENANT\",\n                      \"livenessProbe\": {\n                        \"failureThreshold\": \"<integer>\",\n                        \"periodSeconds\": \"<integer>\",\n                        \"timeoutSeconds\": \"<integer>\",\n                        \"successThreshold\": \"<integer>\",\n                        \"initialDelaySeconds\": \"<integer>\",\n                        \"httpGet\": {\n                          \"path\": \"<string>\",\n                          \"port\": \"<integer>\"\n                        }\n                      },\n                      \"provider\": {\n                        \"name\": \"<string>\"\n                      },\n                      \"readinessProbe\": {\n                        \"failureThreshold\": \"<integer>\",\n                        \"periodSeconds\": \"<integer>\",\n                        \"timeoutSeconds\": \"<integer>\",\n                        \"successThreshold\": \"<integer>\",\n                        \"initialDelaySeconds\": \"<integer>\",\n                        \"httpGet\": {\n                          \"path\": \"<string>\",\n                          \"port\": \"<integer>\"\n                        }\n                      },\n                      \"requestResources\": {\n                        \"cpu\": \"<string>\",\n                        \"memory\": \"<string>\"\n                      },\n                      \"resources\": {\n                        \"cpu\": \"<string>\",\n                        \"memory\": \"<string>\"\n                      },\n                      \"roles\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"requiredRoles\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"scale\": \"NONE\",\n                      \"settings\": [\n                        {\n                          \"key\": \"<string>\",\n                          \"valueSchema\": {\n                            \"type\": \"<string>\"\n                          },\n                          \"defaultValue\": \"<string>\",\n                          \"editable\": \"<boolean>\",\n                          \"inheritFromOwner\": \"<boolean>\"\n                        },\n                        {\n                          \"key\": \"<string>\",\n                          \"valueSchema\": {\n                            \"type\": \"<string>\"\n                          },\n                          \"defaultValue\": \"<string>\",\n                          \"editable\": \"<boolean>\",\n                          \"inheritFromOwner\": \"<boolean>\"\n                        }\n                      ],\n                      \"settingsCategory\": \"<string>\",\n                      \"version\": \"<string>\"\n                    },\n                    \"roles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"requiredRoles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"breadcrumbs\": \"<boolean>\",\n                    \"contentSecurityPolicy\": \"<string>\",\n                    \"dynamicOptionsUrl\": \"<string>\",\n                    \"globalTitle\": \"<string>\",\n                    \"legacy\": \"<boolean>\",\n                    \"rightDrawer\": \"<boolean>\",\n                    \"upgrade\": \"<boolean>\",\n                    \"activeVersionId\": \"<string>\",\n                    \"resourcesUrl\": \"<string>\"\n                  },\n                  {\n                    \"availability\": \"PRIVATE\",\n                    \"contextPath\": \"<string>\",\n                    \"description\": \"<string>\",\n                    \"id\": \"<string>\",\n                    \"key\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"owner\": {\n                      \"self\": \"<uri>\",\n                      \"tenant\": {\n                        \"id\": \"<string>\"\n                      }\n                    },\n                    \"self\": \"<uri>\",\n                    \"type\": \"MICROSERVICE\",\n                    \"manifest\": {\n                      \"apiVersion\": \"<string>\",\n                      \"billingMode\": \"RESOURCES\",\n                      \"contextPath\": \"<string>\",\n                      \"extensions\": [\n                        {\n                          \"path\": \"<string>\",\n                          \"type\": \"<string>\"\n                        },\n                        {\n                          \"path\": \"<string>\",\n                          \"type\": \"<string>\"\n                        }\n                      ],\n                      \"isolation\": \"MULTI_TENANT\",\n                      \"livenessProbe\": {\n                        \"failureThreshold\": \"<integer>\",\n                        \"periodSeconds\": \"<integer>\",\n                        \"timeoutSeconds\": \"<integer>\",\n                        \"successThreshold\": \"<integer>\",\n                        \"initialDelaySeconds\": \"<integer>\",\n                        \"httpGet\": {\n                          \"path\": \"<string>\",\n                          \"port\": \"<integer>\"\n                        }\n                      },\n                      \"provider\": {\n                        \"name\": \"<string>\"\n                      },\n                      \"readinessProbe\": {\n                        \"failureThreshold\": \"<integer>\",\n                        \"periodSeconds\": \"<integer>\",\n                        \"timeoutSeconds\": \"<integer>\",\n                        \"successThreshold\": \"<integer>\",\n                        \"initialDelaySeconds\": \"<integer>\",\n                        \"httpGet\": {\n                          \"path\": \"<string>\",\n                          \"port\": \"<integer>\"\n                        }\n                      },\n                      \"requestResources\": {\n                        \"cpu\": \"<string>\",\n                        \"memory\": \"<string>\"\n                      },\n                      \"resources\": {\n                        \"cpu\": \"<string>\",\n                        \"memory\": \"<string>\"\n                      },\n                      \"roles\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"requiredRoles\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"scale\": \"NONE\",\n                      \"settings\": [\n                        {\n                          \"key\": \"<string>\",\n                          \"valueSchema\": {\n                            \"type\": \"<string>\"\n                          },\n                          \"defaultValue\": \"<string>\",\n                          \"editable\": \"<boolean>\",\n                          \"inheritFromOwner\": \"<boolean>\"\n                        },\n                        {\n                          \"key\": \"<string>\",\n                          \"valueSchema\": {\n                            \"type\": \"<string>\"\n                          },\n                          \"defaultValue\": \"<string>\",\n                          \"editable\": \"<boolean>\",\n                          \"inheritFromOwner\": \"<boolean>\"\n                        }\n                      ],\n                      \"settingsCategory\": \"<string>\",\n                      \"version\": \"<string>\"\n                    },\n                    \"roles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"requiredRoles\": [\n                      \"<string>\",\n                      \"<string>\"\n                    ],\n                    \"breadcrumbs\": \"<boolean>\",\n                    \"contentSecurityPolicy\": \"<string>\",\n                    \"dynamicOptionsUrl\": \"<string>\",\n                    \"globalTitle\": \"<string>\",\n                    \"legacy\": \"<boolean>\",\n                    \"rightDrawer\": \"<boolean>\",\n                    \"upgrade\": \"<boolean>\",\n                    \"activeVersionId\": \"<string>\",\n                    \"resourcesUrl\": \"<string>\"\n                  }\n                ],\n                \"customProperties\": {\n                  \"language\": \"<string>\",\n                  \"eiusmod_7\": {\n                    \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n                    \"x-additionalPropertiesName\": \"customProperties\"\n                  },\n                  \"ea_71b\": {\n                    \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n                    \"x-additionalPropertiesName\": \"customProperties\"\n                  },\n                  \"fugiat2d8\": {\n                    \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n                    \"x-additionalPropertiesName\": \"customProperties\"\n                  }\n                },\n                \"description\": \"<string>\",\n                \"devicePermissions\": {\n                  \"occaecat_9\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"ea_f2b\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"exercitationf05\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"exercitation_ce9\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ]\n                },\n                \"id\": \"<integer>\",\n                \"roles\": {\n                  \"self\": \"<uri>\",\n                  \"references\": [\n                    {\n                      \"role\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\",\n                        \"self\": \"<uri>\"\n                      },\n                      \"self\": \"<uri>\"\n                    },\n                    {\n                      \"role\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\",\n                        \"self\": \"<uri>\"\n                      },\n                      \"self\": \"<uri>\"\n                    }\n                  ],\n                  \"statistics\": {\n                    \"currentPage\": \"<integer>\",\n                    \"pageSize\": \"<integer>\",\n                    \"totalElements\": \"<integer>\",\n                    \"totalPages\": \"<integer>\"\n                  }\n                },\n                \"self\": \"<uri>\",\n                \"users\": {\n                  \"self\": \"<uri>\",\n                  \"references\": [\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                    },\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n                    }\n                  ]\n                }\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"statistics\": {\n            \"currentPage\": \"<integer>\",\n            \"pageSize\": \"<integer>\",\n            \"totalElements\": \"<integer>\",\n            \"totalPages\": \"<integer>\"\n          }\n        },\n        \"id\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"lastPasswordChange\": \"<dateTime>\",\n        \"newsletter\": \"<boolean>\",\n        \"owner\": \"<string>\",\n        \"passwordStrength\": \"RED\",\n        \"phone\": \"<string>\",\n        \"roles\": {\n          \"self\": \"<uri>\",\n          \"references\": [\n            {\n              \"role\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            },\n            {\n              \"role\": {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"self\": \"<uri>\"\n              },\n              \"self\": \"<uri>\"\n            }\n          ],\n          \"statistics\": {\n            \"currentPage\": \"<integer>\",\n            \"pageSize\": \"<integer>\",\n            \"totalElements\": \"<integer>\",\n            \"totalPages\": \"<integer>\"\n          }\n        },\n        \"self\": \"<uri>\",\n        \"shouldResetPassword\": \"<boolean>\",\n        \"twoFactorAuthenticationEnabled\": false,\n        \"userName\": \"<string>\",\n        \"devicePermissions\": {\n          \"labore_2\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      }\n    }\n  ],\n  \"self\": \"<uri>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  }\n}"
                            },
                            {
                              "name": "Authentication information is missing or invalid.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/users?currentPage=1&pageSize=5&withTotalElements=false",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "groups",
                                    ":groupId",
                                    "users"
                                  ],
                                  "query": [
                                    {
                                      "key": "currentPage",
                                      "value": "1",
                                      "description": "The current page of the paginated results."
                                    },
                                    {
                                      "key": "pageSize",
                                      "value": "5",
                                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                    },
                                    {
                                      "key": "withTotalElements",
                                      "value": "false",
                                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                    }
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "groupId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Not enough permissions/roles to perform this operation.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/users?currentPage=1&pageSize=5&withTotalElements=false",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "groups",
                                    ":groupId",
                                    "users"
                                  ],
                                  "query": [
                                    {
                                      "key": "currentPage",
                                      "value": "1",
                                      "description": "The current page of the paginated results."
                                    },
                                    {
                                      "key": "pageSize",
                                      "value": "5",
                                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                    },
                                    {
                                      "key": "withTotalElements",
                                      "value": "false",
                                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                    }
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "groupId"
                                    }
                                  ]
                                }
                              },
                              "status": "Forbidden",
                              "code": 403,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Group not found.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId/users?currentPage=1&pageSize=5&withTotalElements=false",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "user",
                                    ":tenantId",
                                    "groups",
                                    ":groupId",
                                    "users"
                                  ],
                                  "query": [
                                    {
                                      "key": "currentPage",
                                      "value": "1",
                                      "description": "The current page of the paginated results."
                                    },
                                    {
                                      "key": "pageSize",
                                      "value": "5",
                                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                    },
                                    {
                                      "key": "withTotalElements",
                                      "value": "false",
                                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                    }
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "groupId"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Retrieve a specific user group for a specific tenant",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.group+json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId?forceLogout=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            ":tenantId",
                            "groups",
                            ":groupId"
                          ],
                          "query": [
                            {
                              "key": "forceLogout",
                              "value": "false",
                              "description": "If set to `true`, users with this global role will be force logged out."
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantId",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of a Cumulocity tenant."
                            },
                            {
                              "key": "groupId",
                              "value": "<integer>",
                              "description": "(Required) Unique identifier of the user group."
                            }
                          ]
                        },
                        "description": "Retrieve a specific user group (by a given user group ID) for a specific tenant (by a given tenant ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_ADMIN <b>OR</b> ROLE_USER_MANAGEMENT_CREATE <b>AND</b> is parent of the user <b>AND</b> is not the current user\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The request succeeded and the user group is sent in the response.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.group+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId?forceLogout=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "groups",
                                ":groupId"
                              ],
                              "query": [
                                {
                                  "key": "forceLogout",
                                  "value": "false",
                                  "description": "If set to `true`, users with this global role will be force logged out."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "groupId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.group+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"name\": \"<string>\",\n  \"applications\": [\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"HOSTED\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"MULTI_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    },\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"EXTERNAL\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"PER_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    }\n  ],\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"dolore6\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"cupidatat26d\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"description\": \"<string>\",\n  \"devicePermissions\": {\n    \"sit__7\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"id\": \"<integer>\",\n  \"roles\": {\n    \"self\": \"<uri>\",\n    \"references\": [\n      {\n        \"role\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"role\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"statistics\": {\n      \"currentPage\": \"<integer>\",\n      \"pageSize\": \"<integer>\",\n      \"totalElements\": \"<integer>\",\n      \"totalPages\": \"<integer>\"\n    }\n  },\n  \"self\": \"<uri>\",\n  \"users\": {\n    \"self\": \"<uri>\",\n    \"references\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n      }\n    ]\n  }\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId?forceLogout=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "groups",
                                ":groupId"
                              ],
                              "query": [
                                {
                                  "key": "forceLogout",
                                  "value": "false",
                                  "description": "If set to `true`, users with this global role will be force logged out."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "groupId"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Not enough permissions/roles to perform this operation.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId?forceLogout=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "groups",
                                ":groupId"
                              ],
                              "query": [
                                {
                                  "key": "forceLogout",
                                  "value": "false",
                                  "description": "If set to `true`, users with this global role will be force logged out."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "groupId"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Group not found.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId?forceLogout=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "groups",
                                ":groupId"
                              ],
                              "query": [
                                {
                                  "key": "forceLogout",
                                  "value": "false",
                                  "description": "If set to `true`, users with this global role will be force logged out."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "groupId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    },
                    {
                      "name": "Update a specific user group for a specific tenant",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.group+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.group+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"labore_7c1\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"description\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId?forceLogout=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            ":tenantId",
                            "groups",
                            ":groupId"
                          ],
                          "query": [
                            {
                              "key": "forceLogout",
                              "value": "false",
                              "description": "If set to `true`, users with this global role will be force logged out."
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantId",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of a Cumulocity tenant."
                            },
                            {
                              "key": "groupId",
                              "value": "<integer>",
                              "description": "(Required) Unique identifier of the user group."
                            }
                          ]
                        },
                        "description": "Update a specific user group (by a given user group ID) for a specific tenant (by a given tenant ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_ADMIN\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "A user group was updated.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.group+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.group+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"name\": \"<string>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"labore_7c1\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"description\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId?forceLogout=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "groups",
                                ":groupId"
                              ],
                              "query": [
                                {
                                  "key": "forceLogout",
                                  "value": "false",
                                  "description": "If set to `true`, users with this global role will be force logged out."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "groupId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.group+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"name\": \"<string>\",\n  \"applications\": [\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"HOSTED\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"MULTI_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    },\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"EXTERNAL\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"PER_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    }\n  ],\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"dolore6\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"cupidatat26d\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"description\": \"<string>\",\n  \"devicePermissions\": {\n    \"sit__7\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"id\": \"<integer>\",\n  \"roles\": {\n    \"self\": \"<uri>\",\n    \"references\": [\n      {\n        \"role\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"role\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"statistics\": {\n      \"currentPage\": \"<integer>\",\n      \"pageSize\": \"<integer>\",\n      \"totalElements\": \"<integer>\",\n      \"totalPages\": \"<integer>\"\n    }\n  },\n  \"self\": \"<uri>\",\n  \"users\": {\n    \"self\": \"<uri>\",\n    \"references\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n      }\n    ]\n  }\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.group+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"name\": \"<string>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"labore_7c1\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"description\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId?forceLogout=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "groups",
                                ":groupId"
                              ],
                              "query": [
                                {
                                  "key": "forceLogout",
                                  "value": "false",
                                  "description": "If set to `true`, users with this global role will be force logged out."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "groupId"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Not enough permissions/roles to perform this operation.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.group+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"name\": \"<string>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"labore_7c1\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"description\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId?forceLogout=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "groups",
                                ":groupId"
                              ],
                              "query": [
                                {
                                  "key": "forceLogout",
                                  "value": "false",
                                  "description": "If set to `true`, users with this global role will be force logged out."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "groupId"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Group not found.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.group+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"name\": \"<string>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"labore_7c1\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"description\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId?forceLogout=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "groups",
                                ":groupId"
                              ],
                              "query": [
                                {
                                  "key": "forceLogout",
                                  "value": "false",
                                  "description": "If set to `true`, users with this global role will be force logged out."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "groupId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Unprocessable Entity – invalid payload.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.group+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"name\": \"<string>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"labore_7c1\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"description\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId?forceLogout=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "groups",
                                ":groupId"
                              ],
                              "query": [
                                {
                                  "key": "forceLogout",
                                  "value": "false",
                                  "description": "If set to `true`, users with this global role will be force logged out."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "groupId"
                                }
                              ]
                            }
                          },
                          "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                          "code": 422,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "Delete a specific user group for a specific tenant",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId?forceLogout=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            ":tenantId",
                            "groups",
                            ":groupId"
                          ],
                          "query": [
                            {
                              "key": "forceLogout",
                              "value": "false",
                              "description": "If set to `true`, users with this global role will be force logged out."
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantId",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of a Cumulocity tenant."
                            },
                            {
                              "key": "groupId",
                              "value": "<integer>",
                              "description": "(Required) Unique identifier of the user group."
                            }
                          ]
                        },
                        "description": "Delete a specific user group (by a given user group ID) for a specific tenant (by a given tenant ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_ADMIN\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "A user group was removed.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId?forceLogout=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "groups",
                                ":groupId"
                              ],
                              "query": [
                                {
                                  "key": "forceLogout",
                                  "value": "false",
                                  "description": "If set to `true`, users with this global role will be force logged out."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "groupId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId?forceLogout=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "groups",
                                ":groupId"
                              ],
                              "query": [
                                {
                                  "key": "forceLogout",
                                  "value": "false",
                                  "description": "If set to `true`, users with this global role will be force logged out."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "groupId"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Not authorized to perform this operation.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId?forceLogout=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "groups",
                                ":groupId"
                              ],
                              "query": [
                                {
                                  "key": "forceLogout",
                                  "value": "false",
                                  "description": "If set to `true`, users with this global role will be force logged out."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "groupId"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Group not found.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/groups/:groupId?forceLogout=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "groups",
                                ":groupId"
                              ],
                              "query": [
                                {
                                  "key": "forceLogout",
                                  "value": "false",
                                  "description": "If set to `true`, users with this global role will be force logged out."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "groupId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Create a user group for a specific tenant",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.group+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.group+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"labore_7c1\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"description\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/user/:tenantId/groups",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        ":tenantId",
                        "groups"
                      ],
                      "variable": [
                        {
                          "key": "tenantId",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of a Cumulocity tenant."
                        }
                      ]
                    },
                    "description": "Create a user group for a specific tenant (by a given tenant ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_ADMIN\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "A user group was created.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.group+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.group+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"labore_7c1\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"description\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/user/:tenantId/groups",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            ":tenantId",
                            "groups"
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.group+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"name\": \"<string>\",\n  \"applications\": [\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"HOSTED\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"MULTI_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    },\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"EXTERNAL\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"PER_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    }\n  ],\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"dolore6\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"cupidatat26d\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"description\": \"<string>\",\n  \"devicePermissions\": {\n    \"sit__7\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"id\": \"<integer>\",\n  \"roles\": {\n    \"self\": \"<uri>\",\n    \"references\": [\n      {\n        \"role\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"role\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"statistics\": {\n      \"currentPage\": \"<integer>\",\n      \"pageSize\": \"<integer>\",\n      \"totalElements\": \"<integer>\",\n      \"totalPages\": \"<integer>\"\n    }\n  },\n  \"self\": \"<uri>\",\n  \"users\": {\n    \"self\": \"<uri>\",\n    \"references\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n      }\n    ]\n  }\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.group+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"labore_7c1\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"description\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/user/:tenantId/groups",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            ":tenantId",
                            "groups"
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not enough permissions/roles to perform this operation.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.group+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"labore_7c1\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"description\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/user/:tenantId/groups",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            ":tenantId",
                            "groups"
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Duplicate – Group name already exists.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.group+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"labore_7c1\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"description\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/user/:tenantId/groups",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            ":tenantId",
                            "groups"
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "Conflict",
                      "code": 409,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Unprocessable Entity – invalid payload.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.group+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"labore_7c1\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"description\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/user/:tenantId/groups",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            ":tenantId",
                            "groups"
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                      "code": 422,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Retrieve all user groups of a specific tenant",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.groupcollection+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/user/:tenantId/groups?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        ":tenantId",
                        "groups"
                      ],
                      "query": [
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantId",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of a Cumulocity tenant."
                        }
                      ]
                    },
                    "description": "Retrieve all user groups of a specific tenant (by a given tenant ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_READ <b>OR</b> ROLE_USER_MANAGEMENT_CREATE\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and all user groups are sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.groupcollection+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/:tenantId/groups?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            ":tenantId",
                            "groups"
                          ],
                          "query": [
                            {
                              "key": "currentPage",
                              "value": "1",
                              "description": "The current page of the paginated results."
                            },
                            {
                              "key": "pageSize",
                              "value": "5",
                              "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                            },
                            {
                              "key": "withTotalElements",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                            },
                            {
                              "key": "withTotalPages",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.groupcollection+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"self\": \"<uri>\",\n  \"groups\": [\n    {\n      \"name\": \"<string>\",\n      \"applications\": [\n        {\n          \"availability\": \"PRIVATE\",\n          \"contextPath\": \"<string>\",\n          \"description\": \"<string>\",\n          \"id\": \"<string>\",\n          \"key\": \"<string>\",\n          \"name\": \"<string>\",\n          \"owner\": {\n            \"self\": \"<uri>\",\n            \"tenant\": {\n              \"id\": \"<string>\"\n            }\n          },\n          \"self\": \"<uri>\",\n          \"type\": \"HOSTED\",\n          \"manifest\": {\n            \"apiVersion\": \"<string>\",\n            \"billingMode\": \"RESOURCES\",\n            \"contextPath\": \"<string>\",\n            \"extensions\": [\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"isolation\": \"PER_TENANT\",\n            \"livenessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"provider\": {\n              \"name\": \"<string>\"\n            },\n            \"readinessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"requestResources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"resources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"scale\": \"NONE\",\n            \"settings\": [\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              },\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              }\n            ],\n            \"settingsCategory\": \"<string>\",\n            \"version\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"breadcrumbs\": \"<boolean>\",\n          \"contentSecurityPolicy\": \"<string>\",\n          \"dynamicOptionsUrl\": \"<string>\",\n          \"globalTitle\": \"<string>\",\n          \"legacy\": \"<boolean>\",\n          \"rightDrawer\": \"<boolean>\",\n          \"upgrade\": \"<boolean>\",\n          \"activeVersionId\": \"<string>\",\n          \"resourcesUrl\": \"<string>\"\n        },\n        {\n          \"availability\": \"PRIVATE\",\n          \"contextPath\": \"<string>\",\n          \"description\": \"<string>\",\n          \"id\": \"<string>\",\n          \"key\": \"<string>\",\n          \"name\": \"<string>\",\n          \"owner\": {\n            \"self\": \"<uri>\",\n            \"tenant\": {\n              \"id\": \"<string>\"\n            }\n          },\n          \"self\": \"<uri>\",\n          \"type\": \"EXTERNAL\",\n          \"manifest\": {\n            \"apiVersion\": \"<string>\",\n            \"billingMode\": \"RESOURCES\",\n            \"contextPath\": \"<string>\",\n            \"extensions\": [\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"isolation\": \"MULTI_TENANT\",\n            \"livenessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"provider\": {\n              \"name\": \"<string>\"\n            },\n            \"readinessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"requestResources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"resources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"scale\": \"NONE\",\n            \"settings\": [\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              },\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              }\n            ],\n            \"settingsCategory\": \"<string>\",\n            \"version\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"breadcrumbs\": \"<boolean>\",\n          \"contentSecurityPolicy\": \"<string>\",\n          \"dynamicOptionsUrl\": \"<string>\",\n          \"globalTitle\": \"<string>\",\n          \"legacy\": \"<boolean>\",\n          \"rightDrawer\": \"<boolean>\",\n          \"upgrade\": \"<boolean>\",\n          \"activeVersionId\": \"<string>\",\n          \"resourcesUrl\": \"<string>\"\n        }\n      ],\n      \"customProperties\": {\n        \"language\": \"<string>\",\n        \"consecteturbd\": {\n          \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n          \"x-additionalPropertiesName\": \"customProperties\"\n        },\n        \"exercitationa9\": {\n          \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n          \"x-additionalPropertiesName\": \"customProperties\"\n        }\n      },\n      \"description\": \"<string>\",\n      \"devicePermissions\": {\n        \"esse_1\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"id\": \"<integer>\",\n      \"roles\": {\n        \"self\": \"<uri>\",\n        \"references\": [\n          {\n            \"role\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          },\n          {\n            \"role\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          }\n        ],\n        \"statistics\": {\n          \"currentPage\": \"<integer>\",\n          \"pageSize\": \"<integer>\",\n          \"totalElements\": \"<integer>\",\n          \"totalPages\": \"<integer>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"users\": {\n        \"self\": \"<uri>\",\n        \"references\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"applications\": [\n        {\n          \"availability\": \"PRIVATE\",\n          \"contextPath\": \"<string>\",\n          \"description\": \"<string>\",\n          \"id\": \"<string>\",\n          \"key\": \"<string>\",\n          \"name\": \"<string>\",\n          \"owner\": {\n            \"self\": \"<uri>\",\n            \"tenant\": {\n              \"id\": \"<string>\"\n            }\n          },\n          \"self\": \"<uri>\",\n          \"type\": \"HOSTED\",\n          \"manifest\": {\n            \"apiVersion\": \"<string>\",\n            \"billingMode\": \"RESOURCES\",\n            \"contextPath\": \"<string>\",\n            \"extensions\": [\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"isolation\": \"MULTI_TENANT\",\n            \"livenessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"provider\": {\n              \"name\": \"<string>\"\n            },\n            \"readinessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"requestResources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"resources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"scale\": \"NONE\",\n            \"settings\": [\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              },\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              }\n            ],\n            \"settingsCategory\": \"<string>\",\n            \"version\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"breadcrumbs\": \"<boolean>\",\n          \"contentSecurityPolicy\": \"<string>\",\n          \"dynamicOptionsUrl\": \"<string>\",\n          \"globalTitle\": \"<string>\",\n          \"legacy\": \"<boolean>\",\n          \"rightDrawer\": \"<boolean>\",\n          \"upgrade\": \"<boolean>\",\n          \"activeVersionId\": \"<string>\",\n          \"resourcesUrl\": \"<string>\"\n        },\n        {\n          \"availability\": \"PRIVATE\",\n          \"contextPath\": \"<string>\",\n          \"description\": \"<string>\",\n          \"id\": \"<string>\",\n          \"key\": \"<string>\",\n          \"name\": \"<string>\",\n          \"owner\": {\n            \"self\": \"<uri>\",\n            \"tenant\": {\n              \"id\": \"<string>\"\n            }\n          },\n          \"self\": \"<uri>\",\n          \"type\": \"MICROSERVICE\",\n          \"manifest\": {\n            \"apiVersion\": \"<string>\",\n            \"billingMode\": \"RESOURCES\",\n            \"contextPath\": \"<string>\",\n            \"extensions\": [\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"path\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"isolation\": \"PER_TENANT\",\n            \"livenessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"provider\": {\n              \"name\": \"<string>\"\n            },\n            \"readinessProbe\": {\n              \"failureThreshold\": \"<integer>\",\n              \"periodSeconds\": \"<integer>\",\n              \"timeoutSeconds\": \"<integer>\",\n              \"successThreshold\": \"<integer>\",\n              \"initialDelaySeconds\": \"<integer>\",\n              \"httpGet\": {\n                \"path\": \"<string>\",\n                \"port\": \"<integer>\"\n              }\n            },\n            \"requestResources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"resources\": {\n              \"cpu\": \"<string>\",\n              \"memory\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"scale\": \"NONE\",\n            \"settings\": [\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              },\n              {\n                \"key\": \"<string>\",\n                \"valueSchema\": {\n                  \"type\": \"<string>\"\n                },\n                \"defaultValue\": \"<string>\",\n                \"editable\": \"<boolean>\",\n                \"inheritFromOwner\": \"<boolean>\"\n              }\n            ],\n            \"settingsCategory\": \"<string>\",\n            \"version\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"breadcrumbs\": \"<boolean>\",\n          \"contentSecurityPolicy\": \"<string>\",\n          \"dynamicOptionsUrl\": \"<string>\",\n          \"globalTitle\": \"<string>\",\n          \"legacy\": \"<boolean>\",\n          \"rightDrawer\": \"<boolean>\",\n          \"upgrade\": \"<boolean>\",\n          \"activeVersionId\": \"<string>\",\n          \"resourcesUrl\": \"<string>\"\n        }\n      ],\n      \"customProperties\": {\n        \"language\": \"<string>\",\n        \"amet89\": {\n          \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n          \"x-additionalPropertiesName\": \"customProperties\"\n        },\n        \"tempor_0a6\": {\n          \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n          \"x-additionalPropertiesName\": \"customProperties\"\n        }\n      },\n      \"description\": \"<string>\",\n      \"devicePermissions\": {\n        \"eaf\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"id\": \"<integer>\",\n      \"roles\": {\n        \"self\": \"<uri>\",\n        \"references\": [\n          {\n            \"role\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          },\n          {\n            \"role\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"self\": \"<uri>\"\n            },\n            \"self\": \"<uri>\"\n          }\n        ],\n        \"statistics\": {\n          \"currentPage\": \"<integer>\",\n          \"pageSize\": \"<integer>\",\n          \"totalElements\": \"<integer>\",\n          \"totalPages\": \"<integer>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"users\": {\n        \"self\": \"<uri>\",\n        \"references\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n          }\n        ]\n      }\n    }\n  ],\n  \"prev\": \"<string>\",\n  \"next\": \"<string>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  }\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/:tenantId/groups?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            ":tenantId",
                            "groups"
                          ],
                          "query": [
                            {
                              "key": "currentPage",
                              "value": "1",
                              "description": "The current page of the paginated results."
                            },
                            {
                              "key": "pageSize",
                              "value": "5",
                              "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                            },
                            {
                              "key": "withTotalElements",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                            },
                            {
                              "key": "withTotalPages",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not enough permissions/roles to perform this operation.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/:tenantId/groups?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            ":tenantId",
                            "groups"
                          ],
                          "query": [
                            {
                              "key": "currentPage",
                              "value": "1",
                              "description": "The current page of the paginated results."
                            },
                            {
                              "key": "pageSize",
                              "value": "5",
                              "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                            },
                            {
                              "key": "withTotalElements",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                            },
                            {
                              "key": "withTotalPages",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "groupByName",
              "item": [
                {
                  "name": "{groupName}",
                  "item": [
                    {
                      "name": "Retrieve a user group by group name for a specific tenant",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.group+json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/:tenantId/groupByName/:groupName",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            ":tenantId",
                            "groupByName",
                            ":groupName"
                          ],
                          "variable": [
                            {
                              "key": "tenantId",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of a Cumulocity tenant."
                            },
                            {
                              "key": "groupName",
                              "value": "<string>",
                              "description": "(Required) The name of the user group."
                            }
                          ]
                        },
                        "description": "Retrieve a user group by group name for a specific tenant (by a given tenant ID).\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_READ <b>OR</b> ROLE_USER_MANAGEMENT_CREATE <b>AND</b> has access to groups\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The request succeeded and the user group is sent in the response.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.group+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/groupByName/:groupName",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "groupByName",
                                ":groupName"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "groupName"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.group+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"name\": \"<string>\",\n  \"applications\": [\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"HOSTED\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"MULTI_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    },\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"EXTERNAL\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"PER_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    }\n  ],\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"dolore6\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"cupidatat26d\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"description\": \"<string>\",\n  \"devicePermissions\": {\n    \"sit__7\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"id\": \"<integer>\",\n  \"roles\": {\n    \"self\": \"<uri>\",\n    \"references\": [\n      {\n        \"role\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      },\n      {\n        \"role\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"self\": \"<uri>\"\n      }\n    ],\n    \"statistics\": {\n      \"currentPage\": \"<integer>\",\n      \"pageSize\": \"<integer>\",\n      \"totalElements\": \"<integer>\",\n      \"totalPages\": \"<integer>\"\n    }\n  },\n  \"self\": \"<uri>\",\n  \"users\": {\n    \"self\": \"<uri>\",\n    \"references\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/user detected>\"\n      }\n    ]\n  }\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/groupByName/:groupName",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "groupByName",
                                ":groupName"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "groupName"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Not enough permissions/roles to perform this operation.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/groupByName/:groupName",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "groupByName",
                                ":groupName"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "groupName"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Group not found.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/:tenantId/groupByName/:groupName",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                ":tenantId",
                                "groupByName",
                                ":groupName"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                },
                                {
                                  "key": "groupName"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "logout",
          "item": [
            {
              "name": "{tenantId}",
              "item": [
                {
                  "name": "allUsers",
                  "item": [
                    {
                      "name": "Terminate all tenant users' sessions and invalidate tokens",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/user/logout/:tenantId/allUsers",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "user",
                            "logout",
                            ":tenantId",
                            "allUsers"
                          ],
                          "variable": [
                            {
                              "key": "tenantId",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of a Cumulocity tenant."
                            }
                          ]
                        },
                        "description": "The user with the role ROLE_USER_MANAGEMENT_ADMIN is authorized to log out all tenant users with a toked based access.\n\nThe request is responsible for terminating all tenant users' toked based sessions and invalidating internal platform access tokens.\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_ADMIN <b>AND</b> is the current tenant\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The request has succeeded and the users (with a token based access) are logged out.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/logout/:tenantId/allUsers",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                "logout",
                                ":tenantId",
                                "allUsers"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/logout/:tenantId/allUsers",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                "logout",
                                ":tenantId",
                                "allUsers"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Not enough permissions/roles to perform this operation.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/user/logout/:tenantId/allUsers",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "user",
                                "logout",
                                ":tenantId",
                                "allUsers"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Terminate a user's session",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Cookie",
                    "value": "<string>",
                    "description": "The authorization cookie storing the access token of the user. This parameter is specific to OAI-Secure authentication."
                  },
                  {
                    "key": "X-XSRF-TOKEN",
                    "value": "<string>",
                    "description": "Prevents XRSF attack of the authenticated user. This parameter is specific to OAI-Secure authentication."
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/user/logout",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "user",
                    "logout"
                  ]
                },
                "description": "After logging out, a user has to enter valid credentials again to get access to the platform.\n\nThe request is responsible for removing cookies from the browser and invalidating internal platform access tokens.\n"
              },
              "response": [
                {
                  "name": "The request has succeeded and the user is logged out.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Cookie",
                        "value": "<string>",
                        "description": "The authorization cookie storing the access token of the user. This parameter is specific to OAI-Secure authentication."
                      },
                      {
                        "key": "X-XSRF-TOKEN",
                        "value": "<string>",
                        "description": "Prevents XRSF attack of the authenticated user. This parameter is specific to OAI-Secure authentication."
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/user/logout",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        "logout"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Cookie",
                        "value": "<string>",
                        "description": "The authorization cookie storing the access token of the user. This parameter is specific to OAI-Secure authentication."
                      },
                      {
                        "key": "X-XSRF-TOKEN",
                        "value": "<string>",
                        "description": "Prevents XRSF attack of the authenticated user. This parameter is specific to OAI-Secure authentication."
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/user/logout",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        "logout"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Retrieve URIs to collections of users, groups and roles",
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "username",
                  "value": "{{basicAuthUsername}}",
                  "type": "string"
                },
                {
                  "key": "password",
                  "value": "{{basicAuthPassword}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/vnd.com.nsn.cumulocity.userapi+json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/user",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "user"
              ]
            },
            "description": "Retrieve URIs and URI templates to collections of users, groups, and roles, so that they can be queried.\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_READ <b>OR</b> ROLE_USER_MANAGEMENT_CREATE\n</section>\n"
          },
          "response": [
            {
              "name": "The request has succeeded and the URIs are sent in the response.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.userapi+json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/user",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "user"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.com.nsn.cumulocity.userapi+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"self\": \"<uri>\",\n  \"users\": \"<string>\",\n  \"userByName\": \"<string>\",\n  \"currentUser\": \"<string>\",\n  \"groups\": \"<string>\",\n  \"groupByName\": \"<string>\",\n  \"roles\": \"<string>\"\n}"
            },
            {
              "name": "Authentication information is missing or invalid.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/user",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "user"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "measurement",
      "item": [
        {
          "name": "measurements",
          "item": [
            {
              "name": "{id}",
              "item": [
                {
                  "name": "Retrieve a specific measurement",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.measurement+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/measurement/measurements/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "measurement",
                        "measurements",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the measurement."
                        }
                      ]
                    },
                    "description": "Retrieve a specific measurement by a given ID.\nNote that you cannot retrieve time series measurements by ID.\nInstead you can search for such measurements via query parameters.\nNo behavior changes for tenants which do not have time series enabled.\n\n<section><h5>Required roles</h5>\nROLE_MEASUREMENT_READ <b>OR</b> owner of the source <b>OR</b> MEASUREMENT_READ permission on the source\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the measurement is sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.measurement+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/measurement/measurements/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "measurement",
                            "measurements",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.measurement+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"source\": {\n    \"id\": \"<string>\",\n    \"self\": \"<uri>\"\n  },\n  \"type\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"c8y_Steam\": {\n    \"Temperature\": {\n      \"value\": \"<number>\",\n      \"unit\": \"<string>\"\n    }\n  }\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/measurement/measurements/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "measurement",
                            "measurements",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Measurement not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/measurement/measurements/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "measurement",
                            "measurements",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Remove a specific measurement",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/measurement/measurements/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "measurement",
                        "measurements",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the measurement."
                        }
                      ]
                    },
                    "description": "Remove a specific measurement by a given ID.\nNote that you cannot delete time series measurements by ID.\nInstead, you can delete by query or use the retention rules to remove expired measurements data from the Operational Store.\nNo behavior changes for tenants which do not have time series enabled.\n\n\n<section><h5>Required roles</h5>\nROLE_MEASUREMENT_ADMIN <b>OR</b> owner of the source <b>OR</b> MEASUREMENT_ADMIN permission on the source\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "A measurement was removed.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/measurement/measurements/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "measurement",
                            "measurements",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/measurement/measurements/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "measurement",
                            "measurements",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not authorized to perform this operation.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/measurement/measurements/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "measurement",
                            "measurements",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Measurement not found.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/measurement/measurements/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "measurement",
                            "measurements",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "series",
              "item": [
                {
                  "name": "Retrieve a list of series and their values",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/measurement/measurements/series?aggregationType=DAILY&dateFrom=<dateTime>&dateTo=<dateTime>&revert=false&series=<string>&series=<string>&source=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "measurement",
                        "measurements",
                        "series"
                      ],
                      "query": [
                        {
                          "key": "aggregationType",
                          "value": "DAILY",
                          "description": "Fetch aggregated results as specified."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "(Required) Start date or date and time of the measurement."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "(Required) End date or date and time of the measurement."
                        },
                        {
                          "key": "revert",
                          "value": "false",
                          "description": "If you are using a range query (that is, at least one of the `dateFrom` or `dateTo` parameters is included in the request), then setting `revert=true` will sort the results by the newest measurements first.\nBy default, the results are sorted by the oldest measurements first.\n"
                        },
                        {
                          "key": "series",
                          "value": "<string>",
                          "description": "The specific series to search for.\n>**&#9432; Info:** If you want to query multiple series at once, you must specify the parameter multiple times.\n"
                        },
                        {
                          "key": "series",
                          "value": "<string>",
                          "description": "The specific series to search for.\n>**&#9432; Info:** If you want to query multiple series at once, you must specify the parameter multiple times.\n"
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "(Required) The managed object ID to which the measurement is associated."
                        }
                      ]
                    },
                    "description": "Retrieve a list of series (all or only those matching the specified names) and their values within a given period of a specific managed object (source).<br>\nA series is any fragment in measurement that contains a `value` property.\n\nIt is possible to fetch aggregated results using the `aggregationType` parameter. If the aggregation is not specified, the result will contain no more than 5000 values.\n\n> **⚠️ Important:** For the aggregation to be done correctly, a device shall always use the same time zone when it sends dates.\n\n<section><h5>Required roles</h5>\nROLE_MEASUREMENT_READ <b>OR</b> owner of the source <b>OR</b> MEASUREMENT_READ permission on the source\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the series are sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/measurement/measurements/series?aggregationType=DAILY&dateFrom=<dateTime>&dateTo=<dateTime>&revert=false&series=<string>&source=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "measurement",
                            "measurements",
                            "series"
                          ],
                          "query": [
                            {
                              "key": "aggregationType",
                              "value": "DAILY",
                              "description": "Fetch aggregated results as specified."
                            },
                            {
                              "key": "dateFrom",
                              "value": "<dateTime>",
                              "description": "(Required) Start date or date and time of the measurement."
                            },
                            {
                              "key": "dateTo",
                              "value": "<dateTime>",
                              "description": "(Required) End date or date and time of the measurement."
                            },
                            {
                              "key": "revert",
                              "value": "false",
                              "description": "If you are using a range query (that is, at least one of the `dateFrom` or `dateTo` parameters is included in the request), then setting `revert=true` will sort the results by the newest measurements first.\nBy default, the results are sorted by the oldest measurements first.\n"
                            },
                            {
                              "key": "series",
                              "value": "<string>",
                              "description": "The specific series to search for.\n>**&#9432; Info:** If you want to query multiple series at once, you must specify the parameter multiple times.\n"
                            },
                            {
                              "key": "source",
                              "value": "<string>",
                              "description": "(Required) The managed object ID to which the measurement is associated."
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"values\": {\n    \"aliqua83a\": [\n      {\n        \"min\": \"<number>\",\n        \"max\": \"<number>\"\n      },\n      {\n        \"min\": \"<number>\",\n        \"max\": \"<number>\"\n      }\n    ],\n    \"qui_308\": [\n      {\n        \"min\": \"<number>\",\n        \"max\": \"<number>\"\n      },\n      {\n        \"min\": \"<number>\",\n        \"max\": \"<number>\"\n      }\n    ],\n    \"laborea\": [\n      {\n        \"min\": \"<number>\",\n        \"max\": \"<number>\"\n      },\n      {\n        \"min\": \"<number>\",\n        \"max\": \"<number>\"\n      }\n    ],\n    \"sit_9\": [\n      {\n        \"min\": \"<number>\",\n        \"max\": \"<number>\"\n      },\n      {\n        \"min\": \"<number>\",\n        \"max\": \"<number>\"\n      }\n    ]\n  },\n  \"series\": [\n    {\n      \"unit\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"unit\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"truncated\": \"<boolean>\"\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/measurement/measurements/series?aggregationType=DAILY&dateFrom=<dateTime>&dateTo=<dateTime>&revert=false&series=<string>&source=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "measurement",
                            "measurements",
                            "series"
                          ],
                          "query": [
                            {
                              "key": "aggregationType",
                              "value": "DAILY",
                              "description": "Fetch aggregated results as specified."
                            },
                            {
                              "key": "dateFrom",
                              "value": "<dateTime>",
                              "description": "(Required) Start date or date and time of the measurement."
                            },
                            {
                              "key": "dateTo",
                              "value": "<dateTime>",
                              "description": "(Required) End date or date and time of the measurement."
                            },
                            {
                              "key": "revert",
                              "value": "false",
                              "description": "If you are using a range query (that is, at least one of the `dateFrom` or `dateTo` parameters is included in the request), then setting `revert=true` will sort the results by the newest measurements first.\nBy default, the results are sorted by the oldest measurements first.\n"
                            },
                            {
                              "key": "series",
                              "value": "<string>",
                              "description": "The specific series to search for.\n>**&#9432; Info:** If you want to query multiple series at once, you must specify the parameter multiple times.\n"
                            },
                            {
                              "key": "source",
                              "value": "<string>",
                              "description": "(Required) The managed object ID to which the measurement is associated."
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Create a measurement",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Cumulocity-Processing-Mode",
                    "value": "PERSISTENT",
                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.com.nsn.cumulocity.measurement+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.measurement+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"source\": {\n    \"id\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"c8y_Steam\": {\n    \"Temperature\": {\n      \"value\": \"<number>\",\n      \"unit\": \"<string>\"\n    }\n  }\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/measurement/measurements",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "measurement",
                    "measurements"
                  ]
                },
                "description": "A measurement must be associated with a source (managed object) identified by ID, and must specify the type of measurement and the time when it was measured by the device (for example, a thermometer).\n\nEach measurement fragment is an object (for example, `c8y_Steam`) containing the actual measurements as properties. The property name represents the name of the measurement (for example, `Temperature`) and it contains two properties:\n\n*   `value` - The value of the individual measurement. The maximum precision for floating point numbers is 64-bit IEEE 754. For integers it's a 64-bit two's complement integer. The `value` is mandatory for a fragment.\n*   `unit` - The unit of the measurements.\n\nReview the [System of units](#section/System-of-units) section for details about the conversions of units. Also review [Getting started > Technical concepts > Cumulocity's domain model > Inventory > Fragments > Naming conventions of fragments](https://www.cumulocity.com/docs/concepts/domain-model/#naming-conventions-of-fragments) in the Cumulocity user documentation.\n\nThe example below uses `c8y_Steam` in the request body to illustrate a fragment for recording temperature measurements.\n\n> **⚠️ Important:** Property names used for fragment and series must not contain whitespaces nor the special characters `. , * [ ] ( ) @ $`. This is required to ensure a correct processing and visualization of measurement series on UI graphs.\n\n**Handling of Correct and Incorrect Fragments and Series:**\n\n1. ***Mixed Series Fragments:***\n\nWhen creating a measurement with a fragment containing both valid and invalid series:\n  - Valid series (those with numeric value fields) are processed and persisted.\n  - Invalid series (e.g., Booleans, Lists, Strings, Structs) are silently ignored and are not included in the resulting measurement.\n  - The measurement is created successfully (HTTP 201 Created), but the invalid series are removed.\n  \n**Example:**\n  ```json\n  {\n    \"source\": { \"id\": \"681200\" },\n    \"time\": \"2020-03-19T12:03:27.845Z\",\n    \"type\": \"temperatureMeasurement\",\n    \"c8y_Steam\": {\n      \"Temperature\": {\n        \"validSeries_DOUBLE\": { \"value\": 3.141592653589793, \"unit\": \"RAD\" },\n        \"validSeries_INTEGER\": { \"value\": 42, \"unit\": \"C\" },\n        \"ignoredField_BOOLEAN\": { \"value\": false, \"unit\": \"t/f\" },\n        \"ignoredField_LIST\": { \"value\": [42, 43, 44] },\n        \"ignoredField_STRUCT\": { \"value\": { \"a\": 1, \"b\": 2 }, \"unit\": \"C\" },\n        \"ignoredField0\": 42,\n        \"ignoredField1\": { \"value\": { \"a\": 1, \"b\": 2 }, \"unit\": \"C\" },\n        \"ignoredField2\": { \"unit\": \"C\" },\n        \"ignoredField3\": { \"val\": 42 },\n        \"ignoredField4\": { \"subseries\": { \"value\": 42 } }\n      }\n    }\n  }\n  ```\n  \n  **Response:**\n  ```json\n  {\n    \"self\": \"https://example.cumulocity.com/measurement/measurements/124\",\n    \"id\": \"124\",\n    \"type\": \"temperatureMeasurement\",\n    \"source\": { \"id\": \"681200\" },\n    \"time\": \"2020-03-19T12:03:27.845Z\",\n    \"c8y_Steam\": {\n      \"Temperature\": {\n        \"validSeries_DOUBLE\": { \"value\": 3.141592653589793, \"unit\": \"RAD\" },\n        \"validSeries_INTEGER\": { \"value\": 42, \"unit\": \"C\" }\n      }\n    }\n  }\n  ```\n  \n2. ***Fragments with Only Invalid Series:***\n\nIf a measurement fragment contains only invalid series, the entire fragment is preserved as a plain object, and no fields are removed or validated further. This means that such fragments are treated as normal document properties rather than as series fragments. As a result:\n  - These objects are not included in series fragment aggregation.\n  - They are not treated as part of the measurement's series data but remain accessible as regular property within the measurement document.\n    \n**Example:**\n  ```json\n  {\n    \"source\": { \"id\": \"681200\" },\n    \"time\": \"2020-03-19T12:03:27.845Z\",\n    \"type\": \"temperatureMeasurement\",\n    \"c8y_Steam\": {\n      \"Temperature\": {\n        \"invalidSeries_BOOLEAN\": { \"value\": false, \"unit\": \"t/f\" },\n        \"invalidSeries_LIST\": { \"value\": [1, 2, 3], \"unit\": \"list\" }\n      }\n    }\n  }\n  ```\n  \n  **Response:**\n  ```json\n  {\n    \"self\": \"https://example.cumulocity.com/measurement/measurements/125\",\n    \"id\": \"125\",\n    \"type\": \"temperatureMeasurement\",\n    \"source\": { \"id\": \"681200\" },\n    \"time\": \"2020-03-19T12:03:27.845Z\",\n    \"c8y_Steam\": {\n      \"Temperature\": {\n        \"invalidSeries_BOOLEAN\": { \"value\": false, \"unit\": \"t/f\" },\n        \"invalidSeries_LIST\": { \"value\": [1, 2, 3], \"unit\": \"list\" }\n      }\n    }\n  }\n  ```\n\n### Create multiple measurements\n\nIt is also possible to create multiple measurements at once by sending a `measurements` array containing all the measurements to be created. The content type must be `application/vnd.com.nsn.cumulocity.measurementcollection+json`.\n\n> **&#9432; Info:** For more details about fragments with specific meanings, refer to [Device management & connectivity > Device integration > Fragment library](https://www.cumulocity.com/docs/device-integration/fragment-library/) in the Cumulocity user documentation.\n\n<section><h5>Required roles</h5>\nROLE_MEASUREMENT_ADMIN <b>OR</b> owner of the source <b>OR</b> MEASUREMENT_ADMIN permission on the source\n</section>\n"
              },
              "response": [
                {
                  "name": "A measurement was created.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.measurement+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.measurement+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"source\": {\n    \"id\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"c8y_Steam\": {\n    \"Temperature\": {\n      \"value\": \"<number>\",\n      \"unit\": \"<string>\"\n    }\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/measurement/measurements",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "measurement",
                        "measurements"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.measurement+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"source\": {\n    \"id\": \"<string>\",\n    \"self\": \"<uri>\"\n  },\n  \"type\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"c8y_Steam\": {\n    \"Temperature\": {\n      \"value\": \"<number>\",\n      \"unit\": \"<string>\"\n    }\n  }\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.measurement+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"source\": {\n    \"id\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"c8y_Steam\": {\n    \"Temperature\": {\n      \"value\": \"<number>\",\n      \"unit\": \"<string>\"\n    }\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/measurement/measurements",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "measurement",
                        "measurements"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Not authorized to perform this operation.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.measurement+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"source\": {\n    \"id\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"c8y_Steam\": {\n    \"Temperature\": {\n      \"value\": \"<number>\",\n      \"unit\": \"<string>\"\n    }\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/measurement/measurements",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "measurement",
                        "measurements"
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Unprocessable Entity – invalid payload.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.measurement+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"source\": {\n    \"id\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"c8y_Steam\": {\n    \"Temperature\": {\n      \"value\": \"<number>\",\n      \"unit\": \"<string>\"\n    }\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/measurement/measurements",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "measurement",
                        "measurements"
                      ]
                    }
                  },
                  "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                  "code": 422,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Retrieve all measurements",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.measurementcollection+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/measurement/measurements?currentPage=1&dateFrom=<dateTime>&dateTo=<dateTime>&pageSize=5&revert=false&source=<string>&type=<string>&valueFragmentSeries=<string>&valueFragmentType=<string>&withTotalElements=false&withTotalPages=false",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "measurement",
                    "measurements"
                  ],
                  "query": [
                    {
                      "key": "currentPage",
                      "value": "1",
                      "description": "The current page of the paginated results."
                    },
                    {
                      "key": "dateFrom",
                      "value": "<dateTime>",
                      "description": "Start date or date and time of the measurement."
                    },
                    {
                      "key": "dateTo",
                      "value": "<dateTime>",
                      "description": "End date or date and time of the measurement."
                    },
                    {
                      "key": "pageSize",
                      "value": "5",
                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                    },
                    {
                      "key": "revert",
                      "value": "false",
                      "description": "If you are using a range query (that is, at least one of the `dateFrom` or `dateTo` parameters is included in the request), then setting `revert=true` will sort the results by the newest measurements first.\nBy default, the results are sorted by the oldest measurements first.\n"
                    },
                    {
                      "key": "source",
                      "value": "<string>",
                      "description": "The managed object ID to which the measurement is associated."
                    },
                    {
                      "key": "type",
                      "value": "<string>",
                      "description": "The type of measurement to search for."
                    },
                    {
                      "key": "valueFragmentSeries",
                      "value": "<string>",
                      "description": "The specific series to search for."
                    },
                    {
                      "key": "valueFragmentType",
                      "value": "<string>",
                      "description": "A characteristic which identifies the measurement."
                    },
                    {
                      "key": "withTotalElements",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                    },
                    {
                      "key": "withTotalPages",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                    }
                  ]
                },
                "description": "Retrieve all measurements on your tenant, or a specific subset based on queries.\n\nIn case of executing [range queries](https://en.wikipedia.org/wiki/Range_query_(database)) between an upper and lower boundary, for example, querying using `dateFrom`–`dateTo`, the oldest registered measurements are returned first. It is possible to change the order using the query parameter `revert=true`.\n\nFor large measurement collections, querying older records without filters can be slow as the server needs to scan from the beginning of the input results set before beginning to return the results. For cases when older measurements should be retrieved, it is recommended to narrow the scope by using range queries based on the time stamp reported by a device. The scope of query can also be reduced significantly when a source device is provided.\n\nReview [Measurements Specifics](#tag/Measurements-specifics) for details about data streaming and response formats.\n\n<section><h5>Required roles</h5>\nROLE_MEASUREMENT_READ\n</section>\n"
              },
              "response": [
                {
                  "name": "The request has succeeded and all measurements are sent in the response.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.measurementcollection+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/measurement/measurements?currentPage=1&dateFrom=<dateTime>&dateTo=<dateTime>&pageSize=5&revert=false&source=<string>&type=<string>&valueFragmentSeries=<string>&valueFragmentType=<string>&withTotalElements=false&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "measurement",
                        "measurements"
                      ],
                      "query": [
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the measurement."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the measurement."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "revert",
                          "value": "false",
                          "description": "If you are using a range query (that is, at least one of the `dateFrom` or `dateTo` parameters is included in the request), then setting `revert=true` will sort the results by the newest measurements first.\nBy default, the results are sorted by the oldest measurements first.\n"
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the measurement is associated."
                        },
                        {
                          "key": "type",
                          "value": "<string>",
                          "description": "The type of measurement to search for."
                        },
                        {
                          "key": "valueFragmentSeries",
                          "value": "<string>",
                          "description": "The specific series to search for."
                        },
                        {
                          "key": "valueFragmentType",
                          "value": "<string>",
                          "description": "A characteristic which identifies the measurement."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.measurementcollection+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"measurements\": [\n    {\n      \"source\": {\n        \"id\": \"<string>\",\n        \"self\": \"<uri>\"\n      },\n      \"type\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"self\": \"<uri>\",\n      \"c8y_Steam\": {\n        \"Temperature\": {\n          \"value\": \"<number>\",\n          \"unit\": \"<string>\"\n        }\n      }\n    },\n    {\n      \"source\": {\n        \"id\": \"<string>\",\n        \"self\": \"<uri>\"\n      },\n      \"type\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"self\": \"<uri>\",\n      \"c8y_Steam\": {\n        \"Temperature\": {\n          \"value\": \"<number>\",\n          \"unit\": \"<string>\"\n        }\n      }\n    }\n  ],\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  }\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/measurement/measurements?currentPage=1&dateFrom=<dateTime>&dateTo=<dateTime>&pageSize=5&revert=false&source=<string>&type=<string>&valueFragmentSeries=<string>&valueFragmentType=<string>&withTotalElements=false&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "measurement",
                        "measurements"
                      ],
                      "query": [
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the measurement."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the measurement."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "revert",
                          "value": "false",
                          "description": "If you are using a range query (that is, at least one of the `dateFrom` or `dateTo` parameters is included in the request), then setting `revert=true` will sort the results by the newest measurements first.\nBy default, the results are sorted by the oldest measurements first.\n"
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the measurement is associated."
                        },
                        {
                          "key": "type",
                          "value": "<string>",
                          "description": "The type of measurement to search for."
                        },
                        {
                          "key": "valueFragmentSeries",
                          "value": "<string>",
                          "description": "The specific series to search for."
                        },
                        {
                          "key": "valueFragmentType",
                          "value": "<string>",
                          "description": "A characteristic which identifies the measurement."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Remove measurement collections",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Cumulocity-Processing-Mode",
                    "value": "PERSISTENT",
                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/measurement/measurements?dateFrom=<dateTime>&dateTo=<dateTime>&fragmentType=<string>&source=<string>&type=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "measurement",
                    "measurements"
                  ],
                  "query": [
                    {
                      "key": "dateFrom",
                      "value": "<dateTime>",
                      "description": "Start date or date and time of the measurement."
                    },
                    {
                      "key": "dateTo",
                      "value": "<dateTime>",
                      "description": "End date or date and time of the measurement."
                    },
                    {
                      "key": "fragmentType",
                      "value": "<string>",
                      "description": "A characteristic which identifies a managed object or event, for example, geolocation, electricity sensor, relay state."
                    },
                    {
                      "key": "source",
                      "value": "<string>",
                      "description": "The managed object ID to which the measurement is associated."
                    },
                    {
                      "key": "type",
                      "value": "<string>",
                      "description": "The type of measurement to search for."
                    }
                  ]
                },
                "description": "Remove measurement collections specified by query parameters.\n\nDELETE requests are not synchronous. The response could be returned before the delete request has been completed. This may happen especially when there are a lot of measurements to be deleted.\n\n> **⚠️ Important:** DELETE requires at least one of the following parameters: `source`, `dateFrom`, `dateTo`.\n\nIn case of enhanced time series measurements, both `dateFrom` and `dateTo` parameters must be truncated to full hours (for example, 2022-08-19T14:00:00.000Z), otherwise an error will be returned.\nThe `fragmentType` parameter allows to delete measurements only by a measurement fragment when enhanced time series measurements are used.\nIt's not possible to delete by a custom (non-measurement) fragment.\n\nExample for a valid measurement value fragment:\n```\n\"c8y_TemperatureMeasurement\": {\n    \"T\": {\n      \"value\": 28,\n      \"unit\": \"C\"\n    }\n}\n```\nIn the example above `c8y_TemperatureMeasurement` is called fragment and `T` is called series.\n\nExample for a non-measurement fragment:\n```\n\"c8y_TemperatureMeasurement\": 28\n```\nEnhanced Time series measurements will not allow to delete by fragment specific like above.\n\n<section><h5>Required roles</h5>\nROLE_MEASUREMENT_ADMIN\n</section>\n"
              },
              "response": [
                {
                  "name": "A collection of measurements was removed.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/measurement/measurements?dateFrom=<dateTime>&dateTo=<dateTime>&fragmentType=<string>&source=<string>&type=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "measurement",
                        "measurements"
                      ],
                      "query": [
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the measurement."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the measurement."
                        },
                        {
                          "key": "fragmentType",
                          "value": "<string>",
                          "description": "A characteristic which identifies a managed object or event, for example, geolocation, electricity sensor, relay state."
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the measurement is associated."
                        },
                        {
                          "key": "type",
                          "value": "<string>",
                          "description": "The type of measurement to search for."
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/measurement/measurements?dateFrom=<dateTime>&dateTo=<dateTime>&fragmentType=<string>&source=<string>&type=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "measurement",
                        "measurements"
                      ],
                      "query": [
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the measurement."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the measurement."
                        },
                        {
                          "key": "fragmentType",
                          "value": "<string>",
                          "description": "A characteristic which identifies a managed object or event, for example, geolocation, electricity sensor, relay state."
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the measurement is associated."
                        },
                        {
                          "key": "type",
                          "value": "<string>",
                          "description": "The type of measurement to search for."
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Not authorized to perform this operation.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/measurement/measurements?dateFrom=<dateTime>&dateTo=<dateTime>&fragmentType=<string>&source=<string>&type=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "measurement",
                        "measurements"
                      ],
                      "query": [
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the measurement."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the measurement."
                        },
                        {
                          "key": "fragmentType",
                          "value": "<string>",
                          "description": "A characteristic which identifies a managed object or event, for example, geolocation, electricity sensor, relay state."
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the measurement is associated."
                        },
                        {
                          "key": "type",
                          "value": "<string>",
                          "description": "The type of measurement to search for."
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Unprocessable Entity – invalid payload.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/measurement/measurements?dateFrom=<dateTime>&dateTo=<dateTime>&fragmentType=<string>&source=<string>&type=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "measurement",
                        "measurements"
                      ],
                      "query": [
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the measurement."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the measurement."
                        },
                        {
                          "key": "fragmentType",
                          "value": "<string>",
                          "description": "A characteristic which identifies a managed object or event, for example, geolocation, electricity sensor, relay state."
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the measurement is associated."
                        },
                        {
                          "key": "type",
                          "value": "<string>",
                          "description": "The type of measurement to search for."
                        }
                      ]
                    }
                  },
                  "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                  "code": 422,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "Retrieve URIs to collections of measurements",
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "username",
                  "value": "{{basicAuthUsername}}",
                  "type": "string"
                },
                {
                  "key": "password",
                  "value": "{{basicAuthPassword}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/vnd.com.nsn.cumulocity.measurementapi+json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/measurement",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "measurement"
              ]
            },
            "description": "Retrieve URIs and URI templates to collections of measurements.\n\n> **&#9432; Info:** The response sample on the right side contains a subset of all URIs returned by the endpoint method. For all available query parameters see [Retrieve all measurements](#operation/getMeasurementCollectionResource).\n"
          },
          "response": [
            {
              "name": "The request has succeeded and the URIs are sent in the response.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.measurementapi+json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/measurement",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "measurement"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.com.nsn.cumulocity.measurementapi+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"measurements\": {\n    \"measurements\": [\n      {\n        \"source\": {\n          \"id\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"type\": \"<string>\",\n        \"time\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"self\": \"<uri>\",\n        \"c8y_Steam\": {\n          \"Temperature\": {\n            \"value\": \"<number>\",\n            \"unit\": \"<string>\"\n          }\n        }\n      },\n      {\n        \"source\": {\n          \"id\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"type\": \"<string>\",\n        \"time\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"self\": \"<uri>\",\n        \"c8y_Steam\": {\n          \"Temperature\": {\n            \"value\": \"<number>\",\n            \"unit\": \"<string>\"\n          }\n        }\n      }\n    ],\n    \"self\": \"<uri>\"\n  },\n  \"measurementsForSource\": \"<string>\",\n  \"measurementsForSourceAndType\": \"<string>\",\n  \"measurementsForType\": \"<string>\",\n  \"measurementsForValueFragmentType\": \"<string>\",\n  \"measurementsForDate\": \"<string>\",\n  \"measurementsForSourceAndDate\": \"<string>\",\n  \"measurementsForDateAndFragmentType\": \"<string>\",\n  \"measurementsForSourceAndValueFragmentTypeAndValueFragmentSeries\": \"<string>\",\n  \"self\": \"<uri>\"\n}"
            },
            {
              "name": "Authentication information is missing or invalid.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/measurement",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "measurement"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
            },
            {
              "name": "Not authorized to perform this operation.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/measurement",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "measurement"
                  ]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "text",
              "header": [],
              "cookie": [],
              "body": ""
            }
          ]
        }
      ]
    },
    {
      "name": "notification2",
      "item": [
        {
          "name": "token",
          "item": [
            {
              "name": "Create a notification token",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Cumulocity-Processing-Mode",
                    "value": "PERSISTENT",
                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"subscriber\": \"<string>\",\n  \"subscription\": \"<string>\",\n  \"expiresInMinutes\": 1440,\n  \"type\": \"notification\",\n  \"signed\": true,\n  \"shared\": false,\n  \"nonPersistent\": false\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/notification2/token",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "notification2",
                    "token"
                  ]
                },
                "description": "Create a new JWT (JSON web token) access token which can be used to establish a successful WebSocket connection to read a sequence of notifications.\n\nIn general, each request to obtain an access token consists of:\n\n*  The subscriber name which the client wishes to be identified with.\n*  The subscription name. This value must be associated with a subscription that's already been created and in essence, the obtained token will give the ability to read notifications for the subscription that is specified here.\n*  The token expiration duration.\n*  The option to disable signing of the token by the Cumulocity platform.\n*  The subscription type that the token should be associated with.\n*  The option to use the token to create shared consumers of the subscription.\n*  The option to select the non-persistent variant of the subscription, if one exists.\n\n<section><h5>Required roles</h5>\nROLE_NOTIFICATION_2_ADMIN\n</section>\n"
              },
              "response": [
                {
                  "name": "A notification token was created.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"subscriber\": \"<string>\",\n  \"subscription\": \"<string>\",\n  \"expiresInMinutes\": 1440,\n  \"type\": \"notification\",\n  \"signed\": true,\n  \"shared\": false,\n  \"nonPersistent\": false\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/notification2/token",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "notification2",
                        "token"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"token\": \"<string>\"\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"subscriber\": \"<string>\",\n  \"subscription\": \"<string>\",\n  \"expiresInMinutes\": 1440,\n  \"type\": \"notification\",\n  \"signed\": true,\n  \"shared\": false,\n  \"nonPersistent\": false\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/notification2/token",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "notification2",
                        "token"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Not enough permissions/roles to perform this operation.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"subscriber\": \"<string>\",\n  \"subscription\": \"<string>\",\n  \"expiresInMinutes\": 1440,\n  \"type\": \"notification\",\n  \"signed\": true,\n  \"shared\": false,\n  \"nonPersistent\": false\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/notification2/token",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "notification2",
                        "token"
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Unprocessable Entity – invalid payload.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"subscriber\": \"<string>\",\n  \"subscription\": \"<string>\",\n  \"expiresInMinutes\": 1440,\n  \"type\": \"notification\",\n  \"signed\": true,\n  \"shared\": false,\n  \"nonPersistent\": false\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/notification2/token",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "notification2",
                        "token"
                      ]
                    }
                  },
                  "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                  "code": 422,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "unsubscribe",
          "item": [
            {
              "name": "Unsubscribe a subscriber",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Cumulocity-Processing-Mode",
                    "value": "PERSISTENT",
                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/notification2/unsubscribe?token=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "notification2",
                    "unsubscribe"
                  ],
                  "query": [
                    {
                      "key": "token",
                      "value": "<string>",
                      "description": "(Required) Subscriptions associated with this token will be removed."
                    }
                  ]
                },
                "description": "Unsubscribe a notification subscriber using the notification token.\n\nOnce a subscription is made, notifications will be kept until they are consumed by all subscribers who have previously connected to the subscription. For non-volatile subscriptions, this can result in notifications remaining in storage if never consumed by the application.\nThey will be deleted if a tenant is deleted. It can take up considerable space in permanent storage for high-frequency notification sources. Therefore, we recommend you to unsubscribe a subscriber that will never run again.\n"
              },
              "response": [
                {
                  "name": "The notification subscription was deleted or is scheduled for deletion.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/notification2/unsubscribe?token=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "notification2",
                        "unsubscribe"
                      ],
                      "query": [
                        {
                          "key": "token",
                          "value": "<string>",
                          "description": "(Required) Subscriptions associated with this token will be removed."
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"result\": \"DONE\"\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/notification2/unsubscribe?token=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "notification2",
                        "unsubscribe"
                      ],
                      "query": [
                        {
                          "key": "token",
                          "value": "<string>",
                          "description": "(Required) Subscriptions associated with this token will be removed."
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "subscriptions",
          "item": [
            {
              "name": "{id}",
              "item": [
                {
                  "name": "Retrieve a specific subscription",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.subscription+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/notification2/subscriptions/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "notification2",
                        "subscriptions",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the notification subscription."
                        }
                      ]
                    },
                    "description": "Retrieve a specific subscription by a given ID.\n\n<section><h5>Required roles</h5>\nROLE_NOTIFICATION_2_ADMIN\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the subscription is sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.subscription+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/notification2/subscriptions/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "notification2",
                            "subscriptions",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.subscription+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"context\": \"mo\",\n  \"subscription\": \"12\",\n  \"fragmentsToCopy\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"source\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"self\": \"<uri>\"\n  },\n  \"subscriptionFilter\": {\n    \"apis\": [\n      \"alarms\",\n      \"*\"\n    ],\n    \"typeFilter\": \"<string>\"\n  },\n  \"nonPersistent\": false\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/notification2/subscriptions/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "notification2",
                            "subscriptions",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not enough permissions/roles to perform this operation.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/notification2/subscriptions/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "notification2",
                            "subscriptions",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Subscription not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/notification2/subscriptions/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "notification2",
                            "subscriptions",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Remove a specific subscription",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/notification2/subscriptions/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "notification2",
                        "subscriptions",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the notification subscription."
                        }
                      ]
                    },
                    "description": "Remove a specific subscription by a given ID.\n\n<section><h5>Required roles</h5>\nROLE_NOTIFICATION_2_ADMIN\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "A subscription was removed.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/notification2/subscriptions/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "notification2",
                            "subscriptions",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/notification2/subscriptions/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "notification2",
                            "subscriptions",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not enough permissions/roles to perform this operation.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/notification2/subscriptions/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "notification2",
                            "subscriptions",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Subscription not found.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/notification2/subscriptions/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "notification2",
                            "subscriptions",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Create a subscription",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Cumulocity-Processing-Mode",
                    "value": "PERSISTENT",
                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.com.nsn.cumulocity.subscription+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.subscription+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"context\": \"tenant\",\n  \"subscription\": \"ro2QeOH\",\n  \"fragmentsToCopy\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"source\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"subscriptionFilter\": {\n    \"apis\": [\n      \"eventsWithChildren\",\n      \"operations\"\n    ],\n    \"typeFilter\": \"<string>\"\n  },\n  \"nonPersistent\": false\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/notification2/subscriptions",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "notification2",
                    "subscriptions"
                  ]
                },
                "description": "Create a new subscription, for example, a subscription that forwards measurements and events of a specific type for a given device.\n\nIn general, each subscription may consist of:\n\n*  The managed object to which the subscription is associated.\n*  The context under which the subscription is to be processed.\n*  The name of the subscription.\n*  The applicable filter criteria.\n*  The option to only include specific custom fragments in the forwarded data.\n*  The option to use persistent or non-persistent message storage.\n\n<section><h5>Required roles</h5>\nROLE_NOTIFICATION_2_ADMIN\n</section>\n"
              },
              "response": [
                {
                  "name": "A notification subscription was created.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.subscription+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.subscription+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"context\": \"tenant\",\n  \"subscription\": \"ro2QeOH\",\n  \"fragmentsToCopy\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"source\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"subscriptionFilter\": {\n    \"apis\": [\n      \"eventsWithChildren\",\n      \"operations\"\n    ],\n    \"typeFilter\": \"<string>\"\n  },\n  \"nonPersistent\": false\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/notification2/subscriptions",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "notification2",
                        "subscriptions"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.subscription+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"context\": \"mo\",\n  \"subscription\": \"12\",\n  \"fragmentsToCopy\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"source\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"self\": \"<uri>\"\n  },\n  \"subscriptionFilter\": {\n    \"apis\": [\n      \"alarms\",\n      \"*\"\n    ],\n    \"typeFilter\": \"<string>\"\n  },\n  \"nonPersistent\": false\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.subscription+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"context\": \"tenant\",\n  \"subscription\": \"ro2QeOH\",\n  \"fragmentsToCopy\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"source\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"subscriptionFilter\": {\n    \"apis\": [\n      \"eventsWithChildren\",\n      \"operations\"\n    ],\n    \"typeFilter\": \"<string>\"\n  },\n  \"nonPersistent\": false\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/notification2/subscriptions",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "notification2",
                        "subscriptions"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Not enough permissions/roles to perform this operation.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.subscription+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"context\": \"tenant\",\n  \"subscription\": \"ro2QeOH\",\n  \"fragmentsToCopy\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"source\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"subscriptionFilter\": {\n    \"apis\": [\n      \"eventsWithChildren\",\n      \"operations\"\n    ],\n    \"typeFilter\": \"<string>\"\n  },\n  \"nonPersistent\": false\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/notification2/subscriptions",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "notification2",
                        "subscriptions"
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Managed object not found.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.subscription+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"context\": \"tenant\",\n  \"subscription\": \"ro2QeOH\",\n  \"fragmentsToCopy\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"source\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"subscriptionFilter\": {\n    \"apis\": [\n      \"eventsWithChildren\",\n      \"operations\"\n    ],\n    \"typeFilter\": \"<string>\"\n  },\n  \"nonPersistent\": false\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/notification2/subscriptions",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "notification2",
                        "subscriptions"
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Duplicated subscription.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.subscription+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"context\": \"tenant\",\n  \"subscription\": \"ro2QeOH\",\n  \"fragmentsToCopy\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"source\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"subscriptionFilter\": {\n    \"apis\": [\n      \"eventsWithChildren\",\n      \"operations\"\n    ],\n    \"typeFilter\": \"<string>\"\n  },\n  \"nonPersistent\": false\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/notification2/subscriptions",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "notification2",
                        "subscriptions"
                      ]
                    }
                  },
                  "status": "Conflict",
                  "code": 409,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Unprocessable Entity – invalid payload.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.subscription+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"context\": \"tenant\",\n  \"subscription\": \"ro2QeOH\",\n  \"fragmentsToCopy\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"source\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"subscriptionFilter\": {\n    \"apis\": [\n      \"eventsWithChildren\",\n      \"operations\"\n    ],\n    \"typeFilter\": \"<string>\"\n  },\n  \"nonPersistent\": false\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/notification2/subscriptions",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "notification2",
                        "subscriptions"
                      ]
                    }
                  },
                  "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                  "code": 422,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Retrieve all subscriptions",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.subscriptioncollection+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/notification2/subscriptions?context=tenant&currentPage=1&pageSize=5&source=<string>&subscription=<string>&typeFilter=<string>&withTotalElements=false&withTotalPages=false",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "notification2",
                    "subscriptions"
                  ],
                  "query": [
                    {
                      "key": "context",
                      "value": "tenant",
                      "description": "The context to which the subscription is associated."
                    },
                    {
                      "key": "currentPage",
                      "value": "1",
                      "description": "The current page of the paginated results."
                    },
                    {
                      "key": "pageSize",
                      "value": "5",
                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                    },
                    {
                      "key": "source",
                      "value": "<string>",
                      "description": "The managed object ID to which the subscription is associated."
                    },
                    {
                      "key": "subscription",
                      "value": "<string>",
                      "description": "The subscription name by which filtering will be done."
                    },
                    {
                      "key": "typeFilter",
                      "value": "<string>",
                      "description": "The type used to filter subscriptions. This will check the subscription's `subscriptionFilter.typeFilter` field.\n> **&#9432; Info:** Filtering by `typeFilter` may affect paging. Additional post filtering may be performed if OData-like expressions are used in the subscriptions.\n"
                    },
                    {
                      "key": "withTotalElements",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                    },
                    {
                      "key": "withTotalPages",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                    }
                  ]
                },
                "description": "Retrieve all subscriptions on your tenant, or a specific subset based on queries.\n\n<section><h5>Required roles</h5>\nROLE_NOTIFICATION_2_ADMIN\n</section>\n"
              },
              "response": [
                {
                  "name": "The request has succeeded and all subscriptions are sent in the response.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.subscriptioncollection+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/notification2/subscriptions?context=tenant&currentPage=1&pageSize=5&source=<string>&subscription=<string>&typeFilter=<string>&withTotalElements=false&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "notification2",
                        "subscriptions"
                      ],
                      "query": [
                        {
                          "key": "context",
                          "value": "tenant",
                          "description": "The context to which the subscription is associated."
                        },
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the subscription is associated."
                        },
                        {
                          "key": "subscription",
                          "value": "<string>",
                          "description": "The subscription name by which filtering will be done."
                        },
                        {
                          "key": "typeFilter",
                          "value": "<string>",
                          "description": "The type used to filter subscriptions. This will check the subscription's `subscriptionFilter.typeFilter` field.\n> **&#9432; Info:** Filtering by `typeFilter` may affect paging. Additional post filtering may be performed if OData-like expressions are used in the subscriptions.\n"
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.subscriptioncollection+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  },\n  \"subscriptions\": [\n    {\n      \"context\": \"tenant\",\n      \"subscription\": \"atgV\",\n      \"fragmentsToCopy\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"id\": \"<string>\",\n      \"self\": \"<uri>\",\n      \"source\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"self\": \"<uri>\"\n      },\n      \"subscriptionFilter\": {\n        \"apis\": [\n          \"operations\",\n          \"managedobjects\"\n        ],\n        \"typeFilter\": \"<string>\"\n      },\n      \"nonPersistent\": false\n    },\n    {\n      \"context\": \"mo\",\n      \"subscription\": \"303sBXY\",\n      \"fragmentsToCopy\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"id\": \"<string>\",\n      \"self\": \"<uri>\",\n      \"source\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"self\": \"<uri>\"\n      },\n      \"subscriptionFilter\": {\n        \"apis\": [\n          \"operations\",\n          \"managedobjects\"\n        ],\n        \"typeFilter\": \"<string>\"\n      },\n      \"nonPersistent\": false\n    }\n  ]\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/notification2/subscriptions?context=tenant&currentPage=1&pageSize=5&source=<string>&subscription=<string>&typeFilter=<string>&withTotalElements=false&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "notification2",
                        "subscriptions"
                      ],
                      "query": [
                        {
                          "key": "context",
                          "value": "tenant",
                          "description": "The context to which the subscription is associated."
                        },
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the subscription is associated."
                        },
                        {
                          "key": "subscription",
                          "value": "<string>",
                          "description": "The subscription name by which filtering will be done."
                        },
                        {
                          "key": "typeFilter",
                          "value": "<string>",
                          "description": "The type used to filter subscriptions. This will check the subscription's `subscriptionFilter.typeFilter` field.\n> **&#9432; Info:** Filtering by `typeFilter` may affect paging. Additional post filtering may be performed if OData-like expressions are used in the subscriptions.\n"
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Not enough permissions/roles to perform this operation.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/notification2/subscriptions?context=tenant&currentPage=1&pageSize=5&source=<string>&subscription=<string>&typeFilter=<string>&withTotalElements=false&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "notification2",
                        "subscriptions"
                      ],
                      "query": [
                        {
                          "key": "context",
                          "value": "tenant",
                          "description": "The context to which the subscription is associated."
                        },
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the subscription is associated."
                        },
                        {
                          "key": "subscription",
                          "value": "<string>",
                          "description": "The subscription name by which filtering will be done."
                        },
                        {
                          "key": "typeFilter",
                          "value": "<string>",
                          "description": "The type used to filter subscriptions. This will check the subscription's `subscriptionFilter.typeFilter` field.\n> **&#9432; Info:** Filtering by `typeFilter` may affect paging. Additional post filtering may be performed if OData-like expressions are used in the subscriptions.\n"
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Remove subscriptions by source",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Cumulocity-Processing-Mode",
                    "value": "PERSISTENT",
                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/notification2/subscriptions?context=mo&source=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "notification2",
                    "subscriptions"
                  ],
                  "query": [
                    {
                      "key": "context",
                      "value": "mo",
                      "description": "The context to which the subscription is associated.\n> **&#9432; Info:** If the value is `mo` (managed object), then `source` must also be provided in the query.\n"
                    },
                    {
                      "key": "source",
                      "value": "<string>",
                      "description": "The managed object ID to which the subscription is associated."
                    }
                  ]
                },
                "description": "Remove subscriptions by source and context.\n\n>**&#9432; Info:** The request will result in an error if there are no query parameters. The `source` parameter is optional only if the `context` parameter equals `tenant`.\n\n<section><h5>Required roles</h5>\nROLE_NOTIFICATION_2_ADMIN\n</section>\n"
              },
              "response": [
                {
                  "name": "A collection of subscriptions was removed.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/notification2/subscriptions?context=mo&source=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "notification2",
                        "subscriptions"
                      ],
                      "query": [
                        {
                          "key": "context",
                          "value": "mo",
                          "description": "The context to which the subscription is associated.\n> **&#9432; Info:** If the value is `mo` (managed object), then `source` must also be provided in the query.\n"
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the subscription is associated."
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/notification2/subscriptions?context=mo&source=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "notification2",
                        "subscriptions"
                      ],
                      "query": [
                        {
                          "key": "context",
                          "value": "mo",
                          "description": "The context to which the subscription is associated.\n> **&#9432; Info:** If the value is `mo` (managed object), then `source` must also be provided in the query.\n"
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the subscription is associated."
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Not enough permissions/roles to perform this operation.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/notification2/subscriptions?context=mo&source=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "notification2",
                        "subscriptions"
                      ],
                      "query": [
                        {
                          "key": "context",
                          "value": "mo",
                          "description": "The context to which the subscription is associated.\n> **&#9432; Info:** If the value is `mo` (managed object), then `source` must also be provided in the query.\n"
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the subscription is associated."
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Unprocessable Entity – error in query parameters",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/notification2/subscriptions?context=mo&source=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "notification2",
                        "subscriptions"
                      ],
                      "query": [
                        {
                          "key": "context",
                          "value": "mo",
                          "description": "The context to which the subscription is associated.\n> **&#9432; Info:** If the value is `mo` (managed object), then `source` must also be provided in the query.\n"
                        },
                        {
                          "key": "source",
                          "value": "<string>",
                          "description": "The managed object ID to which the subscription is associated."
                        }
                      ]
                    }
                  },
                  "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                  "code": 422,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "Retrieve URIs to collections of notification subscriptions",
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "username",
                  "value": "{{basicAuthUsername}}",
                  "type": "string"
                },
                {
                  "key": "password",
                  "value": "{{basicAuthPassword}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/vnd.com.nsn.cumulocity.notificationapi+json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/notification2",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "notification2"
              ]
            },
            "description": "Retrieve URIs and URI templates to collections of notification subscriptions.\n\n<section><h5>Required roles</h5>\nROLE_NOTIFICATION_2_ADMIN\n</section>\n"
          },
          "response": [
            {
              "name": "The request has succeeded and the URIs are sent in the response.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.notificationapi+json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/notification2",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "notification2"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.com.nsn.cumulocity.notificationapi+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"self\": \"<uri>\",\n  \"notificationSubscriptions\": {\n    \"self\": \"<uri>\",\n    \"subscriptions\": [\n      {\n        \"context\": \"tenant\",\n        \"subscription\": \"v6m\",\n        \"fragmentsToCopy\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"id\": \"<string>\",\n        \"self\": \"<uri>\",\n        \"source\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"subscriptionFilter\": {\n          \"apis\": [\n            \"operations\",\n            \"eventsWithChildren\"\n          ],\n          \"typeFilter\": \"<string>\"\n        },\n        \"nonPersistent\": false\n      },\n      {\n        \"context\": \"mo\",\n        \"subscription\": \"bFiTcu9lnm\",\n        \"fragmentsToCopy\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"id\": \"<string>\",\n        \"self\": \"<uri>\",\n        \"source\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"self\": \"<uri>\"\n        },\n        \"subscriptionFilter\": {\n          \"apis\": [\n            \"managedobjects\",\n            \"events\"\n          ],\n          \"typeFilter\": \"<string>\"\n        },\n        \"nonPersistent\": false\n      }\n    ]\n  },\n  \"notificationSubscriptionsBySource\": \"<string>\",\n  \"notificationSubscriptionsBySourceAndContext\": \"<string>\",\n  \"notificationSubscriptionsByContext\": \"<string>\"\n}"
            },
            {
              "name": "Authentication information is missing or invalid.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/notification2",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "notification2"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
            },
            {
              "name": "Not enough permissions/roles to perform this operation.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/notification2",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "notification2"
                  ]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "notification",
      "item": [
        {
          "name": "realtime",
          "item": [
            {
              "name": "Responsive communication",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Cumulocity-Processing-Mode",
                    "value": "PERSISTENT",
                    "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"channel\": \"/meta/unsubscribe\",\n  \"advice\": {\n    \"interval\": \"<integer>\",\n    \"timeout\": \"<integer>\"\n  },\n  \"connectionType\": \"<string>\",\n  \"ext\": {\n    \"com.cumulocity.authn\": {\n      \"token\": \"<string>\",\n      \"tfa\": \"<string>\",\n      \"xsrfToken\": \"<string>\"\n    },\n    \"systemOfUnits\": \"imperial\"\n  },\n  \"id\": \"<string>\",\n  \"minimumVersion\": \"<string>\",\n  \"subscription\": \"<string>\",\n  \"supportedConnectionTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"version\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/notification/realtime",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "notification",
                    "realtime"
                  ]
                },
                "description": "The Real-time notification API enables responsive communication from Cumulocity over restricted networks towards clients such as web browser and mobile devices. All clients subscribe to so-called channels to receive messages. These channels are filled by Cumulocity with the output of [Operations](#tag/Operations). In addition, particular system channels are used for the initial handshake with clients, subscription to channels, removal from channels and connection. The [Bayeux protocol](https://docs.cometd.org/current/reference/#_concepts_bayeux_protocol) over HTTPS or WSS is used as communication mechanism."
              },
              "response": [
                {
                  "name": "The operation was completed and the result is sent in the response.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"channel\": \"/meta/unsubscribe\",\n  \"advice\": {\n    \"interval\": \"<integer>\",\n    \"timeout\": \"<integer>\"\n  },\n  \"connectionType\": \"<string>\",\n  \"ext\": {\n    \"com.cumulocity.authn\": {\n      \"token\": \"<string>\",\n      \"tfa\": \"<string>\",\n      \"xsrfToken\": \"<string>\"\n    },\n    \"systemOfUnits\": \"imperial\"\n  },\n  \"id\": \"<string>\",\n  \"minimumVersion\": \"<string>\",\n  \"subscription\": \"<string>\",\n  \"supportedConnectionTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"version\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/notification/realtime",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "notification",
                        "realtime"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"channel\": \"/meta/handshake\",\n  \"advice\": {\n    \"interval\": \"<integer>\",\n    \"timeout\": \"<integer>\"\n  },\n  \"clientId\": \"<string>\",\n  \"connectionType\": \"<string>\",\n  \"data\": {},\n  \"error\": \"<string>\",\n  \"ext\": {\n    \"com.cumulocity.authn\": {\n      \"token\": \"<string>\",\n      \"tfa\": \"<string>\",\n      \"xsrfToken\": \"<string>\"\n    },\n    \"systemOfUnits\": \"metric\"\n  },\n  \"id\": \"<string>\",\n  \"minimumVersion\": \"<string>\",\n  \"subscription\": \"<string>\",\n  \"successful\": \"<boolean>\",\n  \"supportedConnectionTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"version\": \"<string>\"\n}"
                },
                {
                  "name": "Unprocessable Entity – invalid payload.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"channel\": \"/meta/unsubscribe\",\n  \"advice\": {\n    \"interval\": \"<integer>\",\n    \"timeout\": \"<integer>\"\n  },\n  \"connectionType\": \"<string>\",\n  \"ext\": {\n    \"com.cumulocity.authn\": {\n      \"token\": \"<string>\",\n      \"tfa\": \"<string>\",\n      \"xsrfToken\": \"<string>\"\n    },\n    \"systemOfUnits\": \"imperial\"\n  },\n  \"id\": \"<string>\",\n  \"minimumVersion\": \"<string>\",\n  \"subscription\": \"<string>\",\n  \"supportedConnectionTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"version\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/notification/realtime",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "notification",
                        "realtime"
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"channel\": \"/meta/unsubscribe\",\n  \"advice\": {\n    \"interval\": \"<integer>\",\n    \"timeout\": \"<integer>\"\n  },\n  \"connectionType\": \"<string>\",\n  \"ext\": {\n    \"com.cumulocity.authn\": {\n      \"token\": \"<string>\",\n      \"tfa\": \"<string>\",\n      \"xsrfToken\": \"<string>\"\n    },\n    \"systemOfUnits\": \"imperial\"\n  },\n  \"id\": \"<string>\",\n  \"minimumVersion\": \"<string>\",\n  \"subscription\": \"<string>\",\n  \"supportedConnectionTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"version\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/notification/realtime",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "notification",
                        "realtime"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "retention",
      "item": [
        {
          "name": "retentions",
          "item": [
            {
              "name": "{id}",
              "item": [
                {
                  "name": "Retrieve a retention rule",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.retentionrule+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/retention/retentions/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "retention",
                        "retentions",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the retention rule."
                        }
                      ]
                    },
                    "description": "Retrieve a specific retention rule by a given ID.\n\n<section><h5>Required roles</h5>\nROLE_RETENTION_RULE_READ\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the retention rule is sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.retentionrule+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/retention/retentions/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "retention",
                            "retentions",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.retentionrule+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"dataType\": \"*\",\n  \"editable\": true,\n  \"fragmentType\": \"*\",\n  \"id\": \"<string>\",\n  \"maximumAge\": \"<integer>\",\n  \"self\": \"<uri>\",\n  \"source\": \"*\",\n  \"type\": \"*\"\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/retention/retentions/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "retention",
                            "retentions",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not authorized to perform this operation.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/retention/retentions/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "retention",
                            "retentions",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Retention rule not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/retention/retentions/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "retention",
                            "retentions",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Update a retention rule",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.retentionrule+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.retentionrule+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"dataType\": \"*\",\n  \"editable\": true,\n  \"fragmentType\": \"*\",\n  \"maximumAge\": \"<integer>\",\n  \"source\": \"*\",\n  \"type\": \"*\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/retention/retentions/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "retention",
                        "retentions",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the retention rule."
                        }
                      ]
                    },
                    "description": "Update a specific retention rule by a given ID.\n\n<section><h5>Required roles</h5>\nROLE_RETENTION_RULE_ADMIN <b>AND</b> (the rule is editable <b>OR</b> it's the tenant management)\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "A retention rule was updated.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.retentionrule+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.retentionrule+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"dataType\": \"*\",\n  \"editable\": true,\n  \"fragmentType\": \"*\",\n  \"maximumAge\": \"<integer>\",\n  \"source\": \"*\",\n  \"type\": \"*\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/retention/retentions/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "retention",
                            "retentions",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.retentionrule+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"dataType\": \"*\",\n  \"editable\": true,\n  \"fragmentType\": \"*\",\n  \"id\": \"<string>\",\n  \"maximumAge\": \"<integer>\",\n  \"self\": \"<uri>\",\n  \"source\": \"*\",\n  \"type\": \"*\"\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.retentionrule+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"dataType\": \"*\",\n  \"editable\": true,\n  \"fragmentType\": \"*\",\n  \"maximumAge\": \"<integer>\",\n  \"source\": \"*\",\n  \"type\": \"*\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/retention/retentions/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "retention",
                            "retentions",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not authorized to perform this operation.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.retentionrule+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"dataType\": \"*\",\n  \"editable\": true,\n  \"fragmentType\": \"*\",\n  \"maximumAge\": \"<integer>\",\n  \"source\": \"*\",\n  \"type\": \"*\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/retention/retentions/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "retention",
                            "retentions",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Retention rule not found.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.retentionrule+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"dataType\": \"*\",\n  \"editable\": true,\n  \"fragmentType\": \"*\",\n  \"maximumAge\": \"<integer>\",\n  \"source\": \"*\",\n  \"type\": \"*\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/retention/retentions/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "retention",
                            "retentions",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unprocessable Entity – invalid payload.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.retentionrule+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"dataType\": \"*\",\n  \"editable\": true,\n  \"fragmentType\": \"*\",\n  \"maximumAge\": \"<integer>\",\n  \"source\": \"*\",\n  \"type\": \"*\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/retention/retentions/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "retention",
                            "retentions",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                      "code": 422,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Remove a retention rule",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/retention/retentions/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "retention",
                        "retentions",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of the retention rule."
                        }
                      ]
                    },
                    "description": "Remove a specific retention rule by a given ID.\n\n<section><h5>Required roles</h5>\nROLE_RETENTION_RULE_ADMIN <b>AND</b> the rule is editable\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "A retention rule was removed.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/retention/retentions/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "retention",
                            "retentions",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/retention/retentions/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "retention",
                            "retentions",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not authorized to perform this operation.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/retention/retentions/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "retention",
                            "retentions",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Retention rule not found.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/retention/retentions/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "retention",
                            "retentions",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Create a retention rule",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.com.nsn.cumulocity.retentionrule+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.retentionrule+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"maximumAge\": \"<integer>\",\n  \"dataType\": \"*\",\n  \"editable\": true,\n  \"fragmentType\": \"*\",\n  \"source\": \"*\",\n  \"type\": \"*\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/retention/retentions",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "retention",
                    "retentions"
                  ]
                },
                "description": "Create a retention rule on your tenant.\n\n<section><h5>Required roles</h5>\nROLE_RETENTION_RULE_ADMIN\n</section>\n"
              },
              "response": [
                {
                  "name": "A retention rule was created.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.retentionrule+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.retentionrule+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"maximumAge\": \"<integer>\",\n  \"dataType\": \"*\",\n  \"editable\": true,\n  \"fragmentType\": \"*\",\n  \"source\": \"*\",\n  \"type\": \"*\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/retention/retentions",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "retention",
                        "retentions"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.retentionrule+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"dataType\": \"*\",\n  \"editable\": true,\n  \"fragmentType\": \"*\",\n  \"id\": \"<string>\",\n  \"maximumAge\": \"<integer>\",\n  \"self\": \"<uri>\",\n  \"source\": \"*\",\n  \"type\": \"*\"\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.retentionrule+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"maximumAge\": \"<integer>\",\n  \"dataType\": \"*\",\n  \"editable\": true,\n  \"fragmentType\": \"*\",\n  \"source\": \"*\",\n  \"type\": \"*\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/retention/retentions",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "retention",
                        "retentions"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Not authorized to perform this operation.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.retentionrule+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"maximumAge\": \"<integer>\",\n  \"dataType\": \"*\",\n  \"editable\": true,\n  \"fragmentType\": \"*\",\n  \"source\": \"*\",\n  \"type\": \"*\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/retention/retentions",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "retention",
                        "retentions"
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Unprocessable Entity – invalid payload.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.retentionrule+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"maximumAge\": \"<integer>\",\n  \"dataType\": \"*\",\n  \"editable\": true,\n  \"fragmentType\": \"*\",\n  \"source\": \"*\",\n  \"type\": \"*\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/retention/retentions",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "retention",
                        "retentions"
                      ]
                    }
                  },
                  "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                  "code": 422,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Retrieve all retention rules",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.retentionrulecollection+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/retention/retentions?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "retention",
                    "retentions"
                  ],
                  "query": [
                    {
                      "key": "currentPage",
                      "value": "1",
                      "description": "The current page of the paginated results."
                    },
                    {
                      "key": "pageSize",
                      "value": "5",
                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                    },
                    {
                      "key": "withTotalElements",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                    },
                    {
                      "key": "withTotalPages",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                    }
                  ]
                },
                "description": "Retrieve all retention rules on your tenant.\n\n<section><h5>Required roles</h5>\nROLE_RETENTION_RULE_READ\n</section>\n"
              },
              "response": [
                {
                  "name": "The request has succeeded and all retention rules are sent in the response.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.retentionrulecollection+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/retention/retentions?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "retention",
                        "retentions"
                      ],
                      "query": [
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.retentionrulecollection+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"retentionRules\": [\n    {\n      \"dataType\": \"*\",\n      \"editable\": true,\n      \"fragmentType\": \"*\",\n      \"id\": \"<string>\",\n      \"maximumAge\": \"<integer>\",\n      \"self\": \"<uri>\",\n      \"source\": \"*\",\n      \"type\": \"*\"\n    },\n    {\n      \"dataType\": \"*\",\n      \"editable\": true,\n      \"fragmentType\": \"*\",\n      \"id\": \"<string>\",\n      \"maximumAge\": \"<integer>\",\n      \"self\": \"<uri>\",\n      \"source\": \"*\",\n      \"type\": \"*\"\n    }\n  ],\n  \"self\": \"<uri>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  }\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/retention/retentions?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "retention",
                        "retentions"
                      ],
                      "query": [
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Not authorized to perform this operation.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/retention/retentions?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "retention",
                        "retentions"
                      ],
                      "query": [
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "tenant",
      "item": [
        {
          "name": "tenants",
          "item": [
            {
              "name": "{tenantId}",
              "item": [
                {
                  "name": "applications",
                  "item": [
                    {
                      "name": "{applicationId}",
                      "item": [
                        {
                          "name": "Unsubscribe from an application",
                          "request": {
                            "auth": {
                              "type": "basic",
                              "basic": [
                                {
                                  "key": "username",
                                  "value": "{{basicAuthUsername}}",
                                  "type": "string"
                                },
                                {
                                  "key": "password",
                                  "value": "{{basicAuthPassword}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/applications/:applicationId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "applications",
                                ":applicationId"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of a Cumulocity tenant."
                                },
                                {
                                  "key": "applicationId",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of the application."
                                }
                              ]
                            },
                            "description": "Unsubscribe a tenant (by a given tenant ID) from an application (by a given application ID).\n\n<section><h5>Required roles</h5>\n(ROLE_APPLICATION_MANAGEMENT_ADMIN <b>AND</b> is the application owner <b>AND</b> is the current tenant) <b>OR</b><br>\n((ROLE_TENANT_MANAGEMENT_ADMIN <b>OR</b> ROLE_TENANT_MANAGEMENT_UPDATE) <b>AND</b> (the current tenant is its parent <b>OR</b> is the management tenant))\n</section>\n"
                          },
                          "response": [
                            {
                              "name": "A tenant was unsubscribed from an application.",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/tenant/tenants/:tenantId/applications/:applicationId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "tenant",
                                    "tenants",
                                    ":tenantId",
                                    "applications",
                                    ":applicationId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "applicationId"
                                    }
                                  ]
                                }
                              },
                              "status": "No Content",
                              "code": 204,
                              "_postman_previewlanguage": "text",
                              "header": [],
                              "cookie": [],
                              "body": ""
                            },
                            {
                              "name": "Authentication information is missing or invalid.",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/tenant/tenants/:tenantId/applications/:applicationId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "tenant",
                                    "tenants",
                                    ":tenantId",
                                    "applications",
                                    ":applicationId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "applicationId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Tenant not found.",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/tenant/tenants/:tenantId/applications/:applicationId",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "tenant",
                                    "tenants",
                                    ":tenantId",
                                    "applications",
                                    ":applicationId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "applicationId"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Subscribe to an application",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.applicationreference+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.applicationreference+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"application\": {\n    \"self\": \"<string>\"\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/tenants/:tenantId/applications",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "tenants",
                            ":tenantId",
                            "applications"
                          ],
                          "variable": [
                            {
                              "key": "tenantId",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of a Cumulocity tenant."
                            }
                          ]
                        },
                        "description": "Subscribe a tenant (by a given ID) to an application.\n\n<section><h5>Required roles</h5>\n1. the current tenant is application owner and has the role ROLE_APPLICATION_MANAGEMENT_ADMIN <b>OR</b><br>\n2. for applications that are not microservices, the current tenant is the management tenant or the parent of the application owner tenant, and the user has one of the follwoing roles: ROLE_TENANT_MANAGEMENT_ADMIN, ROLE_TENANT_MANAGEMENT_UPDATE <b>OR</b><br>\n3. for microservices, the current tenant is the management tenant or the parent of the application owner tenant, and the user has the role ROLE_TENANT_MANAGEMENT_ADMIN OR ROLE_TENANT_MANAGEMENT_UPDATE and one of following conditions is met:<br>\n* the microservice has no manifest<br>\n* the microservice version is supported<br>\n* the current tenant is subscribed to 'feature-privileged-microservice-hosting'\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "A tenant was subscribed to an application.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.applicationreference+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.applicationreference+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"application\": {\n    \"self\": \"<string>\"\n  }\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/applications",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "applications"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.applicationreference+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"self\": \"<uri>\",\n  \"application\": {\n    \"availability\": \"PRIVATE\",\n    \"contextPath\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<string>\",\n    \"key\": \"<string>\",\n    \"name\": \"<string>\",\n    \"owner\": {\n      \"self\": \"<uri>\",\n      \"tenant\": {\n        \"id\": \"<string>\"\n      }\n    },\n    \"self\": \"<uri>\",\n    \"type\": \"HOSTED\",\n    \"manifest\": {\n      \"apiVersion\": \"<string>\",\n      \"billingMode\": \"RESOURCES\",\n      \"contextPath\": \"<string>\",\n      \"extensions\": [\n        {\n          \"path\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"isolation\": \"MULTI_TENANT\",\n      \"livenessProbe\": {\n        \"failureThreshold\": \"<integer>\",\n        \"periodSeconds\": \"<integer>\",\n        \"timeoutSeconds\": \"<integer>\",\n        \"successThreshold\": \"<integer>\",\n        \"initialDelaySeconds\": \"<integer>\",\n        \"httpGet\": {\n          \"path\": \"<string>\",\n          \"port\": \"<integer>\"\n        }\n      },\n      \"provider\": {\n        \"name\": \"<string>\"\n      },\n      \"readinessProbe\": {\n        \"failureThreshold\": \"<integer>\",\n        \"periodSeconds\": \"<integer>\",\n        \"timeoutSeconds\": \"<integer>\",\n        \"successThreshold\": \"<integer>\",\n        \"initialDelaySeconds\": \"<integer>\",\n        \"httpGet\": {\n          \"path\": \"<string>\",\n          \"port\": \"<integer>\"\n        }\n      },\n      \"requestResources\": {\n        \"cpu\": \"<string>\",\n        \"memory\": \"<string>\"\n      },\n      \"resources\": {\n        \"cpu\": \"<string>\",\n        \"memory\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"scale\": \"NONE\",\n      \"settings\": [\n        {\n          \"key\": \"<string>\",\n          \"valueSchema\": {\n            \"type\": \"<string>\"\n          },\n          \"defaultValue\": \"<string>\",\n          \"editable\": \"<boolean>\",\n          \"inheritFromOwner\": \"<boolean>\"\n        },\n        {\n          \"key\": \"<string>\",\n          \"valueSchema\": {\n            \"type\": \"<string>\"\n          },\n          \"defaultValue\": \"<string>\",\n          \"editable\": \"<boolean>\",\n          \"inheritFromOwner\": \"<boolean>\"\n        }\n      ],\n      \"settingsCategory\": \"<string>\",\n      \"version\": \"<string>\"\n    },\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"requiredRoles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"breadcrumbs\": \"<boolean>\",\n    \"contentSecurityPolicy\": \"<string>\",\n    \"dynamicOptionsUrl\": \"<string>\",\n    \"globalTitle\": \"<string>\",\n    \"legacy\": \"<boolean>\",\n    \"rightDrawer\": \"<boolean>\",\n    \"upgrade\": \"<boolean>\",\n    \"activeVersionId\": \"<string>\",\n    \"resourcesUrl\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.applicationreference+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"application\": {\n    \"self\": \"<string>\"\n  }\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/applications",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "applications"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Application not found.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.applicationreference+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"application\": {\n    \"self\": \"<string>\"\n  }\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/applications",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "applications"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "The application is already assigned to the tenant.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.applicationreference+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"application\": {\n    \"self\": \"<string>\"\n  }\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/applications",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "applications"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Conflict",
                          "code": 409,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Unprocessable Entity – invalid payload.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/vnd.com.nsn.cumulocity.applicationreference+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"application\": {\n    \"self\": \"<string>\"\n  }\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/applications",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "applications"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                          "code": 422,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "Retrieve subscribed applications",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.applicationreferencecollection+json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/tenants/:tenantId/applications?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "tenants",
                            ":tenantId",
                            "applications"
                          ],
                          "query": [
                            {
                              "key": "currentPage",
                              "value": "1",
                              "description": "The current page of the paginated results."
                            },
                            {
                              "key": "pageSize",
                              "value": "5",
                              "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                            },
                            {
                              "key": "withTotalElements",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                            },
                            {
                              "key": "withTotalPages",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantId",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of a Cumulocity tenant."
                            }
                          ]
                        },
                        "description": "Retrieve the tenant subscribed applications by a given tenant ID.\n\n<section><h5>Required roles</h5>\n(ROLE_TENANT_MANAGEMENT_READ <b>OR</b> ROLE_TENANT_ADMIN) <b>AND</b> (the current tenant is its parent <b>OR</b> is the management tenant)\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The request has succeeded and the tenant applications are sent in the response.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.applicationreferencecollection+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/applications?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "applications"
                              ],
                              "query": [
                                {
                                  "key": "currentPage",
                                  "value": "1",
                                  "description": "The current page of the paginated results."
                                },
                                {
                                  "key": "pageSize",
                                  "value": "5",
                                  "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                },
                                {
                                  "key": "withTotalElements",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                },
                                {
                                  "key": "withTotalPages",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.applicationreferencecollection+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"references\": [\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"MICROSERVICE\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"PER_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    },\n    {\n      \"availability\": \"PRIVATE\",\n      \"contextPath\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner\": {\n        \"self\": \"<uri>\",\n        \"tenant\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"self\": \"<uri>\",\n      \"type\": \"HOSTED\",\n      \"manifest\": {\n        \"apiVersion\": \"<string>\",\n        \"billingMode\": \"RESOURCES\",\n        \"contextPath\": \"<string>\",\n        \"extensions\": [\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"isolation\": \"PER_TENANT\",\n        \"livenessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"provider\": {\n          \"name\": \"<string>\"\n        },\n        \"readinessProbe\": {\n          \"failureThreshold\": \"<integer>\",\n          \"periodSeconds\": \"<integer>\",\n          \"timeoutSeconds\": \"<integer>\",\n          \"successThreshold\": \"<integer>\",\n          \"initialDelaySeconds\": \"<integer>\",\n          \"httpGet\": {\n            \"path\": \"<string>\",\n            \"port\": \"<integer>\"\n          }\n        },\n        \"requestResources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"resources\": {\n          \"cpu\": \"<string>\",\n          \"memory\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scale\": \"NONE\",\n        \"settings\": [\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"valueSchema\": {\n              \"type\": \"<string>\"\n            },\n            \"defaultValue\": \"<string>\",\n            \"editable\": \"<boolean>\",\n            \"inheritFromOwner\": \"<boolean>\"\n          }\n        ],\n        \"settingsCategory\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"requiredRoles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"breadcrumbs\": \"<boolean>\",\n      \"contentSecurityPolicy\": \"<string>\",\n      \"dynamicOptionsUrl\": \"<string>\",\n      \"globalTitle\": \"<string>\",\n      \"legacy\": \"<boolean>\",\n      \"rightDrawer\": \"<boolean>\",\n      \"upgrade\": \"<boolean>\",\n      \"activeVersionId\": \"<string>\",\n      \"resourcesUrl\": \"<string>\"\n    }\n  ],\n  \"self\": \"<uri>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  }\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/applications?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "applications"
                              ],
                              "query": [
                                {
                                  "key": "currentPage",
                                  "value": "1",
                                  "description": "The current page of the paginated results."
                                },
                                {
                                  "key": "pageSize",
                                  "value": "5",
                                  "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                },
                                {
                                  "key": "withTotalElements",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                },
                                {
                                  "key": "withTotalPages",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Not authorized to perform this operation.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/applications?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "applications"
                              ],
                              "query": [
                                {
                                  "key": "currentPage",
                                  "value": "1",
                                  "description": "The current page of the paginated results."
                                },
                                {
                                  "key": "pageSize",
                                  "value": "5",
                                  "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                },
                                {
                                  "key": "withTotalElements",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                },
                                {
                                  "key": "withTotalPages",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Tenant not found.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/applications?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "applications"
                              ],
                              "query": [
                                {
                                  "key": "currentPage",
                                  "value": "1",
                                  "description": "The current page of the paginated results."
                                },
                                {
                                  "key": "pageSize",
                                  "value": "5",
                                  "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                },
                                {
                                  "key": "withTotalElements",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                },
                                {
                                  "key": "withTotalPages",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "trusted-certificates",
                  "item": [
                    {
                      "name": "bulk",
                      "item": [
                        {
                          "name": "Add multiple certificates",
                          "request": {
                            "auth": {
                              "type": "basic",
                              "basic": [
                                {
                                  "key": "username",
                                  "value": "{{basicAuthUsername}}",
                                  "type": "string"
                                },
                                {
                                  "key": "password",
                                  "value": "{{basicAuthPassword}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"certificates\": [\n    {\n      \"certInPemFormat\": \"<string>\",\n      \"status\": \"DISABLED\",\n      \"autoRegistrationEnabled\": false,\n      \"name\": \"<string>\"\n    },\n    {\n      \"certInPemFormat\": \"<string>\",\n      \"status\": \"DISABLED\",\n      \"autoRegistrationEnabled\": false,\n      \"name\": \"<string>\"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates/bulk?addToTrustStore=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "trusted-certificates",
                                "bulk"
                              ],
                              "query": [
                                {
                                  "key": "addToTrustStore",
                                  "value": "false",
                                  "description": "If set to `true` the certificate is added to the truststore.\n\nThe truststore contains all trusted certificates. A connection to a device is only established if it connects to Cumulocity with a certificate in the truststore.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of a Cumulocity tenant."
                                }
                              ]
                            },
                            "description": "Add multiple trusted certificates to a specific tenant (by a given ID) which can be further used by the devices to establish connections with the Cumulocity platform.\n\n<section><h5>Required roles</h5>\n(ROLE_TENANT_MANAGEMENT_ADMIN <b>OR</b> ROLE_TENANT_ADMIN) <b>AND</b> (is the current tenant)\n</section>\n"
                          },
                          "response": [
                            {
                              "name": "The certificates were added to the tenant.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"certificates\": [\n    {\n      \"certInPemFormat\": \"<string>\",\n      \"status\": \"DISABLED\",\n      \"autoRegistrationEnabled\": false,\n      \"name\": \"<string>\"\n    },\n    {\n      \"certInPemFormat\": \"<string>\",\n      \"status\": \"DISABLED\",\n      \"autoRegistrationEnabled\": false,\n      \"name\": \"<string>\"\n    }\n  ]\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates/bulk?addToTrustStore=false",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "tenant",
                                    "tenants",
                                    ":tenantId",
                                    "trusted-certificates",
                                    "bulk"
                                  ],
                                  "query": [
                                    {
                                      "key": "addToTrustStore",
                                      "value": "false",
                                      "description": "If set to `true` the certificate is added to the truststore.\n\nThe truststore contains all trusted certificates. A connection to a device is only established if it connects to Cumulocity with a certificate in the truststore.\n"
                                    }
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    }
                                  ]
                                }
                              },
                              "status": "Created",
                              "code": 201,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"certificates\": [\n    {\n      \"algorithmName\": \"<string>\",\n      \"autoRegistrationEnabled\": false,\n      \"certInPemFormat\": \"<string>\",\n      \"fingerprint\": \"<string>\",\n      \"issuer\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notAfter\": \"<dateTime>\",\n      \"notBefore\": \"<dateTime>\",\n      \"proofOfPossessionValid\": \"<boolean>\",\n      \"proofOfPossessionUnsignedVerificationCode\": \"<string>\",\n      \"proofOfPossessionVerificationCodeUsableUntil\": \"<dateTime>\",\n      \"self\": \"<uri>\",\n      \"serialNumber\": \"<string>\",\n      \"status\": \"ENABLED\",\n      \"subject\": \"<string>\",\n      \"version\": \"<integer>\"\n    },\n    {\n      \"algorithmName\": \"<string>\",\n      \"autoRegistrationEnabled\": false,\n      \"certInPemFormat\": \"<string>\",\n      \"fingerprint\": \"<string>\",\n      \"issuer\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notAfter\": \"<dateTime>\",\n      \"notBefore\": \"<dateTime>\",\n      \"proofOfPossessionValid\": \"<boolean>\",\n      \"proofOfPossessionUnsignedVerificationCode\": \"<string>\",\n      \"proofOfPossessionVerificationCodeUsableUntil\": \"<dateTime>\",\n      \"self\": \"<uri>\",\n      \"serialNumber\": \"<string>\",\n      \"status\": \"DISABLED\",\n      \"subject\": \"<string>\",\n      \"version\": \"<integer>\"\n    }\n  ],\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  }\n}"
                            },
                            {
                              "name": "Authentication information is missing or invalid.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"certificates\": [\n    {\n      \"certInPemFormat\": \"<string>\",\n      \"status\": \"DISABLED\",\n      \"autoRegistrationEnabled\": false,\n      \"name\": \"<string>\"\n    },\n    {\n      \"certInPemFormat\": \"<string>\",\n      \"status\": \"DISABLED\",\n      \"autoRegistrationEnabled\": false,\n      \"name\": \"<string>\"\n    }\n  ]\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates/bulk?addToTrustStore=false",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "tenant",
                                    "tenants",
                                    ":tenantId",
                                    "trusted-certificates",
                                    "bulk"
                                  ],
                                  "query": [
                                    {
                                      "key": "addToTrustStore",
                                      "value": "false",
                                      "description": "If set to `true` the certificate is added to the truststore.\n\nThe truststore contains all trusted certificates. A connection to a device is only established if it connects to Cumulocity with a certificate in the truststore.\n"
                                    }
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Tenant not found.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"certificates\": [\n    {\n      \"certInPemFormat\": \"<string>\",\n      \"status\": \"DISABLED\",\n      \"autoRegistrationEnabled\": false,\n      \"name\": \"<string>\"\n    },\n    {\n      \"certInPemFormat\": \"<string>\",\n      \"status\": \"DISABLED\",\n      \"autoRegistrationEnabled\": false,\n      \"name\": \"<string>\"\n    }\n  ]\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates/bulk?addToTrustStore=false",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "tenant",
                                    "tenants",
                                    ":tenantId",
                                    "trusted-certificates",
                                    "bulk"
                                  ],
                                  "query": [
                                    {
                                      "key": "addToTrustStore",
                                      "value": "false",
                                      "description": "If set to `true` the certificate is added to the truststore.\n\nThe truststore contains all trusted certificates. A connection to a device is only established if it connects to Cumulocity with a certificate in the truststore.\n"
                                    }
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Duplicate – A certificate with the same fingerprint already exists.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"certificates\": [\n    {\n      \"certInPemFormat\": \"<string>\",\n      \"status\": \"DISABLED\",\n      \"autoRegistrationEnabled\": false,\n      \"name\": \"<string>\"\n    },\n    {\n      \"certInPemFormat\": \"<string>\",\n      \"status\": \"DISABLED\",\n      \"autoRegistrationEnabled\": false,\n      \"name\": \"<string>\"\n    }\n  ]\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates/bulk?addToTrustStore=false",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "tenant",
                                    "tenants",
                                    ":tenantId",
                                    "trusted-certificates",
                                    "bulk"
                                  ],
                                  "query": [
                                    {
                                      "key": "addToTrustStore",
                                      "value": "false",
                                      "description": "If set to `true` the certificate is added to the truststore.\n\nThe truststore contains all trusted certificates. A connection to a device is only established if it connects to Cumulocity with a certificate in the truststore.\n"
                                    }
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    }
                                  ]
                                }
                              },
                              "status": "Conflict",
                              "code": 409,
                              "_postman_previewlanguage": "text",
                              "header": [],
                              "cookie": [],
                              "body": ""
                            },
                            {
                              "name": "Unprocessable Entity – Invalid certificates data.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"certificates\": [\n    {\n      \"certInPemFormat\": \"<string>\",\n      \"status\": \"DISABLED\",\n      \"autoRegistrationEnabled\": false,\n      \"name\": \"<string>\"\n    },\n    {\n      \"certInPemFormat\": \"<string>\",\n      \"status\": \"DISABLED\",\n      \"autoRegistrationEnabled\": false,\n      \"name\": \"<string>\"\n    }\n  ]\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates/bulk?addToTrustStore=false",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "tenant",
                                    "tenants",
                                    ":tenantId",
                                    "trusted-certificates",
                                    "bulk"
                                  ],
                                  "query": [
                                    {
                                      "key": "addToTrustStore",
                                      "value": "false",
                                      "description": "If set to `true` the certificate is added to the truststore.\n\nThe truststore contains all trusted certificates. A connection to a device is only established if it connects to Cumulocity with a certificate in the truststore.\n"
                                    }
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                              "code": 422,
                              "_postman_previewlanguage": "text",
                              "header": [],
                              "cookie": [],
                              "body": ""
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "{fingerprint}",
                      "item": [
                        {
                          "name": "Retrieve a stored certificate",
                          "request": {
                            "auth": {
                              "type": "basic",
                              "basic": [
                                {
                                  "key": "username",
                                  "value": "{{basicAuthUsername}}",
                                  "type": "string"
                                },
                                {
                                  "key": "password",
                                  "value": "{{basicAuthPassword}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates/:fingerprint",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "trusted-certificates",
                                ":fingerprint"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of a Cumulocity tenant."
                                },
                                {
                                  "key": "fingerprint",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of a trusted certificate."
                                }
                              ]
                            },
                            "description": "Retrieve the data of a stored trusted certificate (by a given fingerprint) of a specific tenant (by a given ID).\n\n<section><h5>Required roles</h5>\n(ROLE_TENANT_MANAGEMENT_ADMIN <b>OR</b> ROLE_TENANT_ADMIN <b>OR</b> ROLE_TENANT_MANAGEMENT_READ) <b>AND</b> (is the current tenant <b>OR</b> is the management tenant)\n</section>\n"
                          },
                          "response": [
                            {
                              "name": "The request has succeeded and the trusted certificate is sent in the response.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates/:fingerprint",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "tenant",
                                    "tenants",
                                    ":tenantId",
                                    "trusted-certificates",
                                    ":fingerprint"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "fingerprint"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"algorithmName\": \"<string>\",\n  \"autoRegistrationEnabled\": false,\n  \"certInPemFormat\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"issuer\": \"<string>\",\n  \"name\": \"<string>\",\n  \"notAfter\": \"<dateTime>\",\n  \"notBefore\": \"<dateTime>\",\n  \"proofOfPossessionValid\": \"<boolean>\",\n  \"proofOfPossessionUnsignedVerificationCode\": \"<string>\",\n  \"proofOfPossessionVerificationCodeUsableUntil\": \"<dateTime>\",\n  \"self\": \"<uri>\",\n  \"serialNumber\": \"<string>\",\n  \"status\": \"ENABLED\",\n  \"subject\": \"<string>\",\n  \"version\": \"<integer>\"\n}"
                            },
                            {
                              "name": "Authentication information is missing or invalid.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates/:fingerprint",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "tenant",
                                    "tenants",
                                    ":tenantId",
                                    "trusted-certificates",
                                    ":fingerprint"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "fingerprint"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            }
                          ]
                        },
                        {
                          "name": "Update a stored certificate",
                          "request": {
                            "auth": {
                              "type": "basic",
                              "basic": [
                                {
                                  "key": "username",
                                  "value": "{{basicAuthUsername}}",
                                  "type": "string"
                                },
                                {
                                  "key": "password",
                                  "value": "{{basicAuthPassword}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"autoRegistrationEnabled\": false,\n  \"name\": \"<string>\",\n  \"status\": \"ENABLED\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates/:fingerprint",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "trusted-certificates",
                                ":fingerprint"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of a Cumulocity tenant."
                                },
                                {
                                  "key": "fingerprint",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of a trusted certificate."
                                }
                              ]
                            },
                            "description": "Update the data of a stored trusted certificate (by a given fingerprint) of a specific tenant (by a given ID).\n\n<section><h5>Required roles</h5>\n(ROLE_TENANT_MANAGEMENT_ADMIN <b>OR</b> ROLE_TENANT_ADMIN) <b>AND</b> (is the current tenant <b>OR</b> is the management tenant)\n</section>\n"
                          },
                          "response": [
                            {
                              "name": "The certificate was updated on the tenant.",
                              "originalRequest": {
                                "method": "PUT",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"autoRegistrationEnabled\": false,\n  \"name\": \"<string>\",\n  \"status\": \"ENABLED\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates/:fingerprint",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "tenant",
                                    "tenants",
                                    ":tenantId",
                                    "trusted-certificates",
                                    ":fingerprint"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "fingerprint"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"algorithmName\": \"<string>\",\n  \"autoRegistrationEnabled\": false,\n  \"certInPemFormat\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"issuer\": \"<string>\",\n  \"name\": \"<string>\",\n  \"notAfter\": \"<dateTime>\",\n  \"notBefore\": \"<dateTime>\",\n  \"proofOfPossessionValid\": \"<boolean>\",\n  \"proofOfPossessionUnsignedVerificationCode\": \"<string>\",\n  \"proofOfPossessionVerificationCodeUsableUntil\": \"<dateTime>\",\n  \"self\": \"<uri>\",\n  \"serialNumber\": \"<string>\",\n  \"status\": \"ENABLED\",\n  \"subject\": \"<string>\",\n  \"version\": \"<integer>\"\n}"
                            },
                            {
                              "name": "Authentication information is missing or invalid.",
                              "originalRequest": {
                                "method": "PUT",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"autoRegistrationEnabled\": false,\n  \"name\": \"<string>\",\n  \"status\": \"ENABLED\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates/:fingerprint",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "tenant",
                                    "tenants",
                                    ":tenantId",
                                    "trusted-certificates",
                                    ":fingerprint"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "fingerprint"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Certificate not found.",
                              "originalRequest": {
                                "method": "PUT",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"autoRegistrationEnabled\": false,\n  \"name\": \"<string>\",\n  \"status\": \"ENABLED\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates/:fingerprint",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "tenant",
                                    "tenants",
                                    ":tenantId",
                                    "trusted-certificates",
                                    ":fingerprint"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "fingerprint"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "text",
                              "header": [],
                              "cookie": [],
                              "body": ""
                            },
                            {
                              "name": "Unprocessable Entity – invalid payload.",
                              "originalRequest": {
                                "method": "PUT",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"autoRegistrationEnabled\": false,\n  \"name\": \"<string>\",\n  \"status\": \"ENABLED\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates/:fingerprint",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "tenant",
                                    "tenants",
                                    ":tenantId",
                                    "trusted-certificates",
                                    ":fingerprint"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "fingerprint"
                                    }
                                  ]
                                }
                              },
                              "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                              "code": 422,
                              "_postman_previewlanguage": "text",
                              "header": [],
                              "cookie": [],
                              "body": ""
                            }
                          ]
                        },
                        {
                          "name": "Remove a stored certificate",
                          "request": {
                            "auth": {
                              "type": "basic",
                              "basic": [
                                {
                                  "key": "username",
                                  "value": "{{basicAuthUsername}}",
                                  "type": "string"
                                },
                                {
                                  "key": "password",
                                  "value": "{{basicAuthPassword}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates/:fingerprint",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "trusted-certificates",
                                ":fingerprint"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of a Cumulocity tenant."
                                },
                                {
                                  "key": "fingerprint",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of a trusted certificate."
                                }
                              ]
                            },
                            "description": "Remove a stored trusted certificate (by a given fingerprint) from a specific tenant (by a given ID).\nWhen a trusted certificate is deleted, the established MQTT connection to all devices that are using the corresponding certificate are closed.\n\n<section><h5>Required roles</h5>\n(ROLE_TENANT_MANAGEMENT_ADMIN <b>OR</b> ROLE_TENANT_ADMIN) <b>AND</b> (is the current tenant <b>OR</b> is the management tenant)\n</section>\n"
                          },
                          "response": [
                            {
                              "name": "The trusted certificate was removed.",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates/:fingerprint",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "tenant",
                                    "tenants",
                                    ":tenantId",
                                    "trusted-certificates",
                                    ":fingerprint"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "fingerprint"
                                    }
                                  ]
                                }
                              },
                              "status": "No Content",
                              "code": 204,
                              "_postman_previewlanguage": "text",
                              "header": [],
                              "cookie": [],
                              "body": ""
                            },
                            {
                              "name": "Authentication information is missing or invalid.",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates/:fingerprint",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "tenant",
                                    "tenants",
                                    ":tenantId",
                                    "trusted-certificates",
                                    ":fingerprint"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "fingerprint"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Certificate not found.",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates/:fingerprint",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "tenant",
                                    "tenants",
                                    ":tenantId",
                                    "trusted-certificates",
                                    ":fingerprint"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId"
                                    },
                                    {
                                      "key": "fingerprint"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "text",
                              "header": [],
                              "cookie": [],
                              "body": ""
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Add a new certificate",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"certInPemFormat\": \"<string>\",\n  \"status\": \"ENABLED\",\n  \"autoRegistrationEnabled\": false,\n  \"name\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates?addToTrustStore=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "tenants",
                            ":tenantId",
                            "trusted-certificates"
                          ],
                          "query": [
                            {
                              "key": "addToTrustStore",
                              "value": "false",
                              "description": "If set to `true` the certificate is added to the truststore.\n\nThe truststore contains all trusted certificates. A connection to a device is only established if it connects to Cumulocity with a certificate in the truststore.\n"
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantId",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of a Cumulocity tenant."
                            }
                          ]
                        },
                        "description": "Add a new trusted certificate to a specific tenant (by a given ID) which can be further used by the devices to establish connections with the Cumulocity platform.\n\n<section><h5>Required roles</h5>\n(ROLE_TENANT_MANAGEMENT_ADMIN <b>OR</b> ROLE_TENANT_ADMIN) <b>AND</b> (is the current tenant)\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The certificate was added to the tenant.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"certInPemFormat\": \"<string>\",\n  \"status\": \"ENABLED\",\n  \"autoRegistrationEnabled\": false,\n  \"name\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates?addToTrustStore=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "trusted-certificates"
                              ],
                              "query": [
                                {
                                  "key": "addToTrustStore",
                                  "value": "false",
                                  "description": "If set to `true` the certificate is added to the truststore.\n\nThe truststore contains all trusted certificates. A connection to a device is only established if it connects to Cumulocity with a certificate in the truststore.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"algorithmName\": \"<string>\",\n  \"autoRegistrationEnabled\": false,\n  \"certInPemFormat\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"issuer\": \"<string>\",\n  \"name\": \"<string>\",\n  \"notAfter\": \"<dateTime>\",\n  \"notBefore\": \"<dateTime>\",\n  \"proofOfPossessionValid\": \"<boolean>\",\n  \"proofOfPossessionUnsignedVerificationCode\": \"<string>\",\n  \"proofOfPossessionVerificationCodeUsableUntil\": \"<dateTime>\",\n  \"self\": \"<uri>\",\n  \"serialNumber\": \"<string>\",\n  \"status\": \"ENABLED\",\n  \"subject\": \"<string>\",\n  \"version\": \"<integer>\"\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"certInPemFormat\": \"<string>\",\n  \"status\": \"ENABLED\",\n  \"autoRegistrationEnabled\": false,\n  \"name\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates?addToTrustStore=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "trusted-certificates"
                              ],
                              "query": [
                                {
                                  "key": "addToTrustStore",
                                  "value": "false",
                                  "description": "If set to `true` the certificate is added to the truststore.\n\nThe truststore contains all trusted certificates. A connection to a device is only established if it connects to Cumulocity with a certificate in the truststore.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Tenant not found.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"certInPemFormat\": \"<string>\",\n  \"status\": \"ENABLED\",\n  \"autoRegistrationEnabled\": false,\n  \"name\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates?addToTrustStore=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "trusted-certificates"
                              ],
                              "query": [
                                {
                                  "key": "addToTrustStore",
                                  "value": "false",
                                  "description": "If set to `true` the certificate is added to the truststore.\n\nThe truststore contains all trusted certificates. A connection to a device is only established if it connects to Cumulocity with a certificate in the truststore.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Duplicate – A certificate with the same fingerprint already exists.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"certInPemFormat\": \"<string>\",\n  \"status\": \"ENABLED\",\n  \"autoRegistrationEnabled\": false,\n  \"name\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates?addToTrustStore=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "trusted-certificates"
                              ],
                              "query": [
                                {
                                  "key": "addToTrustStore",
                                  "value": "false",
                                  "description": "If set to `true` the certificate is added to the truststore.\n\nThe truststore contains all trusted certificates. A connection to a device is only established if it connects to Cumulocity with a certificate in the truststore.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Conflict",
                          "code": 409,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Unprocessable Entity – Invalid certificate data.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "X-Cumulocity-Processing-Mode",
                                "value": "PERSISTENT",
                                "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"certInPemFormat\": \"<string>\",\n  \"status\": \"ENABLED\",\n  \"autoRegistrationEnabled\": false,\n  \"name\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates?addToTrustStore=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "trusted-certificates"
                              ],
                              "query": [
                                {
                                  "key": "addToTrustStore",
                                  "value": "false",
                                  "description": "If set to `true` the certificate is added to the truststore.\n\nThe truststore contains all trusted certificates. A connection to a device is only established if it connects to Cumulocity with a certificate in the truststore.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                          "code": 422,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "Retrieve all stored certificates",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "tenants",
                            ":tenantId",
                            "trusted-certificates"
                          ],
                          "query": [
                            {
                              "key": "currentPage",
                              "value": "1",
                              "description": "The current page of the paginated results."
                            },
                            {
                              "key": "pageSize",
                              "value": "5",
                              "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                            },
                            {
                              "key": "withTotalElements",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                            },
                            {
                              "key": "withTotalPages",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantId",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of a Cumulocity tenant."
                            }
                          ]
                        },
                        "description": "Retrieve all the trusted certificates of a specific tenant (by a given ID).\n\n<section><h5>Required roles</h5>\n(ROLE_TENANT_MANAGEMENT_ADMIN <b>OR</b> ROLE_TENANT_ADMIN <b>OR</b> ROLE_TENANT_MANAGEMENT_READ) <b>AND</b> (is the current tenant)\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The request has succeeded and the trusted certificates are sent in the response.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "trusted-certificates"
                              ],
                              "query": [
                                {
                                  "key": "currentPage",
                                  "value": "1",
                                  "description": "The current page of the paginated results."
                                },
                                {
                                  "key": "pageSize",
                                  "value": "5",
                                  "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                },
                                {
                                  "key": "withTotalElements",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                },
                                {
                                  "key": "withTotalPages",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"certificates\": [\n    {\n      \"algorithmName\": \"<string>\",\n      \"autoRegistrationEnabled\": false,\n      \"certInPemFormat\": \"<string>\",\n      \"fingerprint\": \"<string>\",\n      \"issuer\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notAfter\": \"<dateTime>\",\n      \"notBefore\": \"<dateTime>\",\n      \"proofOfPossessionValid\": \"<boolean>\",\n      \"proofOfPossessionUnsignedVerificationCode\": \"<string>\",\n      \"proofOfPossessionVerificationCodeUsableUntil\": \"<dateTime>\",\n      \"self\": \"<uri>\",\n      \"serialNumber\": \"<string>\",\n      \"status\": \"ENABLED\",\n      \"subject\": \"<string>\",\n      \"version\": \"<integer>\"\n    },\n    {\n      \"algorithmName\": \"<string>\",\n      \"autoRegistrationEnabled\": false,\n      \"certInPemFormat\": \"<string>\",\n      \"fingerprint\": \"<string>\",\n      \"issuer\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notAfter\": \"<dateTime>\",\n      \"notBefore\": \"<dateTime>\",\n      \"proofOfPossessionValid\": \"<boolean>\",\n      \"proofOfPossessionUnsignedVerificationCode\": \"<string>\",\n      \"proofOfPossessionVerificationCodeUsableUntil\": \"<dateTime>\",\n      \"self\": \"<uri>\",\n      \"serialNumber\": \"<string>\",\n      \"status\": \"DISABLED\",\n      \"subject\": \"<string>\",\n      \"version\": \"<integer>\"\n    }\n  ],\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  }\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "trusted-certificates"
                              ],
                              "query": [
                                {
                                  "key": "currentPage",
                                  "value": "1",
                                  "description": "The current page of the paginated results."
                                },
                                {
                                  "key": "pageSize",
                                  "value": "5",
                                  "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                },
                                {
                                  "key": "withTotalElements",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                },
                                {
                                  "key": "withTotalPages",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Not authorized to perform this operation.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "trusted-certificates"
                              ],
                              "query": [
                                {
                                  "key": "currentPage",
                                  "value": "1",
                                  "description": "The current page of the paginated results."
                                },
                                {
                                  "key": "pageSize",
                                  "value": "5",
                                  "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                },
                                {
                                  "key": "withTotalElements",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                },
                                {
                                  "key": "withTotalPages",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Tenant not found.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "trusted-certificates"
                              ],
                              "query": [
                                {
                                  "key": "currentPage",
                                  "value": "1",
                                  "description": "The current page of the paginated results."
                                },
                                {
                                  "key": "pageSize",
                                  "value": "5",
                                  "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                },
                                {
                                  "key": "withTotalElements",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                                },
                                {
                                  "key": "withTotalPages",
                                  "value": "false",
                                  "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "tfa",
                  "item": [
                    {
                      "name": "Retrieve TFA settings of a specific tenant",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/tenants/:tenantId/tfa",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "tenants",
                            ":tenantId",
                            "tfa"
                          ],
                          "variable": [
                            {
                              "key": "tenantId",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of a Cumulocity tenant."
                            }
                          ]
                        },
                        "description": "Retrieve the two-factor authentication settings of a specific tenant by a given tenant ID.\n\n<section><h5>Required roles</h5>\n((ROLE_TENANT_MANAGEMENT_READ <b>OR</b> ROLE_USER_MANAGEMENT_READ) <b>AND</b> (the current tenant is its parent <b>OR</b> is the management tenant <b>OR</b> the current user belongs to the tenant)) <b>OR</b> (the user belongs to the tenant <b>AND</b> ROLE_USER_MANAGEMENT_OWN_READ)\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The request has succeeded and the TFA settings are sent in the response.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/tfa",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "tfa"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"enabledOnSystemLevel\": \"<boolean>\",\n  \"enabledOnTenantLevel\": \"<boolean>\",\n  \"enforcedOnSystemLevel\": \"<boolean>\",\n  \"enforcedUsersGroup\": \"<string>\",\n  \"strategy\": \"SMS\",\n  \"totpEnforcedOnTenantLevel\": \"<boolean>\"\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/tfa",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "tfa"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Tenant not found.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/tfa",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "tfa"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    },
                    {
                      "name": "Sets TFA settings for a specific tenant",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"strategy\": \"TOTP\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/tenants/:tenantId/tfa",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "tenants",
                            ":tenantId",
                            "tfa"
                          ],
                          "variable": [
                            {
                              "key": "tenantId",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of a Cumulocity tenant."
                            }
                          ]
                        },
                        "description": "Sets the two-factor authentication settings of a specific tenant for a specific tenant ID.\n\n<section><h5>Required roles</h5>\n((ROLE_TENANT_MANAGEMENT_ADMIN <b>OR</b> ROLE_TENANT_MANAGEMENT_UPDATE) <b>AND</b> (the current tenant is its parent <b>OR</b> the current user belongs to the tenant)))\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The tenant's TFA configuration was updated.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"strategy\": \"TOTP\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/tfa",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "tfa"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"strategy\": \"TOTP\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/tfa",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "tfa"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Tenant not found.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"strategy\": \"TOTP\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/tenant/tenants/:tenantId/tfa",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "tenants",
                                ":tenantId",
                                "tfa"
                              ],
                              "variable": [
                                {
                                  "key": "tenantId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "trusted-certificates-pop",
                  "item": [
                    {
                      "name": "{fingerprint}",
                      "item": [
                        {
                          "name": "pop",
                          "item": [
                            {
                              "name": "Provide the proof of possession for an already uploaded certificate",
                              "request": {
                                "auth": {
                                  "type": "basic",
                                  "basic": [
                                    {
                                      "key": "username",
                                      "value": "{{basicAuthUsername}}",
                                      "type": "string"
                                    },
                                    {
                                      "key": "password",
                                      "value": "{{basicAuthPassword}}",
                                      "type": "string"
                                    }
                                  ]
                                },
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"proofOfPossessionSignedVerificationCode\": \"<string>\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates-pop/:fingerprint/pop",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "tenant",
                                    "tenants",
                                    ":tenantId",
                                    "trusted-certificates-pop",
                                    ":fingerprint",
                                    "pop"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId",
                                      "value": "<string>",
                                      "description": "(Required) Unique identifier of a Cumulocity tenant."
                                    },
                                    {
                                      "key": "fingerprint",
                                      "value": "<string>",
                                      "description": "(Required) Unique identifier of a trusted certificate."
                                    }
                                  ]
                                },
                                "description": "Provide the proof of possession for a specific uploaded certificate (by a given fingerprint) for a specific tenant (by a given ID).\n\n<div class=\"reqRoles\"><div><h5></h5></div><div>\n(ROLE_TENANT_MANAGEMENT_ADMIN <b>OR</b> ROLE_TENANT_ADMIN) <b>AND</b> is the current tenant\n</div></div>\n"
                              },
                              "response": [
                                {
                                  "name": "The provided signed verification code check was successful.",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"proofOfPossessionSignedVerificationCode\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates-pop/:fingerprint/pop",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "tenant",
                                        "tenants",
                                        ":tenantId",
                                        "trusted-certificates-pop",
                                        ":fingerprint",
                                        "pop"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "fingerprint"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "OK",
                                  "code": 200,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"algorithmName\": \"<string>\",\n  \"autoRegistrationEnabled\": false,\n  \"certInPemFormat\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"issuer\": \"<string>\",\n  \"name\": \"<string>\",\n  \"notAfter\": \"<dateTime>\",\n  \"notBefore\": \"<dateTime>\",\n  \"proofOfPossessionValid\": \"<boolean>\",\n  \"proofOfPossessionUnsignedVerificationCode\": \"<string>\",\n  \"proofOfPossessionVerificationCodeUsableUntil\": \"<dateTime>\",\n  \"self\": \"<uri>\",\n  \"serialNumber\": \"<string>\",\n  \"status\": \"ENABLED\",\n  \"subject\": \"<string>\",\n  \"version\": \"<integer>\"\n}"
                                },
                                {
                                  "name": "The provided signed verification code is not correct.",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"proofOfPossessionSignedVerificationCode\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates-pop/:fingerprint/pop",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "tenant",
                                        "tenants",
                                        ":tenantId",
                                        "trusted-certificates-pop",
                                        ":fingerprint",
                                        "pop"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "fingerprint"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Bad Request",
                                  "code": 400,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                },
                                {
                                  "name": "Authentication information is missing or invalid.",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"proofOfPossessionSignedVerificationCode\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates-pop/:fingerprint/pop",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "tenant",
                                        "tenants",
                                        ":tenantId",
                                        "trusted-certificates-pop",
                                        ":fingerprint",
                                        "pop"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "fingerprint"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                },
                                {
                                  "name": "Trusted certificate not found.",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"proofOfPossessionSignedVerificationCode\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates-pop/:fingerprint/pop",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "tenant",
                                        "tenants",
                                        ":tenantId",
                                        "trusted-certificates-pop",
                                        ":fingerprint",
                                        "pop"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "fingerprint"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Not Found",
                                  "code": 404,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                },
                                {
                                  "name": "Proof of possession for the certificate was not confirmed.",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"proofOfPossessionSignedVerificationCode\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates-pop/:fingerprint/pop",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "tenant",
                                        "tenants",
                                        ":tenantId",
                                        "trusted-certificates-pop",
                                        ":fingerprint",
                                        "pop"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "fingerprint"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                                  "code": 422,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "name": "confirmed",
                          "item": [
                            {
                              "name": "Confirm an already uploaded certificate",
                              "request": {
                                "auth": {
                                  "type": "basic",
                                  "basic": [
                                    {
                                      "key": "username",
                                      "value": "{{basicAuthUsername}}",
                                      "type": "string"
                                    },
                                    {
                                      "key": "password",
                                      "value": "{{basicAuthPassword}}",
                                      "type": "string"
                                    }
                                  ]
                                },
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates-pop/:fingerprint/confirmed",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "tenant",
                                    "tenants",
                                    ":tenantId",
                                    "trusted-certificates-pop",
                                    ":fingerprint",
                                    "confirmed"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId",
                                      "value": "<string>",
                                      "description": "(Required) Unique identifier of a Cumulocity tenant."
                                    },
                                    {
                                      "key": "fingerprint",
                                      "value": "<string>",
                                      "description": "(Required) Unique identifier of a trusted certificate."
                                    }
                                  ]
                                },
                                "description": "Confirm an already uploaded certificate (by a given fingerprint) for a specific tenant (by a given ID).\n\n<div class=\"reqRoles\"><div><h5></h5></div><div>\n(ROLE_TENANT_MANAGEMENT_ADMIN <b>OR</b> ROLE_TENANT_ADMIN) <b>AND</b> is the management tenant\n</div></div>\n"
                              },
                              "response": [
                                {
                                  "name": "The certificate is confirmed.",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates-pop/:fingerprint/confirmed",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "tenant",
                                        "tenants",
                                        ":tenantId",
                                        "trusted-certificates-pop",
                                        ":fingerprint",
                                        "confirmed"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "fingerprint"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "OK",
                                  "code": 200,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"algorithmName\": \"<string>\",\n  \"autoRegistrationEnabled\": false,\n  \"certInPemFormat\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"issuer\": \"<string>\",\n  \"name\": \"<string>\",\n  \"notAfter\": \"<dateTime>\",\n  \"notBefore\": \"<dateTime>\",\n  \"proofOfPossessionValid\": \"<boolean>\",\n  \"proofOfPossessionUnsignedVerificationCode\": \"<string>\",\n  \"proofOfPossessionVerificationCodeUsableUntil\": \"<dateTime>\",\n  \"self\": \"<uri>\",\n  \"serialNumber\": \"<string>\",\n  \"status\": \"ENABLED\",\n  \"subject\": \"<string>\",\n  \"version\": \"<integer>\"\n}"
                                },
                                {
                                  "name": "Authentication information is missing or invalid.",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates-pop/:fingerprint/confirmed",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "tenant",
                                        "tenants",
                                        ":tenantId",
                                        "trusted-certificates-pop",
                                        ":fingerprint",
                                        "confirmed"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "fingerprint"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                },
                                {
                                  "name": "Trusted certificate not found.",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates-pop/:fingerprint/confirmed",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "tenant",
                                        "tenants",
                                        ":tenantId",
                                        "trusted-certificates-pop",
                                        ":fingerprint",
                                        "confirmed"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "fingerprint"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Not Found",
                                  "code": 404,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                },
                                {
                                  "name": "The verification was not successful. Certificate not confirmed.",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates-pop/:fingerprint/confirmed",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "tenant",
                                        "tenants",
                                        ":tenantId",
                                        "trusted-certificates-pop",
                                        ":fingerprint",
                                        "confirmed"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "fingerprint"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                                  "code": 422,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "name": "verification-code",
                          "item": [
                            {
                              "name": "Generate a verification code for the proof of possession operation for the given certificate",
                              "request": {
                                "auth": {
                                  "type": "basic",
                                  "basic": [
                                    {
                                      "key": "username",
                                      "value": "{{basicAuthUsername}}",
                                      "type": "string"
                                    },
                                    {
                                      "key": "password",
                                      "value": "{{basicAuthPassword}}",
                                      "type": "string"
                                    }
                                  ]
                                },
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates-pop/:fingerprint/verification-code",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "tenant",
                                    "tenants",
                                    ":tenantId",
                                    "trusted-certificates-pop",
                                    ":fingerprint",
                                    "verification-code"
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId",
                                      "value": "<string>",
                                      "description": "(Required) Unique identifier of a Cumulocity tenant."
                                    },
                                    {
                                      "key": "fingerprint",
                                      "value": "<string>",
                                      "description": "(Required) Unique identifier of a trusted certificate."
                                    }
                                  ]
                                },
                                "description": "Generate a verification code for the proof of possession operation for the certificate (by a given fingerprint).\n\n<div class=\"reqRoles\"><div><h5></h5></div><div>\n(ROLE_TENANT_MANAGEMENT_ADMIN <b>OR</b> ROLE_TENANT_ADMIN) <b>AND</b> is the current tenant\n</div></div>\n"
                              },
                              "response": [
                                {
                                  "name": "The verification code was generated.",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates-pop/:fingerprint/verification-code",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "tenant",
                                        "tenants",
                                        ":tenantId",
                                        "trusted-certificates-pop",
                                        ":fingerprint",
                                        "verification-code"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "fingerprint"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "OK",
                                  "code": 200,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"algorithmName\": \"<string>\",\n  \"autoRegistrationEnabled\": false,\n  \"certInPemFormat\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"issuer\": \"<string>\",\n  \"name\": \"<string>\",\n  \"notAfter\": \"<dateTime>\",\n  \"notBefore\": \"<dateTime>\",\n  \"proofOfPossessionValid\": \"<boolean>\",\n  \"proofOfPossessionUnsignedVerificationCode\": \"<string>\",\n  \"proofOfPossessionVerificationCodeUsableUntil\": \"<dateTime>\",\n  \"self\": \"<uri>\",\n  \"serialNumber\": \"<string>\",\n  \"status\": \"ENABLED\",\n  \"subject\": \"<string>\",\n  \"version\": \"<integer>\"\n}"
                                },
                                {
                                  "name": "Authentication information is missing or invalid.",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates-pop/:fingerprint/verification-code",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "tenant",
                                        "tenants",
                                        ":tenantId",
                                        "trusted-certificates-pop",
                                        ":fingerprint",
                                        "verification-code"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "fingerprint"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                },
                                {
                                  "name": "Trusted certificate not found.",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/tenant/tenants/:tenantId/trusted-certificates-pop/:fingerprint/verification-code",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "tenant",
                                        "tenants",
                                        ":tenantId",
                                        "trusted-certificates-pop",
                                        ":fingerprint",
                                        "verification-code"
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "fingerprint"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Not Found",
                                  "code": 404,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Retrieve a specific tenant",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.tenant+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/tenant/tenants/:tenantId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "tenants",
                        ":tenantId"
                      ],
                      "variable": [
                        {
                          "key": "tenantId",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of a Cumulocity tenant."
                        }
                      ]
                    },
                    "description": "Retrieve a specific tenant by a given ID.\n\n<section><h5>Required roles</h5>\nROLE_TENANT_MANAGEMENT_READ <b>AND</b> (the current tenant is its parent <b>OR</b> is the management tenant)\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the tenant is sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.tenant+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/tenants/:tenantId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "tenants",
                            ":tenantId"
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.tenant+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"adminEmail\": \"<email>\",\n  \"adminName\": \"<string>\",\n  \"allowCreateTenants\": false,\n  \"applications\": {\n    \"references\": [\n      {\n        \"availability\": \"PRIVATE\",\n        \"contextPath\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<string>\",\n        \"key\": \"<string>\",\n        \"name\": \"<string>\",\n        \"owner\": {\n          \"self\": \"<uri>\",\n          \"tenant\": {\n            \"id\": \"<string>\"\n          }\n        },\n        \"self\": \"<uri>\",\n        \"type\": \"EXTERNAL\",\n        \"manifest\": {\n          \"apiVersion\": \"<string>\",\n          \"billingMode\": \"RESOURCES\",\n          \"contextPath\": \"<string>\",\n          \"extensions\": [\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"isolation\": \"PER_TENANT\",\n          \"livenessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"provider\": {\n            \"name\": \"<string>\"\n          },\n          \"readinessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"requestResources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"resources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"scale\": \"NONE\",\n          \"settings\": [\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            },\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            }\n          ],\n          \"settingsCategory\": \"<string>\",\n          \"version\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"breadcrumbs\": \"<boolean>\",\n        \"contentSecurityPolicy\": \"<string>\",\n        \"dynamicOptionsUrl\": \"<string>\",\n        \"globalTitle\": \"<string>\",\n        \"legacy\": \"<boolean>\",\n        \"rightDrawer\": \"<boolean>\",\n        \"upgrade\": \"<boolean>\",\n        \"activeVersionId\": \"<string>\",\n        \"resourcesUrl\": \"<string>\"\n      },\n      {\n        \"availability\": \"PRIVATE\",\n        \"contextPath\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<string>\",\n        \"key\": \"<string>\",\n        \"name\": \"<string>\",\n        \"owner\": {\n          \"self\": \"<uri>\",\n          \"tenant\": {\n            \"id\": \"<string>\"\n          }\n        },\n        \"self\": \"<uri>\",\n        \"type\": \"MICROSERVICE\",\n        \"manifest\": {\n          \"apiVersion\": \"<string>\",\n          \"billingMode\": \"RESOURCES\",\n          \"contextPath\": \"<string>\",\n          \"extensions\": [\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"isolation\": \"MULTI_TENANT\",\n          \"livenessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"provider\": {\n            \"name\": \"<string>\"\n          },\n          \"readinessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"requestResources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"resources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"scale\": \"NONE\",\n          \"settings\": [\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            },\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            }\n          ],\n          \"settingsCategory\": \"<string>\",\n          \"version\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"breadcrumbs\": \"<boolean>\",\n        \"contentSecurityPolicy\": \"<string>\",\n        \"dynamicOptionsUrl\": \"<string>\",\n        \"globalTitle\": \"<string>\",\n        \"legacy\": \"<boolean>\",\n        \"rightDrawer\": \"<boolean>\",\n        \"upgrade\": \"<boolean>\",\n        \"activeVersionId\": \"<string>\",\n        \"resourcesUrl\": \"<string>\"\n      }\n    ],\n    \"self\": \"<uri>\"\n  },\n  \"company\": \"<string>\",\n  \"contactName\": \"<string>\",\n  \"contactPhone\": \"<string>\",\n  \"creationTime\": \"<dateTime>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"Ute00\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"dolorc9\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"domain\": \"<hostname>\",\n  \"id\": \"<string>\",\n  \"ownedApplications\": {\n    \"references\": [\n      {\n        \"availability\": \"PRIVATE\",\n        \"contextPath\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<string>\",\n        \"key\": \"<string>\",\n        \"name\": \"<string>\",\n        \"owner\": {\n          \"self\": \"<uri>\",\n          \"tenant\": {\n            \"id\": \"<string>\"\n          }\n        },\n        \"self\": \"<uri>\",\n        \"type\": \"HOSTED\",\n        \"manifest\": {\n          \"apiVersion\": \"<string>\",\n          \"billingMode\": \"RESOURCES\",\n          \"contextPath\": \"<string>\",\n          \"extensions\": [\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"isolation\": \"PER_TENANT\",\n          \"livenessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"provider\": {\n            \"name\": \"<string>\"\n          },\n          \"readinessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"requestResources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"resources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"scale\": \"NONE\",\n          \"settings\": [\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            },\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            }\n          ],\n          \"settingsCategory\": \"<string>\",\n          \"version\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"breadcrumbs\": \"<boolean>\",\n        \"contentSecurityPolicy\": \"<string>\",\n        \"dynamicOptionsUrl\": \"<string>\",\n        \"globalTitle\": \"<string>\",\n        \"legacy\": \"<boolean>\",\n        \"rightDrawer\": \"<boolean>\",\n        \"upgrade\": \"<boolean>\",\n        \"activeVersionId\": \"<string>\",\n        \"resourcesUrl\": \"<string>\"\n      },\n      {\n        \"availability\": \"PRIVATE\",\n        \"contextPath\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<string>\",\n        \"key\": \"<string>\",\n        \"name\": \"<string>\",\n        \"owner\": {\n          \"self\": \"<uri>\",\n          \"tenant\": {\n            \"id\": \"<string>\"\n          }\n        },\n        \"self\": \"<uri>\",\n        \"type\": \"HOSTED\",\n        \"manifest\": {\n          \"apiVersion\": \"<string>\",\n          \"billingMode\": \"RESOURCES\",\n          \"contextPath\": \"<string>\",\n          \"extensions\": [\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"isolation\": \"MULTI_TENANT\",\n          \"livenessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"provider\": {\n            \"name\": \"<string>\"\n          },\n          \"readinessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"requestResources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"resources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"scale\": \"NONE\",\n          \"settings\": [\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            },\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            }\n          ],\n          \"settingsCategory\": \"<string>\",\n          \"version\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"breadcrumbs\": \"<boolean>\",\n        \"contentSecurityPolicy\": \"<string>\",\n        \"dynamicOptionsUrl\": \"<string>\",\n        \"globalTitle\": \"<string>\",\n        \"legacy\": \"<boolean>\",\n        \"rightDrawer\": \"<boolean>\",\n        \"upgrade\": \"<boolean>\",\n        \"activeVersionId\": \"<string>\",\n        \"resourcesUrl\": \"<string>\"\n      }\n    ],\n    \"self\": \"<uri>\"\n  },\n  \"parent\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"status\": \"ACTIVE\"\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/tenants/:tenantId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "tenants",
                            ":tenantId"
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not authorized to perform this operation.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/tenants/:tenantId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "tenants",
                            ":tenantId"
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Tenant not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/tenants/:tenantId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "tenants",
                            ":tenantId"
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Update a specific tenant",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.tenant+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.tenant+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"adminEmail\": \"<email>\",\n  \"adminPass\": \"<string>\",\n  \"company\": \"<string>\",\n  \"contactName\": \"<string>\",\n  \"contactPhone\": \"<string>\",\n  \"customProperties\": {\n    \"language\": \"<string>\"\n  },\n  \"domain\": \"<hostname>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/tenant/tenants/:tenantId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "tenants",
                        ":tenantId"
                      ],
                      "variable": [
                        {
                          "key": "tenantId",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of a Cumulocity tenant."
                        }
                      ]
                    },
                    "description": "Update a specific tenant by a given ID.\n\n<section><h5>Required roles</h5>\n(ROLE_TENANT_MANAGEMENT_ADMIN <b>OR</b> ROLE_TENANT_MANAGEMENT_UPDATE) <b>AND</b><br>\n((the current tenant is its parent <b>AND</b> the current tenant is allowed to create subtenants) <b>OR</b> is the management tenant)\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "A tenant was updated.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.tenant+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.tenant+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"adminEmail\": \"<email>\",\n  \"adminPass\": \"<string>\",\n  \"company\": \"<string>\",\n  \"contactName\": \"<string>\",\n  \"contactPhone\": \"<string>\",\n  \"customProperties\": {\n    \"language\": \"<string>\"\n  },\n  \"domain\": \"<hostname>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/tenants/:tenantId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "tenants",
                            ":tenantId"
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.tenant+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"adminEmail\": \"<email>\",\n  \"adminName\": \"<string>\",\n  \"allowCreateTenants\": false,\n  \"applications\": {\n    \"references\": [\n      {\n        \"availability\": \"PRIVATE\",\n        \"contextPath\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<string>\",\n        \"key\": \"<string>\",\n        \"name\": \"<string>\",\n        \"owner\": {\n          \"self\": \"<uri>\",\n          \"tenant\": {\n            \"id\": \"<string>\"\n          }\n        },\n        \"self\": \"<uri>\",\n        \"type\": \"EXTERNAL\",\n        \"manifest\": {\n          \"apiVersion\": \"<string>\",\n          \"billingMode\": \"RESOURCES\",\n          \"contextPath\": \"<string>\",\n          \"extensions\": [\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"isolation\": \"PER_TENANT\",\n          \"livenessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"provider\": {\n            \"name\": \"<string>\"\n          },\n          \"readinessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"requestResources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"resources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"scale\": \"NONE\",\n          \"settings\": [\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            },\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            }\n          ],\n          \"settingsCategory\": \"<string>\",\n          \"version\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"breadcrumbs\": \"<boolean>\",\n        \"contentSecurityPolicy\": \"<string>\",\n        \"dynamicOptionsUrl\": \"<string>\",\n        \"globalTitle\": \"<string>\",\n        \"legacy\": \"<boolean>\",\n        \"rightDrawer\": \"<boolean>\",\n        \"upgrade\": \"<boolean>\",\n        \"activeVersionId\": \"<string>\",\n        \"resourcesUrl\": \"<string>\"\n      },\n      {\n        \"availability\": \"PRIVATE\",\n        \"contextPath\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<string>\",\n        \"key\": \"<string>\",\n        \"name\": \"<string>\",\n        \"owner\": {\n          \"self\": \"<uri>\",\n          \"tenant\": {\n            \"id\": \"<string>\"\n          }\n        },\n        \"self\": \"<uri>\",\n        \"type\": \"MICROSERVICE\",\n        \"manifest\": {\n          \"apiVersion\": \"<string>\",\n          \"billingMode\": \"RESOURCES\",\n          \"contextPath\": \"<string>\",\n          \"extensions\": [\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"isolation\": \"MULTI_TENANT\",\n          \"livenessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"provider\": {\n            \"name\": \"<string>\"\n          },\n          \"readinessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"requestResources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"resources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"scale\": \"NONE\",\n          \"settings\": [\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            },\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            }\n          ],\n          \"settingsCategory\": \"<string>\",\n          \"version\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"breadcrumbs\": \"<boolean>\",\n        \"contentSecurityPolicy\": \"<string>\",\n        \"dynamicOptionsUrl\": \"<string>\",\n        \"globalTitle\": \"<string>\",\n        \"legacy\": \"<boolean>\",\n        \"rightDrawer\": \"<boolean>\",\n        \"upgrade\": \"<boolean>\",\n        \"activeVersionId\": \"<string>\",\n        \"resourcesUrl\": \"<string>\"\n      }\n    ],\n    \"self\": \"<uri>\"\n  },\n  \"company\": \"<string>\",\n  \"contactName\": \"<string>\",\n  \"contactPhone\": \"<string>\",\n  \"creationTime\": \"<dateTime>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"Ute00\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"dolorc9\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"domain\": \"<hostname>\",\n  \"id\": \"<string>\",\n  \"ownedApplications\": {\n    \"references\": [\n      {\n        \"availability\": \"PRIVATE\",\n        \"contextPath\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<string>\",\n        \"key\": \"<string>\",\n        \"name\": \"<string>\",\n        \"owner\": {\n          \"self\": \"<uri>\",\n          \"tenant\": {\n            \"id\": \"<string>\"\n          }\n        },\n        \"self\": \"<uri>\",\n        \"type\": \"HOSTED\",\n        \"manifest\": {\n          \"apiVersion\": \"<string>\",\n          \"billingMode\": \"RESOURCES\",\n          \"contextPath\": \"<string>\",\n          \"extensions\": [\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"isolation\": \"PER_TENANT\",\n          \"livenessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"provider\": {\n            \"name\": \"<string>\"\n          },\n          \"readinessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"requestResources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"resources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"scale\": \"NONE\",\n          \"settings\": [\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            },\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            }\n          ],\n          \"settingsCategory\": \"<string>\",\n          \"version\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"breadcrumbs\": \"<boolean>\",\n        \"contentSecurityPolicy\": \"<string>\",\n        \"dynamicOptionsUrl\": \"<string>\",\n        \"globalTitle\": \"<string>\",\n        \"legacy\": \"<boolean>\",\n        \"rightDrawer\": \"<boolean>\",\n        \"upgrade\": \"<boolean>\",\n        \"activeVersionId\": \"<string>\",\n        \"resourcesUrl\": \"<string>\"\n      },\n      {\n        \"availability\": \"PRIVATE\",\n        \"contextPath\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<string>\",\n        \"key\": \"<string>\",\n        \"name\": \"<string>\",\n        \"owner\": {\n          \"self\": \"<uri>\",\n          \"tenant\": {\n            \"id\": \"<string>\"\n          }\n        },\n        \"self\": \"<uri>\",\n        \"type\": \"HOSTED\",\n        \"manifest\": {\n          \"apiVersion\": \"<string>\",\n          \"billingMode\": \"RESOURCES\",\n          \"contextPath\": \"<string>\",\n          \"extensions\": [\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"isolation\": \"MULTI_TENANT\",\n          \"livenessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"provider\": {\n            \"name\": \"<string>\"\n          },\n          \"readinessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"requestResources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"resources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"scale\": \"NONE\",\n          \"settings\": [\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            },\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            }\n          ],\n          \"settingsCategory\": \"<string>\",\n          \"version\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"breadcrumbs\": \"<boolean>\",\n        \"contentSecurityPolicy\": \"<string>\",\n        \"dynamicOptionsUrl\": \"<string>\",\n        \"globalTitle\": \"<string>\",\n        \"legacy\": \"<boolean>\",\n        \"rightDrawer\": \"<boolean>\",\n        \"upgrade\": \"<boolean>\",\n        \"activeVersionId\": \"<string>\",\n        \"resourcesUrl\": \"<string>\"\n      }\n    ],\n    \"self\": \"<uri>\"\n  },\n  \"parent\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"status\": \"ACTIVE\"\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.tenant+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"adminEmail\": \"<email>\",\n  \"adminPass\": \"<string>\",\n  \"company\": \"<string>\",\n  \"contactName\": \"<string>\",\n  \"contactPhone\": \"<string>\",\n  \"customProperties\": {\n    \"language\": \"<string>\"\n  },\n  \"domain\": \"<hostname>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/tenants/:tenantId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "tenants",
                            ":tenantId"
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not authorized to perform this operation.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.tenant+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"adminEmail\": \"<email>\",\n  \"adminPass\": \"<string>\",\n  \"company\": \"<string>\",\n  \"contactName\": \"<string>\",\n  \"contactPhone\": \"<string>\",\n  \"customProperties\": {\n    \"language\": \"<string>\"\n  },\n  \"domain\": \"<hostname>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/tenants/:tenantId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "tenants",
                            ":tenantId"
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Tenant not found.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.tenant+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"adminEmail\": \"<email>\",\n  \"adminPass\": \"<string>\",\n  \"company\": \"<string>\",\n  \"contactName\": \"<string>\",\n  \"contactPhone\": \"<string>\",\n  \"customProperties\": {\n    \"language\": \"<string>\"\n  },\n  \"domain\": \"<hostname>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/tenants/:tenantId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "tenants",
                            ":tenantId"
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unprocessable Entity – invalid payload.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.tenant+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"adminEmail\": \"<email>\",\n  \"adminPass\": \"<string>\",\n  \"company\": \"<string>\",\n  \"contactName\": \"<string>\",\n  \"contactPhone\": \"<string>\",\n  \"customProperties\": {\n    \"language\": \"<string>\"\n  },\n  \"domain\": \"<hostname>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/tenants/:tenantId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "tenants",
                            ":tenantId"
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                      "code": 422,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Remove a specific tenant",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/tenant/tenants/:tenantId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "tenants",
                        ":tenantId"
                      ],
                      "variable": [
                        {
                          "key": "tenantId",
                          "value": "<string>",
                          "description": "(Required) Unique identifier of a Cumulocity tenant."
                        }
                      ]
                    },
                    "description": "Remove a specific tenant by a given ID.\n\n> **⚠️ Important:** Deleting a subtenant cannot be reverted. For security reasons, it is therefore only available in the management tenant. You cannot delete tenants from any tenant but the management tenant.\n>\n> Administrators in Enterprise Tenants are only allowed to suspend active subtenants, but not to delete them.\n\n<section><h5>Required roles</h5>\nROLE_TENANT_MANAGEMENT_ADMIN <b>AND</b> is the management tenant\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "A tenant was removed.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/tenants/:tenantId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "tenants",
                            ":tenantId"
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/tenants/:tenantId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "tenants",
                            ":tenantId"
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not authorized to perform this operation.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/tenants/:tenantId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "tenants",
                            ":tenantId"
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Tenant not found.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/tenants/:tenantId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "tenants",
                            ":tenantId"
                          ],
                          "variable": [
                            {
                              "key": "tenantId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Create a tenant",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.com.nsn.cumulocity.tenant+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.tenant+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"company\": \"<string>\",\n  \"domain\": \"<hostname>\",\n  \"adminEmail\": \"<email>\",\n  \"adminName\": \"<string>\",\n  \"adminPass\": \"<string>\",\n  \"contactName\": \"<string>\",\n  \"contactPhone\": \"<string>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"aliquip_3d\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"officia_5\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"esse182\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"elit_1\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  }\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/tenant/tenants",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "tenant",
                    "tenants"
                  ]
                },
                "description": "Create a subtenant for the current tenant.\n\n<section><h5>Required roles</h5>\n(ROLE_TENANT_MANAGEMENT_ADMIN <b>OR</b> ROLE_TENANT_MANAGEMENT_CREATE) <b>AND</b> the current tenant is allowed to create subtenants\n</section>\n"
              },
              "response": [
                {
                  "name": "A tenant was created.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.tenant+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.tenant+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"company\": \"<string>\",\n  \"domain\": \"<hostname>\",\n  \"adminEmail\": \"<email>\",\n  \"adminName\": \"<string>\",\n  \"adminPass\": \"<string>\",\n  \"contactName\": \"<string>\",\n  \"contactPhone\": \"<string>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"aliquip_3d\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"officia_5\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"esse182\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"elit_1\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/tenant/tenants",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "tenants"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.tenant+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"adminEmail\": \"<email>\",\n  \"adminName\": \"<string>\",\n  \"allowCreateTenants\": false,\n  \"applications\": {\n    \"references\": [\n      {\n        \"availability\": \"PRIVATE\",\n        \"contextPath\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<string>\",\n        \"key\": \"<string>\",\n        \"name\": \"<string>\",\n        \"owner\": {\n          \"self\": \"<uri>\",\n          \"tenant\": {\n            \"id\": \"<string>\"\n          }\n        },\n        \"self\": \"<uri>\",\n        \"type\": \"EXTERNAL\",\n        \"manifest\": {\n          \"apiVersion\": \"<string>\",\n          \"billingMode\": \"RESOURCES\",\n          \"contextPath\": \"<string>\",\n          \"extensions\": [\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"isolation\": \"PER_TENANT\",\n          \"livenessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"provider\": {\n            \"name\": \"<string>\"\n          },\n          \"readinessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"requestResources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"resources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"scale\": \"NONE\",\n          \"settings\": [\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            },\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            }\n          ],\n          \"settingsCategory\": \"<string>\",\n          \"version\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"breadcrumbs\": \"<boolean>\",\n        \"contentSecurityPolicy\": \"<string>\",\n        \"dynamicOptionsUrl\": \"<string>\",\n        \"globalTitle\": \"<string>\",\n        \"legacy\": \"<boolean>\",\n        \"rightDrawer\": \"<boolean>\",\n        \"upgrade\": \"<boolean>\",\n        \"activeVersionId\": \"<string>\",\n        \"resourcesUrl\": \"<string>\"\n      },\n      {\n        \"availability\": \"PRIVATE\",\n        \"contextPath\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<string>\",\n        \"key\": \"<string>\",\n        \"name\": \"<string>\",\n        \"owner\": {\n          \"self\": \"<uri>\",\n          \"tenant\": {\n            \"id\": \"<string>\"\n          }\n        },\n        \"self\": \"<uri>\",\n        \"type\": \"MICROSERVICE\",\n        \"manifest\": {\n          \"apiVersion\": \"<string>\",\n          \"billingMode\": \"RESOURCES\",\n          \"contextPath\": \"<string>\",\n          \"extensions\": [\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"isolation\": \"MULTI_TENANT\",\n          \"livenessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"provider\": {\n            \"name\": \"<string>\"\n          },\n          \"readinessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"requestResources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"resources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"scale\": \"NONE\",\n          \"settings\": [\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            },\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            }\n          ],\n          \"settingsCategory\": \"<string>\",\n          \"version\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"breadcrumbs\": \"<boolean>\",\n        \"contentSecurityPolicy\": \"<string>\",\n        \"dynamicOptionsUrl\": \"<string>\",\n        \"globalTitle\": \"<string>\",\n        \"legacy\": \"<boolean>\",\n        \"rightDrawer\": \"<boolean>\",\n        \"upgrade\": \"<boolean>\",\n        \"activeVersionId\": \"<string>\",\n        \"resourcesUrl\": \"<string>\"\n      }\n    ],\n    \"self\": \"<uri>\"\n  },\n  \"company\": \"<string>\",\n  \"contactName\": \"<string>\",\n  \"contactPhone\": \"<string>\",\n  \"creationTime\": \"<dateTime>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"Ute00\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"dolorc9\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"domain\": \"<hostname>\",\n  \"id\": \"<string>\",\n  \"ownedApplications\": {\n    \"references\": [\n      {\n        \"availability\": \"PRIVATE\",\n        \"contextPath\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<string>\",\n        \"key\": \"<string>\",\n        \"name\": \"<string>\",\n        \"owner\": {\n          \"self\": \"<uri>\",\n          \"tenant\": {\n            \"id\": \"<string>\"\n          }\n        },\n        \"self\": \"<uri>\",\n        \"type\": \"HOSTED\",\n        \"manifest\": {\n          \"apiVersion\": \"<string>\",\n          \"billingMode\": \"RESOURCES\",\n          \"contextPath\": \"<string>\",\n          \"extensions\": [\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"isolation\": \"PER_TENANT\",\n          \"livenessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"provider\": {\n            \"name\": \"<string>\"\n          },\n          \"readinessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"requestResources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"resources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"scale\": \"NONE\",\n          \"settings\": [\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            },\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            }\n          ],\n          \"settingsCategory\": \"<string>\",\n          \"version\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"breadcrumbs\": \"<boolean>\",\n        \"contentSecurityPolicy\": \"<string>\",\n        \"dynamicOptionsUrl\": \"<string>\",\n        \"globalTitle\": \"<string>\",\n        \"legacy\": \"<boolean>\",\n        \"rightDrawer\": \"<boolean>\",\n        \"upgrade\": \"<boolean>\",\n        \"activeVersionId\": \"<string>\",\n        \"resourcesUrl\": \"<string>\"\n      },\n      {\n        \"availability\": \"PRIVATE\",\n        \"contextPath\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<string>\",\n        \"key\": \"<string>\",\n        \"name\": \"<string>\",\n        \"owner\": {\n          \"self\": \"<uri>\",\n          \"tenant\": {\n            \"id\": \"<string>\"\n          }\n        },\n        \"self\": \"<uri>\",\n        \"type\": \"HOSTED\",\n        \"manifest\": {\n          \"apiVersion\": \"<string>\",\n          \"billingMode\": \"RESOURCES\",\n          \"contextPath\": \"<string>\",\n          \"extensions\": [\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"isolation\": \"MULTI_TENANT\",\n          \"livenessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"provider\": {\n            \"name\": \"<string>\"\n          },\n          \"readinessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"requestResources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"resources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"scale\": \"NONE\",\n          \"settings\": [\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            },\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            }\n          ],\n          \"settingsCategory\": \"<string>\",\n          \"version\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"breadcrumbs\": \"<boolean>\",\n        \"contentSecurityPolicy\": \"<string>\",\n        \"dynamicOptionsUrl\": \"<string>\",\n        \"globalTitle\": \"<string>\",\n        \"legacy\": \"<boolean>\",\n        \"rightDrawer\": \"<boolean>\",\n        \"upgrade\": \"<boolean>\",\n        \"activeVersionId\": \"<string>\",\n        \"resourcesUrl\": \"<string>\"\n      }\n    ],\n    \"self\": \"<uri>\"\n  },\n  \"parent\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"status\": \"ACTIVE\"\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.tenant+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"company\": \"<string>\",\n  \"domain\": \"<hostname>\",\n  \"adminEmail\": \"<email>\",\n  \"adminName\": \"<string>\",\n  \"adminPass\": \"<string>\",\n  \"contactName\": \"<string>\",\n  \"contactPhone\": \"<string>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"aliquip_3d\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"officia_5\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"esse182\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"elit_1\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/tenant/tenants",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "tenants"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Not authorized to perform this operation.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.tenant+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"company\": \"<string>\",\n  \"domain\": \"<hostname>\",\n  \"adminEmail\": \"<email>\",\n  \"adminName\": \"<string>\",\n  \"adminPass\": \"<string>\",\n  \"contactName\": \"<string>\",\n  \"contactPhone\": \"<string>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"aliquip_3d\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"officia_5\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"esse182\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"elit_1\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/tenant/tenants",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "tenants"
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Conflict – The tenant domain/ID already exists.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.tenant+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"company\": \"<string>\",\n  \"domain\": \"<hostname>\",\n  \"adminEmail\": \"<email>\",\n  \"adminName\": \"<string>\",\n  \"adminPass\": \"<string>\",\n  \"contactName\": \"<string>\",\n  \"contactPhone\": \"<string>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"aliquip_3d\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"officia_5\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"esse182\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"elit_1\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/tenant/tenants",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "tenants"
                      ]
                    }
                  },
                  "status": "Conflict",
                  "code": 409,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Unprocessable Entity – invalid payload.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.tenant+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"company\": \"<string>\",\n  \"domain\": \"<hostname>\",\n  \"adminEmail\": \"<email>\",\n  \"adminName\": \"<string>\",\n  \"adminPass\": \"<string>\",\n  \"contactName\": \"<string>\",\n  \"contactPhone\": \"<string>\",\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"aliquip_3d\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"officia_5\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"esse182\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    },\n    \"elit_1\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/tenant/tenants",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "tenants"
                      ]
                    }
                  },
                  "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                  "code": 422,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Retrieve all subtenants",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.tenantcollection+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/tenant/tenants?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false&company=<string>&domain=<string>&parent=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "tenant",
                    "tenants"
                  ],
                  "query": [
                    {
                      "key": "currentPage",
                      "value": "1",
                      "description": "The current page of the paginated results."
                    },
                    {
                      "key": "pageSize",
                      "value": "5",
                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                    },
                    {
                      "key": "withTotalElements",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                    },
                    {
                      "key": "withTotalPages",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                    },
                    {
                      "key": "company",
                      "value": "<string>",
                      "description": "Company name associated with the Cumulocity tenant."
                    },
                    {
                      "key": "domain",
                      "value": "<string>",
                      "description": "Domain name of the Cumulocity tenant."
                    },
                    {
                      "key": "parent",
                      "value": "<string>",
                      "description": "Identifier of the Cumulocity tenant's parent."
                    }
                  ]
                },
                "description": "Retrieve all subtenants of the current tenant.\n\n<section><h5>Required roles</h5>\nROLE_TENANT_MANAGEMENT_READ\n</section>\n"
              },
              "response": [
                {
                  "name": "The request has succeeded and the subtenants are sent in the response.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.tenantcollection+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/tenant/tenants?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false&company=<string>&domain=<string>&parent=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "tenants"
                      ],
                      "query": [
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "company",
                          "value": "<string>",
                          "description": "Company name associated with the Cumulocity tenant."
                        },
                        {
                          "key": "domain",
                          "value": "<string>",
                          "description": "Domain name of the Cumulocity tenant."
                        },
                        {
                          "key": "parent",
                          "value": "<string>",
                          "description": "Identifier of the Cumulocity tenant's parent."
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.tenantcollection+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  },\n  \"tenants\": [\n    {\n      \"adminEmail\": \"<email>\",\n      \"adminName\": \"<string>\",\n      \"allowCreateTenants\": false,\n      \"applications\": {\n        \"references\": [\n          {\n            \"availability\": \"PRIVATE\",\n            \"contextPath\": \"<string>\",\n            \"description\": \"<string>\",\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"owner\": {\n              \"self\": \"<uri>\",\n              \"tenant\": {\n                \"id\": \"<string>\"\n              }\n            },\n            \"self\": \"<uri>\",\n            \"type\": \"HOSTED\",\n            \"manifest\": {\n              \"apiVersion\": \"<string>\",\n              \"billingMode\": \"RESOURCES\",\n              \"contextPath\": \"<string>\",\n              \"extensions\": [\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"isolation\": \"PER_TENANT\",\n              \"livenessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"provider\": {\n                \"name\": \"<string>\"\n              },\n              \"readinessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"requestResources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"resources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"scale\": \"NONE\",\n              \"settings\": [\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                },\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                }\n              ],\n              \"settingsCategory\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"breadcrumbs\": \"<boolean>\",\n            \"contentSecurityPolicy\": \"<string>\",\n            \"dynamicOptionsUrl\": \"<string>\",\n            \"globalTitle\": \"<string>\",\n            \"legacy\": \"<boolean>\",\n            \"rightDrawer\": \"<boolean>\",\n            \"upgrade\": \"<boolean>\",\n            \"activeVersionId\": \"<string>\",\n            \"resourcesUrl\": \"<string>\"\n          },\n          {\n            \"availability\": \"PRIVATE\",\n            \"contextPath\": \"<string>\",\n            \"description\": \"<string>\",\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"owner\": {\n              \"self\": \"<uri>\",\n              \"tenant\": {\n                \"id\": \"<string>\"\n              }\n            },\n            \"self\": \"<uri>\",\n            \"type\": \"HOSTED\",\n            \"manifest\": {\n              \"apiVersion\": \"<string>\",\n              \"billingMode\": \"RESOURCES\",\n              \"contextPath\": \"<string>\",\n              \"extensions\": [\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"isolation\": \"MULTI_TENANT\",\n              \"livenessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"provider\": {\n                \"name\": \"<string>\"\n              },\n              \"readinessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"requestResources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"resources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"scale\": \"NONE\",\n              \"settings\": [\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                },\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                }\n              ],\n              \"settingsCategory\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"breadcrumbs\": \"<boolean>\",\n            \"contentSecurityPolicy\": \"<string>\",\n            \"dynamicOptionsUrl\": \"<string>\",\n            \"globalTitle\": \"<string>\",\n            \"legacy\": \"<boolean>\",\n            \"rightDrawer\": \"<boolean>\",\n            \"upgrade\": \"<boolean>\",\n            \"activeVersionId\": \"<string>\",\n            \"resourcesUrl\": \"<string>\"\n          }\n        ],\n        \"self\": \"<uri>\"\n      },\n      \"company\": \"<string>\",\n      \"contactName\": \"<string>\",\n      \"contactPhone\": \"<string>\",\n      \"creationTime\": \"<dateTime>\",\n      \"customProperties\": {\n        \"language\": \"<string>\",\n        \"est__\": {\n          \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n          \"x-additionalPropertiesName\": \"customProperties\"\n        },\n        \"sunt_6f\": {\n          \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n          \"x-additionalPropertiesName\": \"customProperties\"\n        },\n        \"proident_cdf\": {\n          \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n          \"x-additionalPropertiesName\": \"customProperties\"\n        },\n        \"minim_f6\": {\n          \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n          \"x-additionalPropertiesName\": \"customProperties\"\n        }\n      },\n      \"domain\": \"<hostname>\",\n      \"id\": \"<string>\",\n      \"ownedApplications\": {\n        \"references\": [\n          {\n            \"availability\": \"PRIVATE\",\n            \"contextPath\": \"<string>\",\n            \"description\": \"<string>\",\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"owner\": {\n              \"self\": \"<uri>\",\n              \"tenant\": {\n                \"id\": \"<string>\"\n              }\n            },\n            \"self\": \"<uri>\",\n            \"type\": \"MICROSERVICE\",\n            \"manifest\": {\n              \"apiVersion\": \"<string>\",\n              \"billingMode\": \"RESOURCES\",\n              \"contextPath\": \"<string>\",\n              \"extensions\": [\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"isolation\": \"PER_TENANT\",\n              \"livenessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"provider\": {\n                \"name\": \"<string>\"\n              },\n              \"readinessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"requestResources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"resources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"scale\": \"NONE\",\n              \"settings\": [\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                },\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                }\n              ],\n              \"settingsCategory\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"breadcrumbs\": \"<boolean>\",\n            \"contentSecurityPolicy\": \"<string>\",\n            \"dynamicOptionsUrl\": \"<string>\",\n            \"globalTitle\": \"<string>\",\n            \"legacy\": \"<boolean>\",\n            \"rightDrawer\": \"<boolean>\",\n            \"upgrade\": \"<boolean>\",\n            \"activeVersionId\": \"<string>\",\n            \"resourcesUrl\": \"<string>\"\n          },\n          {\n            \"availability\": \"PRIVATE\",\n            \"contextPath\": \"<string>\",\n            \"description\": \"<string>\",\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"owner\": {\n              \"self\": \"<uri>\",\n              \"tenant\": {\n                \"id\": \"<string>\"\n              }\n            },\n            \"self\": \"<uri>\",\n            \"type\": \"HOSTED\",\n            \"manifest\": {\n              \"apiVersion\": \"<string>\",\n              \"billingMode\": \"RESOURCES\",\n              \"contextPath\": \"<string>\",\n              \"extensions\": [\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"isolation\": \"MULTI_TENANT\",\n              \"livenessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"provider\": {\n                \"name\": \"<string>\"\n              },\n              \"readinessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"requestResources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"resources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"scale\": \"NONE\",\n              \"settings\": [\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                },\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                }\n              ],\n              \"settingsCategory\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"breadcrumbs\": \"<boolean>\",\n            \"contentSecurityPolicy\": \"<string>\",\n            \"dynamicOptionsUrl\": \"<string>\",\n            \"globalTitle\": \"<string>\",\n            \"legacy\": \"<boolean>\",\n            \"rightDrawer\": \"<boolean>\",\n            \"upgrade\": \"<boolean>\",\n            \"activeVersionId\": \"<string>\",\n            \"resourcesUrl\": \"<string>\"\n          }\n        ],\n        \"self\": \"<uri>\"\n      },\n      \"parent\": \"<string>\",\n      \"self\": \"<uri>\",\n      \"status\": \"ACTIVE\"\n    },\n    {\n      \"adminEmail\": \"<email>\",\n      \"adminName\": \"<string>\",\n      \"allowCreateTenants\": false,\n      \"applications\": {\n        \"references\": [\n          {\n            \"availability\": \"PRIVATE\",\n            \"contextPath\": \"<string>\",\n            \"description\": \"<string>\",\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"owner\": {\n              \"self\": \"<uri>\",\n              \"tenant\": {\n                \"id\": \"<string>\"\n              }\n            },\n            \"self\": \"<uri>\",\n            \"type\": \"HOSTED\",\n            \"manifest\": {\n              \"apiVersion\": \"<string>\",\n              \"billingMode\": \"RESOURCES\",\n              \"contextPath\": \"<string>\",\n              \"extensions\": [\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"isolation\": \"PER_TENANT\",\n              \"livenessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"provider\": {\n                \"name\": \"<string>\"\n              },\n              \"readinessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"requestResources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"resources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"scale\": \"NONE\",\n              \"settings\": [\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                },\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                }\n              ],\n              \"settingsCategory\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"breadcrumbs\": \"<boolean>\",\n            \"contentSecurityPolicy\": \"<string>\",\n            \"dynamicOptionsUrl\": \"<string>\",\n            \"globalTitle\": \"<string>\",\n            \"legacy\": \"<boolean>\",\n            \"rightDrawer\": \"<boolean>\",\n            \"upgrade\": \"<boolean>\",\n            \"activeVersionId\": \"<string>\",\n            \"resourcesUrl\": \"<string>\"\n          },\n          {\n            \"availability\": \"PRIVATE\",\n            \"contextPath\": \"<string>\",\n            \"description\": \"<string>\",\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"owner\": {\n              \"self\": \"<uri>\",\n              \"tenant\": {\n                \"id\": \"<string>\"\n              }\n            },\n            \"self\": \"<uri>\",\n            \"type\": \"HOSTED\",\n            \"manifest\": {\n              \"apiVersion\": \"<string>\",\n              \"billingMode\": \"RESOURCES\",\n              \"contextPath\": \"<string>\",\n              \"extensions\": [\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"isolation\": \"PER_TENANT\",\n              \"livenessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"provider\": {\n                \"name\": \"<string>\"\n              },\n              \"readinessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"requestResources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"resources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"scale\": \"NONE\",\n              \"settings\": [\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                },\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                }\n              ],\n              \"settingsCategory\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"breadcrumbs\": \"<boolean>\",\n            \"contentSecurityPolicy\": \"<string>\",\n            \"dynamicOptionsUrl\": \"<string>\",\n            \"globalTitle\": \"<string>\",\n            \"legacy\": \"<boolean>\",\n            \"rightDrawer\": \"<boolean>\",\n            \"upgrade\": \"<boolean>\",\n            \"activeVersionId\": \"<string>\",\n            \"resourcesUrl\": \"<string>\"\n          }\n        ],\n        \"self\": \"<uri>\"\n      },\n      \"company\": \"<string>\",\n      \"contactName\": \"<string>\",\n      \"contactPhone\": \"<string>\",\n      \"creationTime\": \"<dateTime>\",\n      \"customProperties\": {\n        \"language\": \"<string>\",\n        \"do_4cb\": {\n          \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n          \"x-additionalPropertiesName\": \"customProperties\"\n        },\n        \"ea_3c1\": {\n          \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n          \"x-additionalPropertiesName\": \"customProperties\"\n        },\n        \"inc2f\": {\n          \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n          \"x-additionalPropertiesName\": \"customProperties\"\n        },\n        \"officia1_d\": {\n          \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n          \"x-additionalPropertiesName\": \"customProperties\"\n        }\n      },\n      \"domain\": \"<hostname>\",\n      \"id\": \"<string>\",\n      \"ownedApplications\": {\n        \"references\": [\n          {\n            \"availability\": \"PRIVATE\",\n            \"contextPath\": \"<string>\",\n            \"description\": \"<string>\",\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"owner\": {\n              \"self\": \"<uri>\",\n              \"tenant\": {\n                \"id\": \"<string>\"\n              }\n            },\n            \"self\": \"<uri>\",\n            \"type\": \"HOSTED\",\n            \"manifest\": {\n              \"apiVersion\": \"<string>\",\n              \"billingMode\": \"RESOURCES\",\n              \"contextPath\": \"<string>\",\n              \"extensions\": [\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"isolation\": \"MULTI_TENANT\",\n              \"livenessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"provider\": {\n                \"name\": \"<string>\"\n              },\n              \"readinessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"requestResources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"resources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"scale\": \"NONE\",\n              \"settings\": [\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                },\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                }\n              ],\n              \"settingsCategory\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"breadcrumbs\": \"<boolean>\",\n            \"contentSecurityPolicy\": \"<string>\",\n            \"dynamicOptionsUrl\": \"<string>\",\n            \"globalTitle\": \"<string>\",\n            \"legacy\": \"<boolean>\",\n            \"rightDrawer\": \"<boolean>\",\n            \"upgrade\": \"<boolean>\",\n            \"activeVersionId\": \"<string>\",\n            \"resourcesUrl\": \"<string>\"\n          },\n          {\n            \"availability\": \"PRIVATE\",\n            \"contextPath\": \"<string>\",\n            \"description\": \"<string>\",\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"owner\": {\n              \"self\": \"<uri>\",\n              \"tenant\": {\n                \"id\": \"<string>\"\n              }\n            },\n            \"self\": \"<uri>\",\n            \"type\": \"HOSTED\",\n            \"manifest\": {\n              \"apiVersion\": \"<string>\",\n              \"billingMode\": \"RESOURCES\",\n              \"contextPath\": \"<string>\",\n              \"extensions\": [\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"path\": \"<string>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"isolation\": \"PER_TENANT\",\n              \"livenessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"provider\": {\n                \"name\": \"<string>\"\n              },\n              \"readinessProbe\": {\n                \"failureThreshold\": \"<integer>\",\n                \"periodSeconds\": \"<integer>\",\n                \"timeoutSeconds\": \"<integer>\",\n                \"successThreshold\": \"<integer>\",\n                \"initialDelaySeconds\": \"<integer>\",\n                \"httpGet\": {\n                  \"path\": \"<string>\",\n                  \"port\": \"<integer>\"\n                }\n              },\n              \"requestResources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"resources\": {\n                \"cpu\": \"<string>\",\n                \"memory\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"scale\": \"NONE\",\n              \"settings\": [\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                },\n                {\n                  \"key\": \"<string>\",\n                  \"valueSchema\": {\n                    \"type\": \"<string>\"\n                  },\n                  \"defaultValue\": \"<string>\",\n                  \"editable\": \"<boolean>\",\n                  \"inheritFromOwner\": \"<boolean>\"\n                }\n              ],\n              \"settingsCategory\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            \"roles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"requiredRoles\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"breadcrumbs\": \"<boolean>\",\n            \"contentSecurityPolicy\": \"<string>\",\n            \"dynamicOptionsUrl\": \"<string>\",\n            \"globalTitle\": \"<string>\",\n            \"legacy\": \"<boolean>\",\n            \"rightDrawer\": \"<boolean>\",\n            \"upgrade\": \"<boolean>\",\n            \"activeVersionId\": \"<string>\",\n            \"resourcesUrl\": \"<string>\"\n          }\n        ],\n        \"self\": \"<uri>\"\n      },\n      \"parent\": \"<string>\",\n      \"self\": \"<uri>\",\n      \"status\": \"ACTIVE\"\n    }\n  ]\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/tenant/tenants?currentPage=1&pageSize=5&withTotalElements=false&withTotalPages=false&company=<string>&domain=<string>&parent=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "tenants"
                      ],
                      "query": [
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "company",
                          "value": "<string>",
                          "description": "Company name associated with the Cumulocity tenant."
                        },
                        {
                          "key": "domain",
                          "value": "<string>",
                          "description": "Domain name of the Cumulocity tenant."
                        },
                        {
                          "key": "parent",
                          "value": "<string>",
                          "description": "Identifier of the Cumulocity tenant's parent."
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "currentTenant",
          "item": [
            {
              "name": "Retrieve the current tenant",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.currenttenant+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/tenant/currentTenant?withParent=false",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "tenant",
                    "currentTenant"
                  ],
                  "query": [
                    {
                      "key": "withParent",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain the parent of the current tenant."
                    }
                  ]
                },
                "description": "Retrieve information about the current tenant.\n\n<section><h5>Required roles</h5>\nROLE_USER_MANAGEMENT_OWN_READ <b>OR</b> ROLE_SYSTEM\n</section>\n"
              },
              "response": [
                {
                  "name": "The request has succeeded and the information is sent in the response.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.currenttenant+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/tenant/currentTenant?withParent=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "currentTenant"
                      ],
                      "query": [
                        {
                          "key": "withParent",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain the parent of the current tenant."
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.currenttenant+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"allowCreateTenants\": false,\n  \"applications\": {\n    \"references\": [\n      {\n        \"availability\": \"PRIVATE\",\n        \"contextPath\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<string>\",\n        \"key\": \"<string>\",\n        \"name\": \"<string>\",\n        \"owner\": {\n          \"self\": \"<uri>\",\n          \"tenant\": {\n            \"id\": \"<string>\"\n          }\n        },\n        \"self\": \"<uri>\",\n        \"type\": \"HOSTED\",\n        \"manifest\": {\n          \"apiVersion\": \"<string>\",\n          \"billingMode\": \"RESOURCES\",\n          \"contextPath\": \"<string>\",\n          \"extensions\": [\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"isolation\": \"MULTI_TENANT\",\n          \"livenessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"provider\": {\n            \"name\": \"<string>\"\n          },\n          \"readinessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"requestResources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"resources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"scale\": \"NONE\",\n          \"settings\": [\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            },\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            }\n          ],\n          \"settingsCategory\": \"<string>\",\n          \"version\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"breadcrumbs\": \"<boolean>\",\n        \"contentSecurityPolicy\": \"<string>\",\n        \"dynamicOptionsUrl\": \"<string>\",\n        \"globalTitle\": \"<string>\",\n        \"legacy\": \"<boolean>\",\n        \"rightDrawer\": \"<boolean>\",\n        \"upgrade\": \"<boolean>\",\n        \"activeVersionId\": \"<string>\",\n        \"resourcesUrl\": \"<string>\"\n      },\n      {\n        \"availability\": \"PRIVATE\",\n        \"contextPath\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<string>\",\n        \"key\": \"<string>\",\n        \"name\": \"<string>\",\n        \"owner\": {\n          \"self\": \"<uri>\",\n          \"tenant\": {\n            \"id\": \"<string>\"\n          }\n        },\n        \"self\": \"<uri>\",\n        \"type\": \"HOSTED\",\n        \"manifest\": {\n          \"apiVersion\": \"<string>\",\n          \"billingMode\": \"RESOURCES\",\n          \"contextPath\": \"<string>\",\n          \"extensions\": [\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"isolation\": \"PER_TENANT\",\n          \"livenessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"provider\": {\n            \"name\": \"<string>\"\n          },\n          \"readinessProbe\": {\n            \"failureThreshold\": \"<integer>\",\n            \"periodSeconds\": \"<integer>\",\n            \"timeoutSeconds\": \"<integer>\",\n            \"successThreshold\": \"<integer>\",\n            \"initialDelaySeconds\": \"<integer>\",\n            \"httpGet\": {\n              \"path\": \"<string>\",\n              \"port\": \"<integer>\"\n            }\n          },\n          \"requestResources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"resources\": {\n            \"cpu\": \"<string>\",\n            \"memory\": \"<string>\"\n          },\n          \"roles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"requiredRoles\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"scale\": \"NONE\",\n          \"settings\": [\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            },\n            {\n              \"key\": \"<string>\",\n              \"valueSchema\": {\n                \"type\": \"<string>\"\n              },\n              \"defaultValue\": \"<string>\",\n              \"editable\": \"<boolean>\",\n              \"inheritFromOwner\": \"<boolean>\"\n            }\n          ],\n          \"settingsCategory\": \"<string>\",\n          \"version\": \"<string>\"\n        },\n        \"roles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"requiredRoles\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"breadcrumbs\": \"<boolean>\",\n        \"contentSecurityPolicy\": \"<string>\",\n        \"dynamicOptionsUrl\": \"<string>\",\n        \"globalTitle\": \"<string>\",\n        \"legacy\": \"<boolean>\",\n        \"rightDrawer\": \"<boolean>\",\n        \"upgrade\": \"<boolean>\",\n        \"activeVersionId\": \"<string>\",\n        \"resourcesUrl\": \"<string>\"\n      }\n    ]\n  },\n  \"customProperties\": {\n    \"language\": \"<string>\",\n    \"anim80\": {\n      \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n      \"x-additionalPropertiesName\": \"customProperties\"\n    }\n  },\n  \"domainName\": \"<hostname>\",\n  \"name\": \"<string>\",\n  \"parent\": \"<string>\",\n  \"self\": \"<uri>\"\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/tenant/currentTenant?withParent=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "currentTenant"
                      ],
                      "query": [
                        {
                          "key": "withParent",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain the parent of the current tenant."
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "trusted-certificates",
          "item": [
            {
              "name": "verify-cert-chain",
              "item": [
                {
                  "name": "Verify a certificate chain",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Cumulocity-Client-Cert-Chain",
                        "value": "<string>",
                        "description": "(Required) Used to send a certificate chain in the header. Separate the chain with `,` and also each 64 bit block with ` ` (a space character)."
                      },
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "file",
                          "description": "(Required) File to be uploaded.",
                          "type": "file",
                          "src": []
                        },
                        {
                          "key": "tenantId",
                          "value": "<string>",
                          "type": "text"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/tenant/trusted-certificates/verify-cert-chain",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "trusted-certificates",
                        "verify-cert-chain"
                      ]
                    },
                    "description": "Verify a device certificate chain against a specific tenant using file upload or by HTTP headers.\nThe tenant ID is `optional` and this api will try to resolve the tenant from the chain if not found in the request header.\nFor file upload, the max chain length support is 10 and for a header it is 5.\n\nIf CRL (certificate revocation list) check is enabled on the tenant and the certificate chain is identified to be revoked during validation the further validation of the chain stops and returns unauthorized.\n\n> **&#9432; Info:** File upload takes precedence over HTTP headers if both are passed.\n\n<section><h5>Required roles</h5>\n(ROLE_TENANT_MANAGEMENT_ADMIN <b>OR</b> ROLE_TENANT_MANAGEMENT_READ) <b>AND</b> (is the current tenant <b>OR</b> is current management tenant) <b>OR</b> (is authenticated <b>AND</b> is current user service user)\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The certificate chain is valid and not revoked.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-Cumulocity-Client-Cert-Chain",
                            "value": "<string>",
                            "description": "(Required) Used to send a certificate chain in the header. Separate the chain with `,` and also each 64 bit block with ` ` (a space character)."
                          },
                          {
                            "key": "Content-Type",
                            "value": "multipart/form-data"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "file",
                              "description": "(Required) File to be uploaded.",
                              "type": "file",
                              "src": []
                            },
                            {
                              "key": "tenantId",
                              "value": "<string>",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/trusted-certificates/verify-cert-chain",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "trusted-certificates",
                            "verify-cert-chain"
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"successfullyValidated\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"issuer\": \"<string>\",\n  \"subject\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to parse certificate chain.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-Cumulocity-Client-Cert-Chain",
                            "value": "<string>",
                            "description": "(Required) Used to send a certificate chain in the header. Separate the chain with `,` and also each 64 bit block with ` ` (a space character)."
                          },
                          {
                            "key": "Content-Type",
                            "value": "multipart/form-data"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "file",
                              "description": "(Required) File to be uploaded.",
                              "type": "file",
                              "src": []
                            },
                            {
                              "key": "tenantId",
                              "value": "<string>",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/trusted-certificates/verify-cert-chain",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "trusted-certificates",
                            "verify-cert-chain"
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "One or more certificates in the chain are revoked or the certificate chain is not valid. Revoked certificates are checked first, then the validity of the certificate chain.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-Cumulocity-Client-Cert-Chain",
                            "value": "<string>",
                            "description": "(Required) Used to send a certificate chain in the header. Separate the chain with `,` and also each 64 bit block with ` ` (a space character)."
                          },
                          {
                            "key": "Content-Type",
                            "value": "multipart/form-data"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "file",
                              "description": "(Required) File to be uploaded.",
                              "type": "file",
                              "src": []
                            },
                            {
                              "key": "tenantId",
                              "value": "<string>",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/trusted-certificates/verify-cert-chain",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "trusted-certificates",
                            "verify-cert-chain"
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not enough permissions/roles to perform this operation.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-Cumulocity-Client-Cert-Chain",
                            "value": "<string>",
                            "description": "(Required) Used to send a certificate chain in the header. Separate the chain with `,` and also each 64 bit block with ` ` (a space character)."
                          },
                          {
                            "key": "Content-Type",
                            "value": "multipart/form-data"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "file",
                              "description": "(Required) File to be uploaded.",
                              "type": "file",
                              "src": []
                            },
                            {
                              "key": "tenantId",
                              "value": "<string>",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/trusted-certificates/verify-cert-chain",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "trusted-certificates",
                            "verify-cert-chain"
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "The tenant ID does not exist.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-Cumulocity-Client-Cert-Chain",
                            "value": "<string>",
                            "description": "(Required) Used to send a certificate chain in the header. Separate the chain with `,` and also each 64 bit block with ` ` (a space character)."
                          },
                          {
                            "key": "Content-Type",
                            "value": "multipart/form-data"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "file",
                              "description": "(Required) File to be uploaded.",
                              "type": "file",
                              "src": []
                            },
                            {
                              "key": "tenantId",
                              "value": "<string>",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/trusted-certificates/verify-cert-chain",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "trusted-certificates",
                            "verify-cert-chain"
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "settings",
              "item": [
                {
                  "name": "crl",
                  "item": [
                    {
                      "name": "Add revoked certificates",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"crls\": [\n    {\n      \"serialNumberInHex\": \"<string>\",\n      \"revocationDate\": \"<dateTime>\"\n    },\n    {\n      \"serialNumberInHex\": \"<string>\",\n      \"revocationDate\": \"<dateTime>\"\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/trusted-certificates/settings/crl",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "trusted-certificates",
                            "settings",
                            "crl"
                          ]
                        },
                        "description": "> **&#9432; Info:** A certificate revocation list (CRL) is a list of digital certificates\n   that have been revoked by the issuing certificate authority (CA) before expiration date.\n   In Cumulocity, a CRL check can be in online or offline mode or both.\n\nAn endpoint to add revoked certificate serial numbers for offline CRL check via payload or file.\n\nFor payload, a JSON object required with list of CRL entries, for example:\n ```json\n   {\n    \"crls\": [\n      {\n        \"serialNumberInHex\": \"1000\",\n        \"revocationDate\": \"2023-01-11T16:12:36.288Z\"\n      }\n     ]\n    }\n  ```\nEach entry is composed of:\n * serialNumberInHex: Needs to be in `Hexadecimal Value`. e.g As (1000)^16 == (4096)^10, So we have to enter 1000.\n    If duplicate serial number exists in payload, the existing entry stays</br>\n * `revocationDate` - accepted Date format: `yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`, for example: `2023-01-11T16:12:36.288Z`.\n     This is an optional parameter and defaults to the current server UTC date time if not specified in the payload.\n     If specified and the date is in future then those entries will be also defaulted to current date.\n\nFor file upload, each file can hold at maximum 5000 revocation entries.\nMultiple upload is allowed.\nIn case of duplicates, the latest (last uploaded) entry is considered.\n\nSee below for a sample CSV file:\n\n| SERIAL NO.  | REVOCATION DATE |\n|--|--|\n| 1000 | 2023-01-11T16:12:36.288Z |\n\n Each entry is composed of :\n * serialNumberInHex: Needs to be in `Hexadecimal Value`. e.g (1000)^16 == (4096)^10, So we have to enter 1000.\n    If duplicate serial number exists in payload, the latest entry will be taken.</br>\n * revocationDate: Accepted Date format: `yyyy-MM-dd'T'HH:mm:ss.SSS'Z'` e.g: 2023-01-11T16:12:36.288Z.\n This is an optional and will be default to current server UTC date time if not specified in payload.\n If specified and the date is in future then those entries will be skipped.\n\nThe CRL setting for offline and online check can be enabled/disabled using <kbd><a href=\"#operation/putOptionResource\">/tenant/options</a></kbd>.\nKeys are `crl.online.check.enabled` and `crl.offline.check.enabled` under the category `configuration`.\n\n<section><h5>Required roles</h5>\n(ROLE_TENANT_MANAGEMENT_ADMIN <b>OR</b> ROLE_TENANT_ADMIN) <b>AND</b> is the current tenant\n</section>\n\n**⚠️ Important:** According to CRL policy, added serial numbers cannot be reversed.\n"
                      },
                      "response": [
                        {
                          "name": "CRLs updated successfully.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"crls\": [\n    {\n      \"serialNumberInHex\": \"<string>\",\n      \"revocationDate\": \"<dateTime>\"\n    },\n    {\n      \"serialNumberInHex\": \"<string>\",\n      \"revocationDate\": \"<dateTime>\"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/tenant/trusted-certificates/settings/crl",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "trusted-certificates",
                                "settings",
                                "crl"
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Unsupported date time format.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"crls\": [\n    {\n      \"serialNumberInHex\": \"<string>\",\n      \"revocationDate\": \"<dateTime>\"\n    },\n    {\n      \"serialNumberInHex\": \"<string>\",\n      \"revocationDate\": \"<dateTime>\"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/tenant/trusted-certificates/settings/crl",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "trusted-certificates",
                                "settings",
                                "crl"
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"crls\": [\n    {\n      \"serialNumberInHex\": \"<string>\",\n      \"revocationDate\": \"<dateTime>\"\n    },\n    {\n      \"serialNumberInHex\": \"<string>\",\n      \"revocationDate\": \"<dateTime>\"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/tenant/trusted-certificates/settings/crl",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "trusted-certificates",
                                "settings",
                                "crl"
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Not enough permissions/roles to perform this operation.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"crls\": [\n    {\n      \"serialNumberInHex\": \"<string>\",\n      \"revocationDate\": \"<dateTime>\"\n    },\n    {\n      \"serialNumberInHex\": \"<string>\",\n      \"revocationDate\": \"<dateTime>\"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/tenant/trusted-certificates/settings/crl",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "trusted-certificates",
                                "settings",
                                "crl"
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    },
                    {
                      "name": "Get revoked certificates",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/pkix-crl"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/trusted-certificates/settings/crl",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "trusted-certificates",
                            "settings",
                            "crl"
                          ]
                        },
                        "description": "This endpoint downloads current CRL file containing list of revoked certificate in\na binary file format with `content-type` as `application/pkix-crl`.\n\n<section><h5>Required roles</h5>\n(ROLE_TENANT_MANAGEMENT_ADMIN <b>OR</b> ROLE_TENANT_ADMIN <b>OR</b> ROLE_TENANT_MANAGEMENT_READ)\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The CRL file of the current tenant.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/pkix-crl"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/tenant/trusted-certificates/settings/crl",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "trusted-certificates",
                                "settings",
                                "crl"
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/pkix-crl"
                            }
                          ],
                          "cookie": [],
                          "body": "<binary>"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "statistics",
          "item": [
            {
              "name": "summary",
              "item": [
                {
                  "name": "Retrieve a usage statistics summary",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.tenantusagestatisticssummary+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/tenant/statistics/summary?dateFrom=<dateTime>&dateTo=<dateTime>&tenant=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "statistics",
                        "summary"
                      ],
                      "query": [
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the statistics."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the statistics."
                        },
                        {
                          "key": "tenant",
                          "value": "<string>",
                          "description": "Unique identifier of a Cumulocity tenant."
                        }
                      ]
                    },
                    "description": "Retrieve a usage statistics summary of a tenant.\n<section><h5>Required roles</h5> ROLE_TENANT_STATISTICS_READ <b>OR</b> ROLE_INVENTORY_READ <b>OR</b> ROLE_MANAGED_OBJECT_READ If the `tenant` request parameter is specified, then the current tenant must be the management tenant <b>OR</b> the parent of the requested `tenant`. </section>"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the usage statistics summary is sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.tenantusagestatisticssummary+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/statistics/summary?dateFrom=<dateTime>&dateTo=<dateTime>&tenant=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "statistics",
                            "summary"
                          ],
                          "query": [
                            {
                              "key": "dateFrom",
                              "value": "<dateTime>",
                              "description": "Start date or date and time of the statistics."
                            },
                            {
                              "key": "dateTo",
                              "value": "<dateTime>",
                              "description": "End date or date and time of the statistics."
                            },
                            {
                              "key": "tenant",
                              "value": "<string>",
                              "description": "Unique identifier of a Cumulocity tenant."
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.tenantusagestatisticssummary+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"alarmsCreatedCount\": \"<integer>\",\n  \"alarmsUpdatedCount\": \"<integer>\",\n  \"day\": \"<dateTime>\",\n  \"deviceCount\": \"<integer>\",\n  \"deviceEndpointCount\": \"<integer>\",\n  \"deviceRequestCount\": \"<integer>\",\n  \"deviceWithChildrenCount\": \"<integer>\",\n  \"eventsCreatedCount\": \"<integer>\",\n  \"eventsUpdatedCount\": \"<integer>\",\n  \"inventoriesCreatedCount\": \"<integer>\",\n  \"inventoriesUpdatedCount\": \"<integer>\",\n  \"measurementsCreatedCount\": \"<integer>\",\n  \"operationsCreatedCount\": \"<integer>\",\n  \"operationsUpdatedCount\": \"<integer>\",\n  \"requestCount\": \"<integer>\",\n  \"resources\": {\n    \"cpu\": \"<integer>\",\n    \"memory\": \"<integer>\",\n    \"usedBy\": [\n      {\n        \"cause\": \"<string>\",\n        \"cpu\": \"<integer>\",\n        \"memory\": \"<integer>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"cause\": \"<string>\",\n        \"cpu\": \"<integer>\",\n        \"memory\": \"<integer>\",\n        \"name\": \"<string>\"\n      }\n    ]\n  },\n  \"storageSize\": \"<integer>\",\n  \"subscribedApplications\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"totalResourceCreateAndUpdateCount\": \"<integer>\"\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/statistics/summary?dateFrom=<dateTime>&dateTo=<dateTime>&tenant=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "statistics",
                            "summary"
                          ],
                          "query": [
                            {
                              "key": "dateFrom",
                              "value": "<dateTime>",
                              "description": "Start date or date and time of the statistics."
                            },
                            {
                              "key": "dateTo",
                              "value": "<dateTime>",
                              "description": "End date or date and time of the statistics."
                            },
                            {
                              "key": "tenant",
                              "value": "<string>",
                              "description": "Unique identifier of a Cumulocity tenant."
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not authorized to perform this operation.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/statistics/summary?dateFrom=<dateTime>&dateTo=<dateTime>&tenant=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "statistics",
                            "summary"
                          ],
                          "query": [
                            {
                              "key": "dateFrom",
                              "value": "<dateTime>",
                              "description": "Start date or date and time of the statistics."
                            },
                            {
                              "key": "dateTo",
                              "value": "<dateTime>",
                              "description": "End date or date and time of the statistics."
                            },
                            {
                              "key": "tenant",
                              "value": "<string>",
                              "description": "Unique identifier of a Cumulocity tenant."
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Tenant not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/statistics/summary?dateFrom=<dateTime>&dateTo=<dateTime>&tenant=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "statistics",
                            "summary"
                          ],
                          "query": [
                            {
                              "key": "dateFrom",
                              "value": "<dateTime>",
                              "description": "Start date or date and time of the statistics."
                            },
                            {
                              "key": "dateTo",
                              "value": "<dateTime>",
                              "description": "End date or date and time of the statistics."
                            },
                            {
                              "key": "tenant",
                              "value": "<string>",
                              "description": "Unique identifier of a Cumulocity tenant."
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "allTenantsSummary",
              "item": [
                {
                  "name": "Retrieve a summary of all usage statistics",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/tenant/statistics/allTenantsSummary?dateFrom=<dateTime>&dateTo=<dateTime>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "statistics",
                        "allTenantsSummary"
                      ],
                      "query": [
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the statistics."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the statistics."
                        }
                      ]
                    },
                    "description": "Retrieve a summary of all tenants usage statistics.\n\n<section><h5>Required roles</h5>\nROLE_TENANT_MANAGEMENT_READ\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the usage statistics summary is sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/statistics/allTenantsSummary?dateFrom=<dateTime>&dateTo=<dateTime>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "statistics",
                            "allTenantsSummary"
                          ],
                          "query": [
                            {
                              "key": "dateFrom",
                              "value": "<dateTime>",
                              "description": "Start date or date and time of the statistics."
                            },
                            {
                              "key": "dateTo",
                              "value": "<dateTime>",
                              "description": "End date or date and time of the statistics."
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "[\n  {\n    \"alarmsCreatedCount\": \"<integer>\",\n    \"alarmsUpdatedCount\": \"<integer>\",\n    \"creationTime\": \"<dateTime>\",\n    \"deviceCount\": \"<integer>\",\n    \"deviceEndpointCount\": \"<integer>\",\n    \"deviceRequestCount\": \"<integer>\",\n    \"deviceWithChildrenCount\": \"<integer>\",\n    \"externalReference\": \"<string>\",\n    \"eventsCreatedCount\": \"<integer>\",\n    \"eventsUpdatedCount\": \"<integer>\",\n    \"inventoriesCreatedCount\": \"<integer>\",\n    \"inventoriesUpdatedCount\": \"<integer>\",\n    \"measurementsCreatedCount\": \"<integer>\",\n    \"operationsCreatedCount\": \"<integer>\",\n    \"operationsUpdatedCount\": \"<integer>\",\n    \"parentTenantId\": \"<string>\",\n    \"peakDeviceCount\": \"<integer>\",\n    \"peakDeviceWithChildrenCount\": \"<integer>\",\n    \"peakStorageSize\": \"<integer>\",\n    \"requestCount\": \"<integer>\",\n    \"resources\": {\n      \"cpu\": \"<integer>\",\n      \"memory\": \"<integer>\",\n      \"usedBy\": [\n        {\n          \"cause\": \"<string>\",\n          \"cpu\": \"<integer>\",\n          \"memory\": \"<integer>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"cause\": \"<string>\",\n          \"cpu\": \"<integer>\",\n          \"memory\": \"<integer>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    },\n    \"storageSize\": \"<integer>\",\n    \"subscribedApplications\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"tenantCompany\": \"<string>\",\n    \"tenantCustomProperties\": {\n      \"language\": \"<string>\",\n      \"ipsum_7\": {\n        \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n        \"x-additionalPropertiesName\": \"customProperties\"\n      }\n    },\n    \"tenantDomain\": \"<hostname>\",\n    \"tenantId\": \"<string>\",\n    \"totalResourceCreateAndUpdateCount\": \"<integer>\"\n  },\n  {\n    \"alarmsCreatedCount\": \"<integer>\",\n    \"alarmsUpdatedCount\": \"<integer>\",\n    \"creationTime\": \"<dateTime>\",\n    \"deviceCount\": \"<integer>\",\n    \"deviceEndpointCount\": \"<integer>\",\n    \"deviceRequestCount\": \"<integer>\",\n    \"deviceWithChildrenCount\": \"<integer>\",\n    \"externalReference\": \"<string>\",\n    \"eventsCreatedCount\": \"<integer>\",\n    \"eventsUpdatedCount\": \"<integer>\",\n    \"inventoriesCreatedCount\": \"<integer>\",\n    \"inventoriesUpdatedCount\": \"<integer>\",\n    \"measurementsCreatedCount\": \"<integer>\",\n    \"operationsCreatedCount\": \"<integer>\",\n    \"operationsUpdatedCount\": \"<integer>\",\n    \"parentTenantId\": \"<string>\",\n    \"peakDeviceCount\": \"<integer>\",\n    \"peakDeviceWithChildrenCount\": \"<integer>\",\n    \"peakStorageSize\": \"<integer>\",\n    \"requestCount\": \"<integer>\",\n    \"resources\": {\n      \"cpu\": \"<integer>\",\n      \"memory\": \"<integer>\",\n      \"usedBy\": [\n        {\n          \"cause\": \"<string>\",\n          \"cpu\": \"<integer>\",\n          \"memory\": \"<integer>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"cause\": \"<string>\",\n          \"cpu\": \"<integer>\",\n          \"memory\": \"<integer>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    },\n    \"storageSize\": \"<integer>\",\n    \"subscribedApplications\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"tenantCompany\": \"<string>\",\n    \"tenantCustomProperties\": {\n      \"language\": \"<string>\",\n      \"eiusmod288\": {\n        \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n        \"x-additionalPropertiesName\": \"customProperties\"\n      }\n    },\n    \"tenantDomain\": \"<hostname>\",\n    \"tenantId\": \"<string>\",\n    \"totalResourceCreateAndUpdateCount\": \"<integer>\"\n  }\n]"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/statistics/allTenantsSummary?dateFrom=<dateTime>&dateTo=<dateTime>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "statistics",
                            "allTenantsSummary"
                          ],
                          "query": [
                            {
                              "key": "dateFrom",
                              "value": "<dateTime>",
                              "description": "Start date or date and time of the statistics."
                            },
                            {
                              "key": "dateTo",
                              "value": "<dateTime>",
                              "description": "End date or date and time of the statistics."
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "files",
              "item": [
                {
                  "name": "{id}",
                  "item": [
                    {
                      "name": "Retrieve a usage statistics file",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/octet-stream"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/statistics/files/:id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "statistics",
                            "files",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of the statistics file."
                            }
                          ]
                        },
                        "description": "Retrieve a specific usage statistics file (by a given ID).\n\n> **&#9432; Info:** This is only accessible by the Management tenant.\n\n<section><h5>Required roles</h5>\nROLE_TENANT_MANAGEMENT_ADMIN\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The request has succeeded and the file is sent in the response.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/octet-stream"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/tenant/statistics/files/:id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "statistics",
                                "files",
                                ":id"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/octet-stream"
                            }
                          ],
                          "cookie": [],
                          "body": "<binary>"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/tenant/statistics/files/:id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "statistics",
                                "files",
                                ":id"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Statistics file not found.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/tenant/statistics/files/:id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "statistics",
                                "files",
                                ":id"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "latest",
                  "item": [
                    {
                      "name": "{month}",
                      "item": [
                        {
                          "name": "Retrieve the latest usage statistics file",
                          "request": {
                            "auth": {
                              "type": "basic",
                              "basic": [
                                {
                                  "key": "username",
                                  "value": "{{basicAuthUsername}}",
                                  "type": "string"
                                },
                                {
                                  "key": "password",
                                  "value": "{{basicAuthPassword}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/octet-stream"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/tenant/statistics/files/latest/:month",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "statistics",
                                "files",
                                "latest",
                                ":month"
                              ],
                              "variable": [
                                {
                                  "key": "month",
                                  "value": "<date>",
                                  "description": "(Required) Date (format YYYY-MM-dd) specifying the month for which the statistics file will be downloaded (the day value is ignored)."
                                }
                              ]
                            },
                            "description": "Retrieve the latest usage statistics file with REAL data for a given month.\n\nThere are two types of statistics files:\n* REAL - generated by the system on the first day of the month and includes statistics for the previous month.\n* TEST - generated by the user with a time range specified in the query parameters (`dateFrom`, `dateTo`).\n\n> **&#9432; Info:** This is only accessible by the Management tenant.\n\n<section><h5>Required roles</h5>\nROLE_TENANT_MANAGEMENT_ADMIN\n</section>\n"
                          },
                          "response": [
                            {
                              "name": "The request has succeeded and the file is sent in the response.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/octet-stream"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/tenant/statistics/files/latest/:month",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "tenant",
                                    "statistics",
                                    "files",
                                    "latest",
                                    ":month"
                                  ],
                                  "variable": [
                                    {
                                      "key": "month"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "text",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/octet-stream"
                                }
                              ],
                              "cookie": [],
                              "body": "<binary>"
                            },
                            {
                              "name": "Authentication information is missing or invalid.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/tenant/statistics/files/latest/:month",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "tenant",
                                    "statistics",
                                    "files",
                                    "latest",
                                    ":month"
                                  ],
                                  "variable": [
                                    {
                                      "key": "month"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Generate a statistics file report",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.tenantstatisticsdate+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.tenantstatisticsfile+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"dateFrom\": \"<dateTime>\",\n  \"dateTo\": \"<dateTime>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/tenant/statistics/files",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "statistics",
                        "files"
                      ]
                    },
                    "description": "Generate a TEST statistics file report for a given time range.\n\nThere are two types of statistics files:\n* REAL - generated by the system on the first day of the month and including statistics from the previous month.\n* TEST - generated by the user with a time range specified in the query parameters (`dateFrom`, `dateTo`).\n\n`dateFrom` and `dateTo` are using daily granularity and each day is stored with respect to local Time Zone of the server.\n\n> **&#9432; Info:** This is only accessible by the Management tenant.\n\n<section><h5>Required roles</h5>\nROLE_TENANT_MANAGEMENT_ADMIN <b>OR</b> ROLE_TENANT_MANAGEMENT_CREATE\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "A statistics file was generated.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.tenantstatisticsdate+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.tenantstatisticsfile+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"dateFrom\": \"<dateTime>\",\n  \"dateTo\": \"<dateTime>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/statistics/files",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "statistics",
                            "files"
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.tenantstatisticsfile+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"instanceName\": \"<string>\",\n  \"generationDate\": \"<dateTime>\",\n  \"dateFrom\": \"<dateTime>\",\n  \"dateTo\": \"<dateTime>\",\n  \"type\": \"TEST\"\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.tenantstatisticsdate+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"dateFrom\": \"<dateTime>\",\n  \"dateTo\": \"<dateTime>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/statistics/files",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "statistics",
                            "files"
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unprocessable Entity – invalid payload.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.tenantstatisticsdate+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"dateFrom\": \"<dateTime>\",\n  \"dateTo\": \"<dateTime>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/statistics/files",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "statistics",
                            "files"
                          ]
                        }
                      },
                      "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                      "code": 422,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Retrieve usage statistics files metadata",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.tenantStatisticsfilecollection+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/tenant/statistics/files?currentPage=1&dateFrom=<dateTime>&dateTo=<dateTime>&pageSize=5&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "statistics",
                        "files"
                      ],
                      "query": [
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the range included in statistics file."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the range included in statistics file."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    },
                    "description": "Retrieve usage statistics summary files report metadata.\n\n> **&#9432; Info:** This is only accessible by the Management tenant.\n\nDate range defines the search criteria for files which have any data inside this range. For example, query containing `dateFrom=2023-03-01&dateTo=2023-03-31`\nwill return files with statistics from ranges 2023-02-25---2023-03-03, 2023-03-04---2023-03-05, 2023-03-15---2023-04-15, but not the files where\nthe whole range of data is outside of queried range, like 2023-02-01---2023-02-27.\n\n<section><h5>Required roles</h5>\nROLE_TENANT_MANAGEMENT_ADMIN\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the tenant statistics are sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.tenantStatisticsfilecollection+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/statistics/files?currentPage=1&dateFrom=<dateTime>&dateTo=<dateTime>&pageSize=5&withTotalPages=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "statistics",
                            "files"
                          ],
                          "query": [
                            {
                              "key": "currentPage",
                              "value": "1",
                              "description": "The current page of the paginated results."
                            },
                            {
                              "key": "dateFrom",
                              "value": "<dateTime>",
                              "description": "Start date or date and time of the range included in statistics file."
                            },
                            {
                              "key": "dateTo",
                              "value": "<dateTime>",
                              "description": "End date or date and time of the range included in statistics file."
                            },
                            {
                              "key": "pageSize",
                              "value": "5",
                              "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                            },
                            {
                              "key": "withTotalPages",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.tenantStatisticsfilecollection+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  },\n  \"statisticsFiles\": [\n    {\n      \"id\": \"<string>\",\n      \"instanceName\": \"<string>\",\n      \"generationDate\": \"<dateTime>\",\n      \"dateFrom\": \"<dateTime>\",\n      \"dateTo\": \"<dateTime>\",\n      \"type\": \"REAL\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"instanceName\": \"<string>\",\n      \"generationDate\": \"<dateTime>\",\n      \"dateFrom\": \"<dateTime>\",\n      \"dateTo\": \"<dateTime>\",\n      \"type\": \"TEST\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/statistics/files?currentPage=1&dateFrom=<dateTime>&dateTo=<dateTime>&pageSize=5&withTotalPages=false",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "statistics",
                            "files"
                          ],
                          "query": [
                            {
                              "key": "currentPage",
                              "value": "1",
                              "description": "The current page of the paginated results."
                            },
                            {
                              "key": "dateFrom",
                              "value": "<dateTime>",
                              "description": "Start date or date and time of the range included in statistics file."
                            },
                            {
                              "key": "dateTo",
                              "value": "<dateTime>",
                              "description": "End date or date and time of the range included in statistics file."
                            },
                            {
                              "key": "pageSize",
                              "value": "5",
                              "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                            },
                            {
                              "key": "withTotalPages",
                              "value": "false",
                              "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "device",
              "item": [
                {
                  "name": "{tenantId}",
                  "item": [
                    {
                      "name": "monthly",
                      "item": [
                        {
                          "name": "{date}",
                          "item": [
                            {
                              "name": "Retrieve monthly device statistics",
                              "request": {
                                "auth": {
                                  "type": "basic",
                                  "basic": [
                                    {
                                      "key": "username",
                                      "value": "{{basicAuthUsername}}",
                                      "type": "string"
                                    },
                                    {
                                      "key": "password",
                                      "value": "{{basicAuthPassword}}",
                                      "type": "string"
                                    }
                                  ]
                                },
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/tenant/statistics/device/:tenantId/monthly/:date?currentPage=1&deviceId=<string>&pageSize=5&withTotalPages=false",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "tenant",
                                    "statistics",
                                    "device",
                                    ":tenantId",
                                    "monthly",
                                    ":date"
                                  ],
                                  "query": [
                                    {
                                      "key": "currentPage",
                                      "value": "1",
                                      "description": "The current page of the paginated results."
                                    },
                                    {
                                      "key": "deviceId",
                                      "value": "<string>",
                                      "description": "The ID of the device to search for."
                                    },
                                    {
                                      "key": "pageSize",
                                      "value": "5",
                                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                    },
                                    {
                                      "key": "withTotalPages",
                                      "value": "false",
                                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                    }
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId",
                                      "value": "<string>",
                                      "description": "(Required) Unique identifier of a Cumulocity tenant."
                                    },
                                    {
                                      "key": "date",
                                      "value": "<date>",
                                      "description": "(Required) Date (format YYYY-MM-dd) of the queried month (the day value is ignored)."
                                    }
                                  ]
                                },
                                "description": "Retrieve monthly device statistics from a specific tenant (by a given ID).\n\n<section><h5>Required roles</h5>\nROLE_TENANT_STATISTICS_READ\n</section>\n"
                              },
                              "response": [
                                {
                                  "name": "The request has succeeded and the devices statistics are sent in the response.",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/tenant/statistics/device/:tenantId/monthly/:date?currentPage=1&deviceId=<string>&pageSize=5&withTotalPages=false",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "tenant",
                                        "statistics",
                                        "device",
                                        ":tenantId",
                                        "monthly",
                                        ":date"
                                      ],
                                      "query": [
                                        {
                                          "key": "currentPage",
                                          "value": "1",
                                          "description": "The current page of the paginated results."
                                        },
                                        {
                                          "key": "deviceId",
                                          "value": "<string>",
                                          "description": "The ID of the device to search for."
                                        },
                                        {
                                          "key": "pageSize",
                                          "value": "5",
                                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                        },
                                        {
                                          "key": "withTotalPages",
                                          "value": "false",
                                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                        }
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "date"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "OK",
                                  "code": 200,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"statistics\": [\n    {\n      \"count\": \"<integer>\",\n      \"deviceId\": \"<string>\",\n      \"deviceParents\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"deviceType\": \"<string>\"\n    },\n    {\n      \"count\": \"<integer>\",\n      \"deviceId\": \"<string>\",\n      \"deviceParents\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"deviceType\": \"<string>\"\n    }\n  ]\n}"
                                },
                                {
                                  "name": "Authentication information is missing or invalid.",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/tenant/statistics/device/:tenantId/monthly/:date?currentPage=1&deviceId=<string>&pageSize=5&withTotalPages=false",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "tenant",
                                        "statistics",
                                        "device",
                                        ":tenantId",
                                        "monthly",
                                        ":date"
                                      ],
                                      "query": [
                                        {
                                          "key": "currentPage",
                                          "value": "1",
                                          "description": "The current page of the paginated results."
                                        },
                                        {
                                          "key": "deviceId",
                                          "value": "<string>",
                                          "description": "The ID of the device to search for."
                                        },
                                        {
                                          "key": "pageSize",
                                          "value": "5",
                                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                        },
                                        {
                                          "key": "withTotalPages",
                                          "value": "false",
                                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                        }
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "date"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                },
                                {
                                  "name": "Not authorized to perform this operation.",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/tenant/statistics/device/:tenantId/monthly/:date?currentPage=1&deviceId=<string>&pageSize=5&withTotalPages=false",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "tenant",
                                        "statistics",
                                        "device",
                                        ":tenantId",
                                        "monthly",
                                        ":date"
                                      ],
                                      "query": [
                                        {
                                          "key": "currentPage",
                                          "value": "1",
                                          "description": "The current page of the paginated results."
                                        },
                                        {
                                          "key": "deviceId",
                                          "value": "<string>",
                                          "description": "The ID of the device to search for."
                                        },
                                        {
                                          "key": "pageSize",
                                          "value": "5",
                                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                        },
                                        {
                                          "key": "withTotalPages",
                                          "value": "false",
                                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                        }
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "date"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Forbidden",
                                  "code": 403,
                                  "_postman_previewlanguage": "text",
                                  "header": [],
                                  "cookie": [],
                                  "body": ""
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "daily",
                      "item": [
                        {
                          "name": "{date}",
                          "item": [
                            {
                              "name": "Retrieve daily device statistics",
                              "request": {
                                "auth": {
                                  "type": "basic",
                                  "basic": [
                                    {
                                      "key": "username",
                                      "value": "{{basicAuthUsername}}",
                                      "type": "string"
                                    },
                                    {
                                      "key": "password",
                                      "value": "{{basicAuthPassword}}",
                                      "type": "string"
                                    }
                                  ]
                                },
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/tenant/statistics/device/:tenantId/daily/:date?currentPage=1&deviceId=<string>&pageSize=5&withTotalPages=false",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "tenant",
                                    "statistics",
                                    "device",
                                    ":tenantId",
                                    "daily",
                                    ":date"
                                  ],
                                  "query": [
                                    {
                                      "key": "currentPage",
                                      "value": "1",
                                      "description": "The current page of the paginated results."
                                    },
                                    {
                                      "key": "deviceId",
                                      "value": "<string>",
                                      "description": "The ID of the device to search for."
                                    },
                                    {
                                      "key": "pageSize",
                                      "value": "5",
                                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                    },
                                    {
                                      "key": "withTotalPages",
                                      "value": "false",
                                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                    }
                                  ],
                                  "variable": [
                                    {
                                      "key": "tenantId",
                                      "value": "<string>",
                                      "description": "(Required) Unique identifier of a Cumulocity tenant."
                                    },
                                    {
                                      "key": "date",
                                      "value": "<date>",
                                      "description": "(Required) Date (format YYYY-MM-dd) of the queried day."
                                    }
                                  ]
                                },
                                "description": "Retrieve daily device statistics from a specific tenant (by a given ID).\n\n<section><h5>Required roles</h5>\nROLE_TENANT_STATISTICS_READ\n</section>\n"
                              },
                              "response": [
                                {
                                  "name": "The request has succeeded and the devices statistics are sent in the response.",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/tenant/statistics/device/:tenantId/daily/:date?currentPage=1&deviceId=<string>&pageSize=5&withTotalPages=false",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "tenant",
                                        "statistics",
                                        "device",
                                        ":tenantId",
                                        "daily",
                                        ":date"
                                      ],
                                      "query": [
                                        {
                                          "key": "currentPage",
                                          "value": "1",
                                          "description": "The current page of the paginated results."
                                        },
                                        {
                                          "key": "deviceId",
                                          "value": "<string>",
                                          "description": "The ID of the device to search for."
                                        },
                                        {
                                          "key": "pageSize",
                                          "value": "5",
                                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                        },
                                        {
                                          "key": "withTotalPages",
                                          "value": "false",
                                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                        }
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "date"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "OK",
                                  "code": 200,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"statistics\": [\n    {\n      \"count\": \"<integer>\",\n      \"deviceId\": \"<string>\",\n      \"deviceParents\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"deviceType\": \"<string>\"\n    },\n    {\n      \"count\": \"<integer>\",\n      \"deviceId\": \"<string>\",\n      \"deviceParents\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"deviceType\": \"<string>\"\n    }\n  ]\n}"
                                },
                                {
                                  "name": "Authentication information is missing or invalid.",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                                      },
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/tenant/statistics/device/:tenantId/daily/:date?currentPage=1&deviceId=<string>&pageSize=5&withTotalPages=false",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "tenant",
                                        "statistics",
                                        "device",
                                        ":tenantId",
                                        "daily",
                                        ":date"
                                      ],
                                      "query": [
                                        {
                                          "key": "currentPage",
                                          "value": "1",
                                          "description": "The current page of the paginated results."
                                        },
                                        {
                                          "key": "deviceId",
                                          "value": "<string>",
                                          "description": "The ID of the device to search for."
                                        },
                                        {
                                          "key": "pageSize",
                                          "value": "5",
                                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                        },
                                        {
                                          "key": "withTotalPages",
                                          "value": "false",
                                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                        }
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "date"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                                },
                                {
                                  "name": "Not authorized to perform this operation.",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Authorization",
                                        "value": "Basic <credentials>",
                                        "description": "Added as a part of security scheme: basic"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/tenant/statistics/device/:tenantId/daily/:date?currentPage=1&deviceId=<string>&pageSize=5&withTotalPages=false",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "tenant",
                                        "statistics",
                                        "device",
                                        ":tenantId",
                                        "daily",
                                        ":date"
                                      ],
                                      "query": [
                                        {
                                          "key": "currentPage",
                                          "value": "1",
                                          "description": "The current page of the paginated results."
                                        },
                                        {
                                          "key": "deviceId",
                                          "value": "<string>",
                                          "description": "The ID of the device to search for."
                                        },
                                        {
                                          "key": "pageSize",
                                          "value": "5",
                                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                                        },
                                        {
                                          "key": "withTotalPages",
                                          "value": "false",
                                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                                        }
                                      ],
                                      "variable": [
                                        {
                                          "key": "tenantId"
                                        },
                                        {
                                          "key": "date"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Forbidden",
                                  "code": 403,
                                  "_postman_previewlanguage": "text",
                                  "header": [],
                                  "cookie": [],
                                  "body": ""
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Retrieve statistics of the current tenant",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.tenantusagestatisticscollection+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/tenant/statistics?currentPage=1&dateFrom=<dateTime>&dateTo=<dateTime>&pageSize=5&withTotalElements=false&withTotalPages=false",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "tenant",
                    "statistics"
                  ],
                  "query": [
                    {
                      "key": "currentPage",
                      "value": "1",
                      "description": "The current page of the paginated results."
                    },
                    {
                      "key": "dateFrom",
                      "value": "<dateTime>",
                      "description": "Start date or date and time of the statistics."
                    },
                    {
                      "key": "dateTo",
                      "value": "<dateTime>",
                      "description": "End date or date and time of the statistics."
                    },
                    {
                      "key": "pageSize",
                      "value": "5",
                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                    },
                    {
                      "key": "withTotalElements",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                    },
                    {
                      "key": "withTotalPages",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                    }
                  ]
                },
                "description": "Retrieve usage statistics of the current tenant.\n\n<section><h5>Required roles</h5>\nROLE_TENANT_STATISTICS_READ\n</section>\n"
              },
              "response": [
                {
                  "name": "The request has succeeded and the tenant statistics are sent in the response.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.tenantusagestatisticscollection+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/tenant/statistics?currentPage=1&dateFrom=<dateTime>&dateTo=<dateTime>&pageSize=5&withTotalElements=false&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "statistics"
                      ],
                      "query": [
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the statistics."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the statistics."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.tenantusagestatisticscollection+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  },\n  \"usageStatistics\": [\n    {\n      \"alarmsCreatedCount\": \"<integer>\",\n      \"alarmsUpdatedCount\": \"<integer>\",\n      \"day\": \"<dateTime>\",\n      \"deviceCount\": \"<integer>\",\n      \"deviceEndpointCount\": \"<integer>\",\n      \"deviceRequestCount\": \"<integer>\",\n      \"deviceWithChildrenCount\": \"<integer>\",\n      \"eventsCreatedCount\": \"<integer>\",\n      \"eventsUpdatedCount\": \"<integer>\",\n      \"inventoriesCreatedCount\": \"<integer>\",\n      \"inventoriesUpdatedCount\": \"<integer>\",\n      \"measurementsCreatedCount\": \"<integer>\",\n      \"operationsCreatedCount\": \"<integer>\",\n      \"operationsUpdatedCount\": \"<integer>\",\n      \"requestCount\": \"<integer>\",\n      \"resources\": {\n        \"cpu\": \"<integer>\",\n        \"memory\": \"<integer>\",\n        \"usedBy\": [\n          {\n            \"cause\": \"<string>\",\n            \"cpu\": \"<integer>\",\n            \"memory\": \"<integer>\",\n            \"name\": \"<string>\"\n          },\n          {\n            \"cause\": \"<string>\",\n            \"cpu\": \"<integer>\",\n            \"memory\": \"<integer>\",\n            \"name\": \"<string>\"\n          }\n        ]\n      },\n      \"self\": \"<uri>\",\n      \"storageSize\": \"<integer>\",\n      \"subscribedApplications\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"totalResourceCreateAndUpdateCount\": \"<integer>\"\n    },\n    {\n      \"alarmsCreatedCount\": \"<integer>\",\n      \"alarmsUpdatedCount\": \"<integer>\",\n      \"day\": \"<dateTime>\",\n      \"deviceCount\": \"<integer>\",\n      \"deviceEndpointCount\": \"<integer>\",\n      \"deviceRequestCount\": \"<integer>\",\n      \"deviceWithChildrenCount\": \"<integer>\",\n      \"eventsCreatedCount\": \"<integer>\",\n      \"eventsUpdatedCount\": \"<integer>\",\n      \"inventoriesCreatedCount\": \"<integer>\",\n      \"inventoriesUpdatedCount\": \"<integer>\",\n      \"measurementsCreatedCount\": \"<integer>\",\n      \"operationsCreatedCount\": \"<integer>\",\n      \"operationsUpdatedCount\": \"<integer>\",\n      \"requestCount\": \"<integer>\",\n      \"resources\": {\n        \"cpu\": \"<integer>\",\n        \"memory\": \"<integer>\",\n        \"usedBy\": [\n          {\n            \"cause\": \"<string>\",\n            \"cpu\": \"<integer>\",\n            \"memory\": \"<integer>\",\n            \"name\": \"<string>\"\n          },\n          {\n            \"cause\": \"<string>\",\n            \"cpu\": \"<integer>\",\n            \"memory\": \"<integer>\",\n            \"name\": \"<string>\"\n          }\n        ]\n      },\n      \"self\": \"<uri>\",\n      \"storageSize\": \"<integer>\",\n      \"subscribedApplications\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"totalResourceCreateAndUpdateCount\": \"<integer>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/tenant/statistics?currentPage=1&dateFrom=<dateTime>&dateTo=<dateTime>&pageSize=5&withTotalElements=false&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "statistics"
                      ],
                      "query": [
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Start date or date and time of the statistics."
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "End date or date and time of the statistics."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "withTotalElements",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of elements. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalElements` statistics are cached for 10 seconds.\n"
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "loginOptions",
          "item": [
            {
              "name": "{typeOrId}",
              "item": [
                {
                  "name": "restrict",
                  "item": [
                    {
                      "name": "Update a tenant's access to the login option",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.authconfig+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"onlyManagementTenantAccess\": false\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/loginOptions/:typeOrId/restrict?targetTenant=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "loginOptions",
                            ":typeOrId",
                            "restrict"
                          ],
                          "query": [
                            {
                              "key": "targetTenant",
                              "value": "<string>",
                              "description": "(Required) Unique identifier of a Cumulocity tenant."
                            }
                          ],
                          "variable": [
                            {
                              "key": "typeOrId",
                              "value": "<string>",
                              "description": "(Required) The type or ID of the login option. The type's value is case insensitive and can be `OAUTH2`, `OAUTH2_INTERNAL` or `BASIC`."
                            }
                          ]
                        },
                        "description": "Update the tenant's access to the authentication configuration.\n\n<section><h5>Required roles</h5>\nROLE_TENANT_MANAGEMENT_ADMIN <b>AND</b> is the management tenant\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The login option was updated.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.authconfig+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"onlyManagementTenantAccess\": false\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/tenant/loginOptions/:typeOrId/restrict?targetTenant=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "loginOptions",
                                ":typeOrId",
                                "restrict"
                              ],
                              "query": [
                                {
                                  "key": "targetTenant",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of a Cumulocity tenant."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "typeOrId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.authconfig+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"type\": \"OAUTH2\",\n  \"providerName\": \"<string>\",\n  \"accessTokenToUserDataMapping\": {\n    \"emailClaimName\": \"<email>\",\n    \"firstNameClaimName\": \"<string>\",\n    \"lastNameClaimName\": \"<string>\",\n    \"phoneNumberClaimName\": \"<string>\"\n  },\n  \"audience\": \"<uri>\",\n  \"authorizationRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"pariatur6c\": \"<string>\",\n      \"aliqua_35\": \"<string>\"\n    },\n    \"method\": \"GET\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"pariatur_2e\": \"<string>\",\n      \"dolor9\": \"<string>\",\n      \"incididunt817\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"authenticationRestrictions\": {\n    \"forbiddenClients\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"forbiddenUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"trustedUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"buttonName\": \"<string>\",\n  \"clientId\": \"<string>\",\n  \"grantType\": \"AUTHORIZATION_CODE\",\n  \"id\": \"<string>\",\n  \"issuer\": \"<uri>\",\n  \"logoutRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"ex0\": \"<string>\",\n      \"ipsum_cd\": \"<string>\",\n      \"ullamco_fe8\": \"<string>\"\n    },\n    \"method\": \"GET\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"tempor_b\": \"<string>\",\n      \"nisi_3\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"onlyManagementTenantAccess\": \"<boolean>\",\n  \"onNewUser\": {\n    \"dynamicMapping\": {\n      \"configuration\": {\n        \"mapRolesOnlyForNewUser\": \"<boolean>\",\n        \"manageRolesOnlyFromAccessMapping\": \"<boolean>\",\n        \"mapFromIdToken\": \"<boolean>\"\n      },\n      \"mappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"NEQ\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"OR\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        }\n      ],\n      \"inventoryMappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"LTE\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"IN\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  },\n  \"redirectToPlatform\": \"<uri>\",\n  \"refreshRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"pariatur72\": \"<string>\",\n      \"nisi_585\": \"<string>\"\n    },\n    \"method\": \"GET\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"qui1\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"self\": \"<uri>\",\n  \"sessionConfiguration\": {\n    \"absoluteTimeoutMillis\": \"<integer>\",\n    \"maximumNumberOfParallelSessions\": \"<integer>\",\n    \"renewalTimeoutMillis\": \"<integer>\",\n    \"userAgentValidationRequired\": \"<boolean>\"\n  },\n  \"signatureVerificationConfig\": {\n    \"aad\": {\n      \"publicKeyDiscoveryUrl\": \"<uri>\"\n    },\n    \"adfsManifest\": {\n      \"manifestUrl\": \"<uri>\"\n    },\n    \"jwks\": {\n      \"jwksUrl\": \"<uri>\"\n    },\n    \"manual\": {\n      \"certIdField\": \"<string>\",\n      \"certIdFromField\": \"<boolean>\",\n      \"certificates\": {\n        \"alg\": \"PCKS\",\n        \"publicKey\": \"<string>\",\n        \"validFrom\": \"<dateTime>\",\n        \"validTill\": \"<dateTime>\"\n      }\n    }\n  },\n  \"template\": \"<string>\",\n  \"tokenRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"ea4d\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"sed_e\": \"<string>\",\n      \"sit_abe\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"useIdToken\": \"<boolean>\",\n  \"userIdConfig\": {\n    \"constantValue\": \"<string>\",\n    \"jwtField\": \"<string>\",\n    \"useConstantValue\": \"<boolean>\"\n  },\n  \"userManagementSource\": \"REMOTE\",\n  \"visibleOnLoginPage\": \"<boolean>\",\n  \"externalTokenConfig\": {\n    \"enabled\": \"<boolean>\",\n    \"userOrAppIdConfig\": {\n      \"constantValue\": \"<string>\",\n      \"jwtField\": \"<string>\",\n      \"useConstantValue\": \"<boolean>\"\n    },\n    \"validationRequired\": \"<boolean>\",\n    \"validationMethod\": \"INTROSPECTION\",\n    \"tokenValidationRequest\": {\n      \"body\": \"<string>\",\n      \"headers\": {\n        \"Duis38\": \"<string>\",\n        \"et__\": \"<string>\"\n      },\n      \"method\": \"POST\",\n      \"operation\": \"EXECUTE\",\n      \"requestParams\": {\n        \"nisi_\": \"<string>\"\n      },\n      \"url\": \"<uri>\"\n    },\n    \"accessTokenValidityCheckIntervalInMinutes\": \"<integer>\"\n  }\n}"
                        },
                        {
                          "name": "Not authorized to perform this operation.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"onlyManagementTenantAccess\": false\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/tenant/loginOptions/:typeOrId/restrict?targetTenant=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "loginOptions",
                                ":typeOrId",
                                "restrict"
                              ],
                              "query": [
                                {
                                  "key": "targetTenant",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of a Cumulocity tenant."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "typeOrId"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Tenant not found.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"onlyManagementTenantAccess\": false\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/tenant/loginOptions/:typeOrId/restrict?targetTenant=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "loginOptions",
                                ":typeOrId",
                                "restrict"
                              ],
                              "query": [
                                {
                                  "key": "targetTenant",
                                  "value": "<string>",
                                  "description": "(Required) Unique identifier of a Cumulocity tenant."
                                }
                              ],
                              "variable": [
                                {
                                  "key": "typeOrId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Retrieve a specific login option",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.authConfig+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/tenant/loginOptions/:typeOrId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "loginOptions",
                        ":typeOrId"
                      ],
                      "variable": [
                        {
                          "key": "typeOrId",
                          "value": "<string>",
                          "description": "(Required) The type or ID of the login option. The type's value is case insensitive and can be `OAUTH2`, `OAUTH2_INTERNAL` or `BASIC`."
                        }
                      ]
                    },
                    "description": "Retrieve a specific login option in the tenant by the given type or ID.\n\n<section><h5>Required roles</h5>\n((ROLE_TENANT_ADMIN <b>OR</b> ROLE_TENANT_MANAGEMENT_ADMIN <b>OR</b> ROLE_USER_MANAGEMENT_OWN_ADMIN <b>OR</b> ROLE_USER_MANAGEMENT_CREATE)\n<b>AND</b> tenant access to login option is not restricted by management tenant)\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the login option is sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.authConfig+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/loginOptions/:typeOrId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "loginOptions",
                            ":typeOrId"
                          ],
                          "variable": [
                            {
                              "key": "typeOrId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.authConfig+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"type\": \"OAUTH2\",\n  \"providerName\": \"<string>\",\n  \"accessTokenToUserDataMapping\": {\n    \"emailClaimName\": \"<email>\",\n    \"firstNameClaimName\": \"<string>\",\n    \"lastNameClaimName\": \"<string>\",\n    \"phoneNumberClaimName\": \"<string>\"\n  },\n  \"audience\": \"<uri>\",\n  \"authorizationRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"pariatur6c\": \"<string>\",\n      \"aliqua_35\": \"<string>\"\n    },\n    \"method\": \"GET\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"pariatur_2e\": \"<string>\",\n      \"dolor9\": \"<string>\",\n      \"incididunt817\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"authenticationRestrictions\": {\n    \"forbiddenClients\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"forbiddenUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"trustedUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"buttonName\": \"<string>\",\n  \"clientId\": \"<string>\",\n  \"grantType\": \"AUTHORIZATION_CODE\",\n  \"id\": \"<string>\",\n  \"issuer\": \"<uri>\",\n  \"logoutRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"ex0\": \"<string>\",\n      \"ipsum_cd\": \"<string>\",\n      \"ullamco_fe8\": \"<string>\"\n    },\n    \"method\": \"GET\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"tempor_b\": \"<string>\",\n      \"nisi_3\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"onlyManagementTenantAccess\": \"<boolean>\",\n  \"onNewUser\": {\n    \"dynamicMapping\": {\n      \"configuration\": {\n        \"mapRolesOnlyForNewUser\": \"<boolean>\",\n        \"manageRolesOnlyFromAccessMapping\": \"<boolean>\",\n        \"mapFromIdToken\": \"<boolean>\"\n      },\n      \"mappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"NEQ\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"OR\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        }\n      ],\n      \"inventoryMappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"LTE\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"IN\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  },\n  \"redirectToPlatform\": \"<uri>\",\n  \"refreshRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"pariatur72\": \"<string>\",\n      \"nisi_585\": \"<string>\"\n    },\n    \"method\": \"GET\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"qui1\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"self\": \"<uri>\",\n  \"sessionConfiguration\": {\n    \"absoluteTimeoutMillis\": \"<integer>\",\n    \"maximumNumberOfParallelSessions\": \"<integer>\",\n    \"renewalTimeoutMillis\": \"<integer>\",\n    \"userAgentValidationRequired\": \"<boolean>\"\n  },\n  \"signatureVerificationConfig\": {\n    \"aad\": {\n      \"publicKeyDiscoveryUrl\": \"<uri>\"\n    },\n    \"adfsManifest\": {\n      \"manifestUrl\": \"<uri>\"\n    },\n    \"jwks\": {\n      \"jwksUrl\": \"<uri>\"\n    },\n    \"manual\": {\n      \"certIdField\": \"<string>\",\n      \"certIdFromField\": \"<boolean>\",\n      \"certificates\": {\n        \"alg\": \"PCKS\",\n        \"publicKey\": \"<string>\",\n        \"validFrom\": \"<dateTime>\",\n        \"validTill\": \"<dateTime>\"\n      }\n    }\n  },\n  \"template\": \"<string>\",\n  \"tokenRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"ea4d\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"sed_e\": \"<string>\",\n      \"sit_abe\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"useIdToken\": \"<boolean>\",\n  \"userIdConfig\": {\n    \"constantValue\": \"<string>\",\n    \"jwtField\": \"<string>\",\n    \"useConstantValue\": \"<boolean>\"\n  },\n  \"userManagementSource\": \"REMOTE\",\n  \"visibleOnLoginPage\": \"<boolean>\",\n  \"externalTokenConfig\": {\n    \"enabled\": \"<boolean>\",\n    \"userOrAppIdConfig\": {\n      \"constantValue\": \"<string>\",\n      \"jwtField\": \"<string>\",\n      \"useConstantValue\": \"<boolean>\"\n    },\n    \"validationRequired\": \"<boolean>\",\n    \"validationMethod\": \"INTROSPECTION\",\n    \"tokenValidationRequest\": {\n      \"body\": \"<string>\",\n      \"headers\": {\n        \"Duis38\": \"<string>\",\n        \"et__\": \"<string>\"\n      },\n      \"method\": \"POST\",\n      \"operation\": \"EXECUTE\",\n      \"requestParams\": {\n        \"nisi_\": \"<string>\"\n      },\n      \"url\": \"<uri>\"\n    },\n    \"accessTokenValidityCheckIntervalInMinutes\": \"<integer>\"\n  }\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/loginOptions/:typeOrId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "loginOptions",
                            ":typeOrId"
                          ],
                          "variable": [
                            {
                              "key": "typeOrId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not authorized to perform this operation.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/loginOptions/:typeOrId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "loginOptions",
                            ":typeOrId"
                          ],
                          "variable": [
                            {
                              "key": "typeOrId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Login option not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/loginOptions/:typeOrId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "loginOptions",
                            ":typeOrId"
                          ],
                          "variable": [
                            {
                              "key": "typeOrId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Update a specific login option",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "X-Cumulocity-Processing-Mode",
                        "value": "PERSISTENT",
                        "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.authconfig+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.authconfig+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"id\": \"<string>\",\n  \"providerName\": \"<string>\",\n  \"type\": \"OAUTH2\",\n  \"accessTokenToUserDataMapping\": {\n    \"emailClaimName\": \"<email>\",\n    \"firstNameClaimName\": \"<string>\",\n    \"lastNameClaimName\": \"<string>\",\n    \"phoneNumberClaimName\": \"<string>\"\n  },\n  \"audience\": \"<uri>\",\n  \"authorizationRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"aute43b\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"sint_9_5\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"authenticationRestrictions\": {\n    \"forbiddenClients\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"forbiddenUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"trustedUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"buttonName\": \"<string>\",\n  \"clientId\": \"<string>\",\n  \"grantType\": \"PASSWORD\",\n  \"issuer\": \"<uri>\",\n  \"logoutRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"qui1\": \"<string>\",\n      \"amet_c5e\": \"<string>\",\n      \"Excepteur_a4\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"in__3\": \"<string>\",\n      \"eu_2e\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"onlyManagementTenantAccess\": \"<boolean>\",\n  \"onNewUser\": {\n    \"dynamicMapping\": {\n      \"configuration\": {\n        \"mapRolesOnlyForNewUser\": \"<boolean>\",\n        \"manageRolesOnlyFromAccessMapping\": \"<boolean>\",\n        \"mapFromIdToken\": \"<boolean>\"\n      },\n      \"mappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"OR\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"AND\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        }\n      ],\n      \"inventoryMappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"OR\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"OR\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  },\n  \"redirectToPlatform\": \"<uri>\",\n  \"refreshRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"cillum7\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"EXECUTE\",\n    \"requestParams\": {\n      \"esse7_\": \"<string>\",\n      \"Excepteur_0\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"sessionConfiguration\": {\n    \"absoluteTimeoutMillis\": \"<integer>\",\n    \"maximumNumberOfParallelSessions\": \"<integer>\",\n    \"renewalTimeoutMillis\": \"<integer>\",\n    \"userAgentValidationRequired\": \"<boolean>\"\n  },\n  \"signatureVerificationConfig\": {\n    \"aad\": {\n      \"publicKeyDiscoveryUrl\": \"<uri>\"\n    },\n    \"adfsManifest\": {\n      \"manifestUrl\": \"<uri>\"\n    },\n    \"jwks\": {\n      \"jwksUrl\": \"<uri>\"\n    },\n    \"manual\": {\n      \"certIdField\": \"<string>\",\n      \"certIdFromField\": \"<boolean>\",\n      \"certificates\": {\n        \"alg\": \"RSA\",\n        \"publicKey\": \"<string>\",\n        \"validFrom\": \"<dateTime>\",\n        \"validTill\": \"<dateTime>\"\n      }\n    }\n  },\n  \"template\": \"<string>\",\n  \"tokenRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"ut_6df\": \"<string>\",\n      \"consectetur_9_\": \"<string>\",\n      \"laborumbc\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"fugiataa2\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"useIdToken\": \"<boolean>\",\n  \"userIdConfig\": {\n    \"constantValue\": \"<string>\",\n    \"jwtField\": \"<string>\",\n    \"useConstantValue\": \"<boolean>\"\n  },\n  \"userManagementSource\": \"INTERNAL\",\n  \"visibleOnLoginPage\": \"<boolean>\",\n  \"externalTokenConfig\": {\n    \"enabled\": \"<boolean>\",\n    \"userOrAppIdConfig\": {\n      \"constantValue\": \"<string>\",\n      \"jwtField\": \"<string>\",\n      \"useConstantValue\": \"<boolean>\"\n    },\n    \"validationRequired\": \"<boolean>\",\n    \"validationMethod\": \"INTROSPECTION\",\n    \"tokenValidationRequest\": {\n      \"body\": \"<string>\",\n      \"headers\": {\n        \"Utff\": \"<string>\",\n        \"adipisicing_23\": \"<string>\"\n      },\n      \"method\": \"POST\",\n      \"operation\": \"EXECUTE\",\n      \"requestParams\": {\n        \"reprehenderit_5\": \"<string>\",\n        \"nullabe3\": \"<string>\",\n        \"irure_\": \"<string>\",\n        \"adipisicing_4f\": \"<string>\"\n      },\n      \"url\": \"<uri>\"\n    },\n    \"accessTokenValidityCheckIntervalInMinutes\": \"<integer>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/tenant/loginOptions/:typeOrId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "loginOptions",
                        ":typeOrId"
                      ],
                      "variable": [
                        {
                          "key": "typeOrId",
                          "value": "<string>",
                          "description": "(Required) The type or ID of the login option. The type's value is case insensitive and can be `OAUTH2`, `OAUTH2_INTERNAL` or `BASIC`."
                        }
                      ]
                    },
                    "description": "Update a specific login option in the tenant by a given type or ID.\n\n<section><h5>Required roles</h5>\n((ROLE_TENANT_ADMIN <b>OR</b> ROLE_TENANT_MANAGEMENT_ADMIN)\n<b>AND</b> tenant access to login option is not restricted by management tenant)\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "A login option was updated.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.authconfig+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.authconfig+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"id\": \"<string>\",\n  \"providerName\": \"<string>\",\n  \"type\": \"OAUTH2\",\n  \"accessTokenToUserDataMapping\": {\n    \"emailClaimName\": \"<email>\",\n    \"firstNameClaimName\": \"<string>\",\n    \"lastNameClaimName\": \"<string>\",\n    \"phoneNumberClaimName\": \"<string>\"\n  },\n  \"audience\": \"<uri>\",\n  \"authorizationRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"aute43b\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"sint_9_5\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"authenticationRestrictions\": {\n    \"forbiddenClients\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"forbiddenUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"trustedUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"buttonName\": \"<string>\",\n  \"clientId\": \"<string>\",\n  \"grantType\": \"PASSWORD\",\n  \"issuer\": \"<uri>\",\n  \"logoutRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"qui1\": \"<string>\",\n      \"amet_c5e\": \"<string>\",\n      \"Excepteur_a4\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"in__3\": \"<string>\",\n      \"eu_2e\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"onlyManagementTenantAccess\": \"<boolean>\",\n  \"onNewUser\": {\n    \"dynamicMapping\": {\n      \"configuration\": {\n        \"mapRolesOnlyForNewUser\": \"<boolean>\",\n        \"manageRolesOnlyFromAccessMapping\": \"<boolean>\",\n        \"mapFromIdToken\": \"<boolean>\"\n      },\n      \"mappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"OR\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"AND\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        }\n      ],\n      \"inventoryMappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"OR\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"OR\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  },\n  \"redirectToPlatform\": \"<uri>\",\n  \"refreshRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"cillum7\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"EXECUTE\",\n    \"requestParams\": {\n      \"esse7_\": \"<string>\",\n      \"Excepteur_0\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"sessionConfiguration\": {\n    \"absoluteTimeoutMillis\": \"<integer>\",\n    \"maximumNumberOfParallelSessions\": \"<integer>\",\n    \"renewalTimeoutMillis\": \"<integer>\",\n    \"userAgentValidationRequired\": \"<boolean>\"\n  },\n  \"signatureVerificationConfig\": {\n    \"aad\": {\n      \"publicKeyDiscoveryUrl\": \"<uri>\"\n    },\n    \"adfsManifest\": {\n      \"manifestUrl\": \"<uri>\"\n    },\n    \"jwks\": {\n      \"jwksUrl\": \"<uri>\"\n    },\n    \"manual\": {\n      \"certIdField\": \"<string>\",\n      \"certIdFromField\": \"<boolean>\",\n      \"certificates\": {\n        \"alg\": \"RSA\",\n        \"publicKey\": \"<string>\",\n        \"validFrom\": \"<dateTime>\",\n        \"validTill\": \"<dateTime>\"\n      }\n    }\n  },\n  \"template\": \"<string>\",\n  \"tokenRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"ut_6df\": \"<string>\",\n      \"consectetur_9_\": \"<string>\",\n      \"laborumbc\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"fugiataa2\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"useIdToken\": \"<boolean>\",\n  \"userIdConfig\": {\n    \"constantValue\": \"<string>\",\n    \"jwtField\": \"<string>\",\n    \"useConstantValue\": \"<boolean>\"\n  },\n  \"userManagementSource\": \"INTERNAL\",\n  \"visibleOnLoginPage\": \"<boolean>\",\n  \"externalTokenConfig\": {\n    \"enabled\": \"<boolean>\",\n    \"userOrAppIdConfig\": {\n      \"constantValue\": \"<string>\",\n      \"jwtField\": \"<string>\",\n      \"useConstantValue\": \"<boolean>\"\n    },\n    \"validationRequired\": \"<boolean>\",\n    \"validationMethod\": \"INTROSPECTION\",\n    \"tokenValidationRequest\": {\n      \"body\": \"<string>\",\n      \"headers\": {\n        \"Utff\": \"<string>\",\n        \"adipisicing_23\": \"<string>\"\n      },\n      \"method\": \"POST\",\n      \"operation\": \"EXECUTE\",\n      \"requestParams\": {\n        \"reprehenderit_5\": \"<string>\",\n        \"nullabe3\": \"<string>\",\n        \"irure_\": \"<string>\",\n        \"adipisicing_4f\": \"<string>\"\n      },\n      \"url\": \"<uri>\"\n    },\n    \"accessTokenValidityCheckIntervalInMinutes\": \"<integer>\"\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/loginOptions/:typeOrId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "loginOptions",
                            ":typeOrId"
                          ],
                          "variable": [
                            {
                              "key": "typeOrId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.authconfig+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"type\": \"OAUTH2\",\n  \"providerName\": \"<string>\",\n  \"accessTokenToUserDataMapping\": {\n    \"emailClaimName\": \"<email>\",\n    \"firstNameClaimName\": \"<string>\",\n    \"lastNameClaimName\": \"<string>\",\n    \"phoneNumberClaimName\": \"<string>\"\n  },\n  \"audience\": \"<uri>\",\n  \"authorizationRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"pariatur6c\": \"<string>\",\n      \"aliqua_35\": \"<string>\"\n    },\n    \"method\": \"GET\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"pariatur_2e\": \"<string>\",\n      \"dolor9\": \"<string>\",\n      \"incididunt817\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"authenticationRestrictions\": {\n    \"forbiddenClients\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"forbiddenUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"trustedUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"buttonName\": \"<string>\",\n  \"clientId\": \"<string>\",\n  \"grantType\": \"AUTHORIZATION_CODE\",\n  \"id\": \"<string>\",\n  \"issuer\": \"<uri>\",\n  \"logoutRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"ex0\": \"<string>\",\n      \"ipsum_cd\": \"<string>\",\n      \"ullamco_fe8\": \"<string>\"\n    },\n    \"method\": \"GET\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"tempor_b\": \"<string>\",\n      \"nisi_3\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"onlyManagementTenantAccess\": \"<boolean>\",\n  \"onNewUser\": {\n    \"dynamicMapping\": {\n      \"configuration\": {\n        \"mapRolesOnlyForNewUser\": \"<boolean>\",\n        \"manageRolesOnlyFromAccessMapping\": \"<boolean>\",\n        \"mapFromIdToken\": \"<boolean>\"\n      },\n      \"mappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"NEQ\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"OR\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        }\n      ],\n      \"inventoryMappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"LTE\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"IN\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  },\n  \"redirectToPlatform\": \"<uri>\",\n  \"refreshRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"pariatur72\": \"<string>\",\n      \"nisi_585\": \"<string>\"\n    },\n    \"method\": \"GET\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"qui1\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"self\": \"<uri>\",\n  \"sessionConfiguration\": {\n    \"absoluteTimeoutMillis\": \"<integer>\",\n    \"maximumNumberOfParallelSessions\": \"<integer>\",\n    \"renewalTimeoutMillis\": \"<integer>\",\n    \"userAgentValidationRequired\": \"<boolean>\"\n  },\n  \"signatureVerificationConfig\": {\n    \"aad\": {\n      \"publicKeyDiscoveryUrl\": \"<uri>\"\n    },\n    \"adfsManifest\": {\n      \"manifestUrl\": \"<uri>\"\n    },\n    \"jwks\": {\n      \"jwksUrl\": \"<uri>\"\n    },\n    \"manual\": {\n      \"certIdField\": \"<string>\",\n      \"certIdFromField\": \"<boolean>\",\n      \"certificates\": {\n        \"alg\": \"PCKS\",\n        \"publicKey\": \"<string>\",\n        \"validFrom\": \"<dateTime>\",\n        \"validTill\": \"<dateTime>\"\n      }\n    }\n  },\n  \"template\": \"<string>\",\n  \"tokenRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"ea4d\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"sed_e\": \"<string>\",\n      \"sit_abe\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"useIdToken\": \"<boolean>\",\n  \"userIdConfig\": {\n    \"constantValue\": \"<string>\",\n    \"jwtField\": \"<string>\",\n    \"useConstantValue\": \"<boolean>\"\n  },\n  \"userManagementSource\": \"REMOTE\",\n  \"visibleOnLoginPage\": \"<boolean>\",\n  \"externalTokenConfig\": {\n    \"enabled\": \"<boolean>\",\n    \"userOrAppIdConfig\": {\n      \"constantValue\": \"<string>\",\n      \"jwtField\": \"<string>\",\n      \"useConstantValue\": \"<boolean>\"\n    },\n    \"validationRequired\": \"<boolean>\",\n    \"validationMethod\": \"INTROSPECTION\",\n    \"tokenValidationRequest\": {\n      \"body\": \"<string>\",\n      \"headers\": {\n        \"Duis38\": \"<string>\",\n        \"et__\": \"<string>\"\n      },\n      \"method\": \"POST\",\n      \"operation\": \"EXECUTE\",\n      \"requestParams\": {\n        \"nisi_\": \"<string>\"\n      },\n      \"url\": \"<uri>\"\n    },\n    \"accessTokenValidityCheckIntervalInMinutes\": \"<integer>\"\n  }\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.authconfig+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"id\": \"<string>\",\n  \"providerName\": \"<string>\",\n  \"type\": \"OAUTH2\",\n  \"accessTokenToUserDataMapping\": {\n    \"emailClaimName\": \"<email>\",\n    \"firstNameClaimName\": \"<string>\",\n    \"lastNameClaimName\": \"<string>\",\n    \"phoneNumberClaimName\": \"<string>\"\n  },\n  \"audience\": \"<uri>\",\n  \"authorizationRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"aute43b\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"sint_9_5\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"authenticationRestrictions\": {\n    \"forbiddenClients\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"forbiddenUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"trustedUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"buttonName\": \"<string>\",\n  \"clientId\": \"<string>\",\n  \"grantType\": \"PASSWORD\",\n  \"issuer\": \"<uri>\",\n  \"logoutRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"qui1\": \"<string>\",\n      \"amet_c5e\": \"<string>\",\n      \"Excepteur_a4\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"in__3\": \"<string>\",\n      \"eu_2e\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"onlyManagementTenantAccess\": \"<boolean>\",\n  \"onNewUser\": {\n    \"dynamicMapping\": {\n      \"configuration\": {\n        \"mapRolesOnlyForNewUser\": \"<boolean>\",\n        \"manageRolesOnlyFromAccessMapping\": \"<boolean>\",\n        \"mapFromIdToken\": \"<boolean>\"\n      },\n      \"mappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"OR\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"AND\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        }\n      ],\n      \"inventoryMappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"OR\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"OR\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  },\n  \"redirectToPlatform\": \"<uri>\",\n  \"refreshRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"cillum7\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"EXECUTE\",\n    \"requestParams\": {\n      \"esse7_\": \"<string>\",\n      \"Excepteur_0\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"sessionConfiguration\": {\n    \"absoluteTimeoutMillis\": \"<integer>\",\n    \"maximumNumberOfParallelSessions\": \"<integer>\",\n    \"renewalTimeoutMillis\": \"<integer>\",\n    \"userAgentValidationRequired\": \"<boolean>\"\n  },\n  \"signatureVerificationConfig\": {\n    \"aad\": {\n      \"publicKeyDiscoveryUrl\": \"<uri>\"\n    },\n    \"adfsManifest\": {\n      \"manifestUrl\": \"<uri>\"\n    },\n    \"jwks\": {\n      \"jwksUrl\": \"<uri>\"\n    },\n    \"manual\": {\n      \"certIdField\": \"<string>\",\n      \"certIdFromField\": \"<boolean>\",\n      \"certificates\": {\n        \"alg\": \"RSA\",\n        \"publicKey\": \"<string>\",\n        \"validFrom\": \"<dateTime>\",\n        \"validTill\": \"<dateTime>\"\n      }\n    }\n  },\n  \"template\": \"<string>\",\n  \"tokenRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"ut_6df\": \"<string>\",\n      \"consectetur_9_\": \"<string>\",\n      \"laborumbc\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"fugiataa2\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"useIdToken\": \"<boolean>\",\n  \"userIdConfig\": {\n    \"constantValue\": \"<string>\",\n    \"jwtField\": \"<string>\",\n    \"useConstantValue\": \"<boolean>\"\n  },\n  \"userManagementSource\": \"INTERNAL\",\n  \"visibleOnLoginPage\": \"<boolean>\",\n  \"externalTokenConfig\": {\n    \"enabled\": \"<boolean>\",\n    \"userOrAppIdConfig\": {\n      \"constantValue\": \"<string>\",\n      \"jwtField\": \"<string>\",\n      \"useConstantValue\": \"<boolean>\"\n    },\n    \"validationRequired\": \"<boolean>\",\n    \"validationMethod\": \"INTROSPECTION\",\n    \"tokenValidationRequest\": {\n      \"body\": \"<string>\",\n      \"headers\": {\n        \"Utff\": \"<string>\",\n        \"adipisicing_23\": \"<string>\"\n      },\n      \"method\": \"POST\",\n      \"operation\": \"EXECUTE\",\n      \"requestParams\": {\n        \"reprehenderit_5\": \"<string>\",\n        \"nullabe3\": \"<string>\",\n        \"irure_\": \"<string>\",\n        \"adipisicing_4f\": \"<string>\"\n      },\n      \"url\": \"<uri>\"\n    },\n    \"accessTokenValidityCheckIntervalInMinutes\": \"<integer>\"\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/loginOptions/:typeOrId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "loginOptions",
                            ":typeOrId"
                          ],
                          "variable": [
                            {
                              "key": "typeOrId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not authorized to perform this operation.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.authconfig+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"id\": \"<string>\",\n  \"providerName\": \"<string>\",\n  \"type\": \"OAUTH2\",\n  \"accessTokenToUserDataMapping\": {\n    \"emailClaimName\": \"<email>\",\n    \"firstNameClaimName\": \"<string>\",\n    \"lastNameClaimName\": \"<string>\",\n    \"phoneNumberClaimName\": \"<string>\"\n  },\n  \"audience\": \"<uri>\",\n  \"authorizationRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"aute43b\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"sint_9_5\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"authenticationRestrictions\": {\n    \"forbiddenClients\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"forbiddenUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"trustedUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"buttonName\": \"<string>\",\n  \"clientId\": \"<string>\",\n  \"grantType\": \"PASSWORD\",\n  \"issuer\": \"<uri>\",\n  \"logoutRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"qui1\": \"<string>\",\n      \"amet_c5e\": \"<string>\",\n      \"Excepteur_a4\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"in__3\": \"<string>\",\n      \"eu_2e\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"onlyManagementTenantAccess\": \"<boolean>\",\n  \"onNewUser\": {\n    \"dynamicMapping\": {\n      \"configuration\": {\n        \"mapRolesOnlyForNewUser\": \"<boolean>\",\n        \"manageRolesOnlyFromAccessMapping\": \"<boolean>\",\n        \"mapFromIdToken\": \"<boolean>\"\n      },\n      \"mappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"OR\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"AND\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        }\n      ],\n      \"inventoryMappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"OR\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"OR\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  },\n  \"redirectToPlatform\": \"<uri>\",\n  \"refreshRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"cillum7\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"EXECUTE\",\n    \"requestParams\": {\n      \"esse7_\": \"<string>\",\n      \"Excepteur_0\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"sessionConfiguration\": {\n    \"absoluteTimeoutMillis\": \"<integer>\",\n    \"maximumNumberOfParallelSessions\": \"<integer>\",\n    \"renewalTimeoutMillis\": \"<integer>\",\n    \"userAgentValidationRequired\": \"<boolean>\"\n  },\n  \"signatureVerificationConfig\": {\n    \"aad\": {\n      \"publicKeyDiscoveryUrl\": \"<uri>\"\n    },\n    \"adfsManifest\": {\n      \"manifestUrl\": \"<uri>\"\n    },\n    \"jwks\": {\n      \"jwksUrl\": \"<uri>\"\n    },\n    \"manual\": {\n      \"certIdField\": \"<string>\",\n      \"certIdFromField\": \"<boolean>\",\n      \"certificates\": {\n        \"alg\": \"RSA\",\n        \"publicKey\": \"<string>\",\n        \"validFrom\": \"<dateTime>\",\n        \"validTill\": \"<dateTime>\"\n      }\n    }\n  },\n  \"template\": \"<string>\",\n  \"tokenRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"ut_6df\": \"<string>\",\n      \"consectetur_9_\": \"<string>\",\n      \"laborumbc\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"fugiataa2\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"useIdToken\": \"<boolean>\",\n  \"userIdConfig\": {\n    \"constantValue\": \"<string>\",\n    \"jwtField\": \"<string>\",\n    \"useConstantValue\": \"<boolean>\"\n  },\n  \"userManagementSource\": \"INTERNAL\",\n  \"visibleOnLoginPage\": \"<boolean>\",\n  \"externalTokenConfig\": {\n    \"enabled\": \"<boolean>\",\n    \"userOrAppIdConfig\": {\n      \"constantValue\": \"<string>\",\n      \"jwtField\": \"<string>\",\n      \"useConstantValue\": \"<boolean>\"\n    },\n    \"validationRequired\": \"<boolean>\",\n    \"validationMethod\": \"INTROSPECTION\",\n    \"tokenValidationRequest\": {\n      \"body\": \"<string>\",\n      \"headers\": {\n        \"Utff\": \"<string>\",\n        \"adipisicing_23\": \"<string>\"\n      },\n      \"method\": \"POST\",\n      \"operation\": \"EXECUTE\",\n      \"requestParams\": {\n        \"reprehenderit_5\": \"<string>\",\n        \"nullabe3\": \"<string>\",\n        \"irure_\": \"<string>\",\n        \"adipisicing_4f\": \"<string>\"\n      },\n      \"url\": \"<uri>\"\n    },\n    \"accessTokenValidityCheckIntervalInMinutes\": \"<integer>\"\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/loginOptions/:typeOrId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "loginOptions",
                            ":typeOrId"
                          ],
                          "variable": [
                            {
                              "key": "typeOrId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Login option not found.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "X-Cumulocity-Processing-Mode",
                            "value": "PERSISTENT",
                            "description": "Used to explicitly control the processing mode of the request. See [Processing mode](#processing-mode) for more details."
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.com.nsn.cumulocity.authconfig+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"id\": \"<string>\",\n  \"providerName\": \"<string>\",\n  \"type\": \"OAUTH2\",\n  \"accessTokenToUserDataMapping\": {\n    \"emailClaimName\": \"<email>\",\n    \"firstNameClaimName\": \"<string>\",\n    \"lastNameClaimName\": \"<string>\",\n    \"phoneNumberClaimName\": \"<string>\"\n  },\n  \"audience\": \"<uri>\",\n  \"authorizationRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"aute43b\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"sint_9_5\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"authenticationRestrictions\": {\n    \"forbiddenClients\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"forbiddenUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"trustedUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"buttonName\": \"<string>\",\n  \"clientId\": \"<string>\",\n  \"grantType\": \"PASSWORD\",\n  \"issuer\": \"<uri>\",\n  \"logoutRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"qui1\": \"<string>\",\n      \"amet_c5e\": \"<string>\",\n      \"Excepteur_a4\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"in__3\": \"<string>\",\n      \"eu_2e\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"onlyManagementTenantAccess\": \"<boolean>\",\n  \"onNewUser\": {\n    \"dynamicMapping\": {\n      \"configuration\": {\n        \"mapRolesOnlyForNewUser\": \"<boolean>\",\n        \"manageRolesOnlyFromAccessMapping\": \"<boolean>\",\n        \"mapFromIdToken\": \"<boolean>\"\n      },\n      \"mappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"OR\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"AND\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        }\n      ],\n      \"inventoryMappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"OR\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"OR\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  },\n  \"redirectToPlatform\": \"<uri>\",\n  \"refreshRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"cillum7\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"EXECUTE\",\n    \"requestParams\": {\n      \"esse7_\": \"<string>\",\n      \"Excepteur_0\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"sessionConfiguration\": {\n    \"absoluteTimeoutMillis\": \"<integer>\",\n    \"maximumNumberOfParallelSessions\": \"<integer>\",\n    \"renewalTimeoutMillis\": \"<integer>\",\n    \"userAgentValidationRequired\": \"<boolean>\"\n  },\n  \"signatureVerificationConfig\": {\n    \"aad\": {\n      \"publicKeyDiscoveryUrl\": \"<uri>\"\n    },\n    \"adfsManifest\": {\n      \"manifestUrl\": \"<uri>\"\n    },\n    \"jwks\": {\n      \"jwksUrl\": \"<uri>\"\n    },\n    \"manual\": {\n      \"certIdField\": \"<string>\",\n      \"certIdFromField\": \"<boolean>\",\n      \"certificates\": {\n        \"alg\": \"RSA\",\n        \"publicKey\": \"<string>\",\n        \"validFrom\": \"<dateTime>\",\n        \"validTill\": \"<dateTime>\"\n      }\n    }\n  },\n  \"template\": \"<string>\",\n  \"tokenRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"ut_6df\": \"<string>\",\n      \"consectetur_9_\": \"<string>\",\n      \"laborumbc\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"fugiataa2\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"useIdToken\": \"<boolean>\",\n  \"userIdConfig\": {\n    \"constantValue\": \"<string>\",\n    \"jwtField\": \"<string>\",\n    \"useConstantValue\": \"<boolean>\"\n  },\n  \"userManagementSource\": \"INTERNAL\",\n  \"visibleOnLoginPage\": \"<boolean>\",\n  \"externalTokenConfig\": {\n    \"enabled\": \"<boolean>\",\n    \"userOrAppIdConfig\": {\n      \"constantValue\": \"<string>\",\n      \"jwtField\": \"<string>\",\n      \"useConstantValue\": \"<boolean>\"\n    },\n    \"validationRequired\": \"<boolean>\",\n    \"validationMethod\": \"INTROSPECTION\",\n    \"tokenValidationRequest\": {\n      \"body\": \"<string>\",\n      \"headers\": {\n        \"Utff\": \"<string>\",\n        \"adipisicing_23\": \"<string>\"\n      },\n      \"method\": \"POST\",\n      \"operation\": \"EXECUTE\",\n      \"requestParams\": {\n        \"reprehenderit_5\": \"<string>\",\n        \"nullabe3\": \"<string>\",\n        \"irure_\": \"<string>\",\n        \"adipisicing_4f\": \"<string>\"\n      },\n      \"url\": \"<uri>\"\n    },\n    \"accessTokenValidityCheckIntervalInMinutes\": \"<integer>\"\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/loginOptions/:typeOrId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "loginOptions",
                            ":typeOrId"
                          ],
                          "variable": [
                            {
                              "key": "typeOrId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Delete a specific login option",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/tenant/loginOptions/:typeOrId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "loginOptions",
                        ":typeOrId"
                      ],
                      "variable": [
                        {
                          "key": "typeOrId",
                          "value": "<string>",
                          "description": "(Required) The type or ID of the login option. The type's value is case insensitive and can be `OAUTH2`, `OAUTH2_INTERNAL` or `BASIC`."
                        }
                      ]
                    },
                    "description": "Delete a specific login option in the tenant by a given type or ID.\n\n<section><h5>Required roles</h5>\n((ROLE_TENANT_ADMIN <b>OR</b> ROLE_TENANT_MANAGEMENT_ADMIN)\n<b>AND</b> tenant access to login option is not restricted by management tenant)\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "A login option was removed.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/loginOptions/:typeOrId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "loginOptions",
                            ":typeOrId"
                          ],
                          "variable": [
                            {
                              "key": "typeOrId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/loginOptions/:typeOrId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "loginOptions",
                            ":typeOrId"
                          ],
                          "variable": [
                            {
                              "key": "typeOrId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Not authorized to perform this operation.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/loginOptions/:typeOrId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "loginOptions",
                            ":typeOrId"
                          ],
                          "variable": [
                            {
                              "key": "typeOrId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Login option not found.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/loginOptions/:typeOrId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "loginOptions",
                            ":typeOrId"
                          ],
                          "variable": [
                            {
                              "key": "typeOrId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Create a login option",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.com.nsn.cumulocity.authconfig+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.authconfig+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"type\": \"OAUTH2\",\n  \"providerName\": \"<string>\",\n  \"accessTokenToUserDataMapping\": {\n    \"emailClaimName\": \"<email>\",\n    \"firstNameClaimName\": \"<string>\",\n    \"lastNameClaimName\": \"<string>\",\n    \"phoneNumberClaimName\": \"<string>\"\n  },\n  \"audience\": \"<uri>\",\n  \"authorizationRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"magnac\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"officiaa\": \"<string>\",\n      \"tempor_b\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"authenticationRestrictions\": {\n    \"forbiddenClients\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"forbiddenUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"trustedUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"buttonName\": \"<string>\",\n  \"clientId\": \"<string>\",\n  \"grantType\": \"PASSWORD\",\n  \"issuer\": \"<uri>\",\n  \"logoutRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"aliqua_6c0\": \"<string>\"\n    },\n    \"method\": \"GET\",\n    \"operation\": \"EXECUTE\",\n    \"requestParams\": {\n      \"ut_bf\": \"<string>\",\n      \"ipsum_b\": \"<string>\",\n      \"nona0e\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"onlyManagementTenantAccess\": \"<boolean>\",\n  \"onNewUser\": {\n    \"dynamicMapping\": {\n      \"configuration\": {\n        \"mapRolesOnlyForNewUser\": \"<boolean>\",\n        \"manageRolesOnlyFromAccessMapping\": \"<boolean>\",\n        \"mapFromIdToken\": \"<boolean>\"\n      },\n      \"mappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"EQ\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"EQ\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        }\n      ],\n      \"inventoryMappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"LTE\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"GTE\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  },\n  \"redirectToPlatform\": \"<uri>\",\n  \"refreshRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"ut__cb\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"EXECUTE\",\n    \"requestParams\": {\n      \"esse_ff\": \"<string>\",\n      \"culpa_17\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"sessionConfiguration\": {\n    \"absoluteTimeoutMillis\": \"<integer>\",\n    \"maximumNumberOfParallelSessions\": \"<integer>\",\n    \"renewalTimeoutMillis\": \"<integer>\",\n    \"userAgentValidationRequired\": \"<boolean>\"\n  },\n  \"signatureVerificationConfig\": {\n    \"aad\": {\n      \"publicKeyDiscoveryUrl\": \"<uri>\"\n    },\n    \"adfsManifest\": {\n      \"manifestUrl\": \"<uri>\"\n    },\n    \"jwks\": {\n      \"jwksUrl\": \"<uri>\"\n    },\n    \"manual\": {\n      \"certIdField\": \"<string>\",\n      \"certIdFromField\": \"<boolean>\",\n      \"certificates\": {\n        \"alg\": \"RSA\",\n        \"publicKey\": \"<string>\",\n        \"validFrom\": \"<dateTime>\",\n        \"validTill\": \"<dateTime>\"\n      }\n    }\n  },\n  \"template\": \"<string>\",\n  \"tokenRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"amet_e\": \"<string>\",\n      \"in_58a\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"iruree4a\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"useIdToken\": \"<boolean>\",\n  \"userIdConfig\": {\n    \"constantValue\": \"<string>\",\n    \"jwtField\": \"<string>\",\n    \"useConstantValue\": \"<boolean>\"\n  },\n  \"userManagementSource\": \"REMOTE\",\n  \"visibleOnLoginPage\": \"<boolean>\",\n  \"externalTokenConfig\": {\n    \"enabled\": \"<boolean>\",\n    \"userOrAppIdConfig\": {\n      \"constantValue\": \"<string>\",\n      \"jwtField\": \"<string>\",\n      \"useConstantValue\": \"<boolean>\"\n    },\n    \"validationRequired\": \"<boolean>\",\n    \"validationMethod\": \"INTROSPECTION\",\n    \"tokenValidationRequest\": {\n      \"body\": \"<string>\",\n      \"headers\": {\n        \"id_84\": \"<string>\",\n        \"ex93\": \"<string>\",\n        \"consequat_8f\": \"<string>\",\n        \"commodo_39\": \"<string>\"\n      },\n      \"method\": \"GET\",\n      \"operation\": \"EXECUTE\",\n      \"requestParams\": {\n        \"Excepteur_50\": \"<string>\"\n      },\n      \"url\": \"<uri>\"\n    },\n    \"accessTokenValidityCheckIntervalInMinutes\": \"<integer>\"\n  }\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/tenant/loginOptions",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "tenant",
                    "loginOptions"
                  ]
                },
                "description": "Create an authentication configuration on your tenant.\n\n<section><h5>Required roles</h5>\nROLE_TENANT_ADMIN <b>OR</b> ROLE_TENANT_MANAGEMENT_ADMIN\n</section>\n"
              },
              "response": [
                {
                  "name": "A login option was created.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.authconfig+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.authconfig+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"type\": \"OAUTH2\",\n  \"providerName\": \"<string>\",\n  \"accessTokenToUserDataMapping\": {\n    \"emailClaimName\": \"<email>\",\n    \"firstNameClaimName\": \"<string>\",\n    \"lastNameClaimName\": \"<string>\",\n    \"phoneNumberClaimName\": \"<string>\"\n  },\n  \"audience\": \"<uri>\",\n  \"authorizationRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"magnac\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"officiaa\": \"<string>\",\n      \"tempor_b\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"authenticationRestrictions\": {\n    \"forbiddenClients\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"forbiddenUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"trustedUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"buttonName\": \"<string>\",\n  \"clientId\": \"<string>\",\n  \"grantType\": \"PASSWORD\",\n  \"issuer\": \"<uri>\",\n  \"logoutRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"aliqua_6c0\": \"<string>\"\n    },\n    \"method\": \"GET\",\n    \"operation\": \"EXECUTE\",\n    \"requestParams\": {\n      \"ut_bf\": \"<string>\",\n      \"ipsum_b\": \"<string>\",\n      \"nona0e\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"onlyManagementTenantAccess\": \"<boolean>\",\n  \"onNewUser\": {\n    \"dynamicMapping\": {\n      \"configuration\": {\n        \"mapRolesOnlyForNewUser\": \"<boolean>\",\n        \"manageRolesOnlyFromAccessMapping\": \"<boolean>\",\n        \"mapFromIdToken\": \"<boolean>\"\n      },\n      \"mappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"EQ\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"EQ\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        }\n      ],\n      \"inventoryMappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"LTE\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"GTE\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  },\n  \"redirectToPlatform\": \"<uri>\",\n  \"refreshRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"ut__cb\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"EXECUTE\",\n    \"requestParams\": {\n      \"esse_ff\": \"<string>\",\n      \"culpa_17\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"sessionConfiguration\": {\n    \"absoluteTimeoutMillis\": \"<integer>\",\n    \"maximumNumberOfParallelSessions\": \"<integer>\",\n    \"renewalTimeoutMillis\": \"<integer>\",\n    \"userAgentValidationRequired\": \"<boolean>\"\n  },\n  \"signatureVerificationConfig\": {\n    \"aad\": {\n      \"publicKeyDiscoveryUrl\": \"<uri>\"\n    },\n    \"adfsManifest\": {\n      \"manifestUrl\": \"<uri>\"\n    },\n    \"jwks\": {\n      \"jwksUrl\": \"<uri>\"\n    },\n    \"manual\": {\n      \"certIdField\": \"<string>\",\n      \"certIdFromField\": \"<boolean>\",\n      \"certificates\": {\n        \"alg\": \"RSA\",\n        \"publicKey\": \"<string>\",\n        \"validFrom\": \"<dateTime>\",\n        \"validTill\": \"<dateTime>\"\n      }\n    }\n  },\n  \"template\": \"<string>\",\n  \"tokenRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"amet_e\": \"<string>\",\n      \"in_58a\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"iruree4a\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"useIdToken\": \"<boolean>\",\n  \"userIdConfig\": {\n    \"constantValue\": \"<string>\",\n    \"jwtField\": \"<string>\",\n    \"useConstantValue\": \"<boolean>\"\n  },\n  \"userManagementSource\": \"REMOTE\",\n  \"visibleOnLoginPage\": \"<boolean>\",\n  \"externalTokenConfig\": {\n    \"enabled\": \"<boolean>\",\n    \"userOrAppIdConfig\": {\n      \"constantValue\": \"<string>\",\n      \"jwtField\": \"<string>\",\n      \"useConstantValue\": \"<boolean>\"\n    },\n    \"validationRequired\": \"<boolean>\",\n    \"validationMethod\": \"INTROSPECTION\",\n    \"tokenValidationRequest\": {\n      \"body\": \"<string>\",\n      \"headers\": {\n        \"id_84\": \"<string>\",\n        \"ex93\": \"<string>\",\n        \"consequat_8f\": \"<string>\",\n        \"commodo_39\": \"<string>\"\n      },\n      \"method\": \"GET\",\n      \"operation\": \"EXECUTE\",\n      \"requestParams\": {\n        \"Excepteur_50\": \"<string>\"\n      },\n      \"url\": \"<uri>\"\n    },\n    \"accessTokenValidityCheckIntervalInMinutes\": \"<integer>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/tenant/loginOptions",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "loginOptions"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.authconfig+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"type\": \"OAUTH2\",\n  \"providerName\": \"<string>\",\n  \"accessTokenToUserDataMapping\": {\n    \"emailClaimName\": \"<email>\",\n    \"firstNameClaimName\": \"<string>\",\n    \"lastNameClaimName\": \"<string>\",\n    \"phoneNumberClaimName\": \"<string>\"\n  },\n  \"audience\": \"<uri>\",\n  \"authorizationRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"pariatur6c\": \"<string>\",\n      \"aliqua_35\": \"<string>\"\n    },\n    \"method\": \"GET\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"pariatur_2e\": \"<string>\",\n      \"dolor9\": \"<string>\",\n      \"incididunt817\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"authenticationRestrictions\": {\n    \"forbiddenClients\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"forbiddenUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"trustedUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"buttonName\": \"<string>\",\n  \"clientId\": \"<string>\",\n  \"grantType\": \"AUTHORIZATION_CODE\",\n  \"id\": \"<string>\",\n  \"issuer\": \"<uri>\",\n  \"logoutRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"ex0\": \"<string>\",\n      \"ipsum_cd\": \"<string>\",\n      \"ullamco_fe8\": \"<string>\"\n    },\n    \"method\": \"GET\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"tempor_b\": \"<string>\",\n      \"nisi_3\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"onlyManagementTenantAccess\": \"<boolean>\",\n  \"onNewUser\": {\n    \"dynamicMapping\": {\n      \"configuration\": {\n        \"mapRolesOnlyForNewUser\": \"<boolean>\",\n        \"manageRolesOnlyFromAccessMapping\": \"<boolean>\",\n        \"mapFromIdToken\": \"<boolean>\"\n      },\n      \"mappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"NEQ\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"OR\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        }\n      ],\n      \"inventoryMappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"LTE\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"IN\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  },\n  \"redirectToPlatform\": \"<uri>\",\n  \"refreshRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"pariatur72\": \"<string>\",\n      \"nisi_585\": \"<string>\"\n    },\n    \"method\": \"GET\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"qui1\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"self\": \"<uri>\",\n  \"sessionConfiguration\": {\n    \"absoluteTimeoutMillis\": \"<integer>\",\n    \"maximumNumberOfParallelSessions\": \"<integer>\",\n    \"renewalTimeoutMillis\": \"<integer>\",\n    \"userAgentValidationRequired\": \"<boolean>\"\n  },\n  \"signatureVerificationConfig\": {\n    \"aad\": {\n      \"publicKeyDiscoveryUrl\": \"<uri>\"\n    },\n    \"adfsManifest\": {\n      \"manifestUrl\": \"<uri>\"\n    },\n    \"jwks\": {\n      \"jwksUrl\": \"<uri>\"\n    },\n    \"manual\": {\n      \"certIdField\": \"<string>\",\n      \"certIdFromField\": \"<boolean>\",\n      \"certificates\": {\n        \"alg\": \"PCKS\",\n        \"publicKey\": \"<string>\",\n        \"validFrom\": \"<dateTime>\",\n        \"validTill\": \"<dateTime>\"\n      }\n    }\n  },\n  \"template\": \"<string>\",\n  \"tokenRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"ea4d\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"sed_e\": \"<string>\",\n      \"sit_abe\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"useIdToken\": \"<boolean>\",\n  \"userIdConfig\": {\n    \"constantValue\": \"<string>\",\n    \"jwtField\": \"<string>\",\n    \"useConstantValue\": \"<boolean>\"\n  },\n  \"userManagementSource\": \"REMOTE\",\n  \"visibleOnLoginPage\": \"<boolean>\",\n  \"externalTokenConfig\": {\n    \"enabled\": \"<boolean>\",\n    \"userOrAppIdConfig\": {\n      \"constantValue\": \"<string>\",\n      \"jwtField\": \"<string>\",\n      \"useConstantValue\": \"<boolean>\"\n    },\n    \"validationRequired\": \"<boolean>\",\n    \"validationMethod\": \"INTROSPECTION\",\n    \"tokenValidationRequest\": {\n      \"body\": \"<string>\",\n      \"headers\": {\n        \"Duis38\": \"<string>\",\n        \"et__\": \"<string>\"\n      },\n      \"method\": \"POST\",\n      \"operation\": \"EXECUTE\",\n      \"requestParams\": {\n        \"nisi_\": \"<string>\"\n      },\n      \"url\": \"<uri>\"\n    },\n    \"accessTokenValidityCheckIntervalInMinutes\": \"<integer>\"\n  }\n}"
                },
                {
                  "name": "Duplicated – The login option already exists.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.authconfig+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"type\": \"OAUTH2\",\n  \"providerName\": \"<string>\",\n  \"accessTokenToUserDataMapping\": {\n    \"emailClaimName\": \"<email>\",\n    \"firstNameClaimName\": \"<string>\",\n    \"lastNameClaimName\": \"<string>\",\n    \"phoneNumberClaimName\": \"<string>\"\n  },\n  \"audience\": \"<uri>\",\n  \"authorizationRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"magnac\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"officiaa\": \"<string>\",\n      \"tempor_b\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"authenticationRestrictions\": {\n    \"forbiddenClients\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"forbiddenUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"trustedUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"buttonName\": \"<string>\",\n  \"clientId\": \"<string>\",\n  \"grantType\": \"PASSWORD\",\n  \"issuer\": \"<uri>\",\n  \"logoutRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"aliqua_6c0\": \"<string>\"\n    },\n    \"method\": \"GET\",\n    \"operation\": \"EXECUTE\",\n    \"requestParams\": {\n      \"ut_bf\": \"<string>\",\n      \"ipsum_b\": \"<string>\",\n      \"nona0e\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"onlyManagementTenantAccess\": \"<boolean>\",\n  \"onNewUser\": {\n    \"dynamicMapping\": {\n      \"configuration\": {\n        \"mapRolesOnlyForNewUser\": \"<boolean>\",\n        \"manageRolesOnlyFromAccessMapping\": \"<boolean>\",\n        \"mapFromIdToken\": \"<boolean>\"\n      },\n      \"mappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"EQ\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"EQ\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        }\n      ],\n      \"inventoryMappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"LTE\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"GTE\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  },\n  \"redirectToPlatform\": \"<uri>\",\n  \"refreshRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"ut__cb\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"EXECUTE\",\n    \"requestParams\": {\n      \"esse_ff\": \"<string>\",\n      \"culpa_17\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"sessionConfiguration\": {\n    \"absoluteTimeoutMillis\": \"<integer>\",\n    \"maximumNumberOfParallelSessions\": \"<integer>\",\n    \"renewalTimeoutMillis\": \"<integer>\",\n    \"userAgentValidationRequired\": \"<boolean>\"\n  },\n  \"signatureVerificationConfig\": {\n    \"aad\": {\n      \"publicKeyDiscoveryUrl\": \"<uri>\"\n    },\n    \"adfsManifest\": {\n      \"manifestUrl\": \"<uri>\"\n    },\n    \"jwks\": {\n      \"jwksUrl\": \"<uri>\"\n    },\n    \"manual\": {\n      \"certIdField\": \"<string>\",\n      \"certIdFromField\": \"<boolean>\",\n      \"certificates\": {\n        \"alg\": \"RSA\",\n        \"publicKey\": \"<string>\",\n        \"validFrom\": \"<dateTime>\",\n        \"validTill\": \"<dateTime>\"\n      }\n    }\n  },\n  \"template\": \"<string>\",\n  \"tokenRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"amet_e\": \"<string>\",\n      \"in_58a\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"iruree4a\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"useIdToken\": \"<boolean>\",\n  \"userIdConfig\": {\n    \"constantValue\": \"<string>\",\n    \"jwtField\": \"<string>\",\n    \"useConstantValue\": \"<boolean>\"\n  },\n  \"userManagementSource\": \"REMOTE\",\n  \"visibleOnLoginPage\": \"<boolean>\",\n  \"externalTokenConfig\": {\n    \"enabled\": \"<boolean>\",\n    \"userOrAppIdConfig\": {\n      \"constantValue\": \"<string>\",\n      \"jwtField\": \"<string>\",\n      \"useConstantValue\": \"<boolean>\"\n    },\n    \"validationRequired\": \"<boolean>\",\n    \"validationMethod\": \"INTROSPECTION\",\n    \"tokenValidationRequest\": {\n      \"body\": \"<string>\",\n      \"headers\": {\n        \"id_84\": \"<string>\",\n        \"ex93\": \"<string>\",\n        \"consequat_8f\": \"<string>\",\n        \"commodo_39\": \"<string>\"\n      },\n      \"method\": \"GET\",\n      \"operation\": \"EXECUTE\",\n      \"requestParams\": {\n        \"Excepteur_50\": \"<string>\"\n      },\n      \"url\": \"<uri>\"\n    },\n    \"accessTokenValidityCheckIntervalInMinutes\": \"<integer>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/tenant/loginOptions",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "loginOptions"
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.authconfig+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"type\": \"OAUTH2\",\n  \"providerName\": \"<string>\",\n  \"accessTokenToUserDataMapping\": {\n    \"emailClaimName\": \"<email>\",\n    \"firstNameClaimName\": \"<string>\",\n    \"lastNameClaimName\": \"<string>\",\n    \"phoneNumberClaimName\": \"<string>\"\n  },\n  \"audience\": \"<uri>\",\n  \"authorizationRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"magnac\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"officiaa\": \"<string>\",\n      \"tempor_b\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"authenticationRestrictions\": {\n    \"forbiddenClients\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"forbiddenUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"trustedUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"buttonName\": \"<string>\",\n  \"clientId\": \"<string>\",\n  \"grantType\": \"PASSWORD\",\n  \"issuer\": \"<uri>\",\n  \"logoutRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"aliqua_6c0\": \"<string>\"\n    },\n    \"method\": \"GET\",\n    \"operation\": \"EXECUTE\",\n    \"requestParams\": {\n      \"ut_bf\": \"<string>\",\n      \"ipsum_b\": \"<string>\",\n      \"nona0e\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"onlyManagementTenantAccess\": \"<boolean>\",\n  \"onNewUser\": {\n    \"dynamicMapping\": {\n      \"configuration\": {\n        \"mapRolesOnlyForNewUser\": \"<boolean>\",\n        \"manageRolesOnlyFromAccessMapping\": \"<boolean>\",\n        \"mapFromIdToken\": \"<boolean>\"\n      },\n      \"mappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"EQ\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"EQ\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        }\n      ],\n      \"inventoryMappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"LTE\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"GTE\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  },\n  \"redirectToPlatform\": \"<uri>\",\n  \"refreshRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"ut__cb\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"EXECUTE\",\n    \"requestParams\": {\n      \"esse_ff\": \"<string>\",\n      \"culpa_17\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"sessionConfiguration\": {\n    \"absoluteTimeoutMillis\": \"<integer>\",\n    \"maximumNumberOfParallelSessions\": \"<integer>\",\n    \"renewalTimeoutMillis\": \"<integer>\",\n    \"userAgentValidationRequired\": \"<boolean>\"\n  },\n  \"signatureVerificationConfig\": {\n    \"aad\": {\n      \"publicKeyDiscoveryUrl\": \"<uri>\"\n    },\n    \"adfsManifest\": {\n      \"manifestUrl\": \"<uri>\"\n    },\n    \"jwks\": {\n      \"jwksUrl\": \"<uri>\"\n    },\n    \"manual\": {\n      \"certIdField\": \"<string>\",\n      \"certIdFromField\": \"<boolean>\",\n      \"certificates\": {\n        \"alg\": \"RSA\",\n        \"publicKey\": \"<string>\",\n        \"validFrom\": \"<dateTime>\",\n        \"validTill\": \"<dateTime>\"\n      }\n    }\n  },\n  \"template\": \"<string>\",\n  \"tokenRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"amet_e\": \"<string>\",\n      \"in_58a\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"iruree4a\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"useIdToken\": \"<boolean>\",\n  \"userIdConfig\": {\n    \"constantValue\": \"<string>\",\n    \"jwtField\": \"<string>\",\n    \"useConstantValue\": \"<boolean>\"\n  },\n  \"userManagementSource\": \"REMOTE\",\n  \"visibleOnLoginPage\": \"<boolean>\",\n  \"externalTokenConfig\": {\n    \"enabled\": \"<boolean>\",\n    \"userOrAppIdConfig\": {\n      \"constantValue\": \"<string>\",\n      \"jwtField\": \"<string>\",\n      \"useConstantValue\": \"<boolean>\"\n    },\n    \"validationRequired\": \"<boolean>\",\n    \"validationMethod\": \"INTROSPECTION\",\n    \"tokenValidationRequest\": {\n      \"body\": \"<string>\",\n      \"headers\": {\n        \"id_84\": \"<string>\",\n        \"ex93\": \"<string>\",\n        \"consequat_8f\": \"<string>\",\n        \"commodo_39\": \"<string>\"\n      },\n      \"method\": \"GET\",\n      \"operation\": \"EXECUTE\",\n      \"requestParams\": {\n        \"Excepteur_50\": \"<string>\"\n      },\n      \"url\": \"<uri>\"\n    },\n    \"accessTokenValidityCheckIntervalInMinutes\": \"<integer>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/tenant/loginOptions",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "loginOptions"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Unprocessable Entity – invalid payload.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.authconfig+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"type\": \"OAUTH2\",\n  \"providerName\": \"<string>\",\n  \"accessTokenToUserDataMapping\": {\n    \"emailClaimName\": \"<email>\",\n    \"firstNameClaimName\": \"<string>\",\n    \"lastNameClaimName\": \"<string>\",\n    \"phoneNumberClaimName\": \"<string>\"\n  },\n  \"audience\": \"<uri>\",\n  \"authorizationRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"magnac\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"officiaa\": \"<string>\",\n      \"tempor_b\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"authenticationRestrictions\": {\n    \"forbiddenClients\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"forbiddenUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"trustedUserAgents\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"buttonName\": \"<string>\",\n  \"clientId\": \"<string>\",\n  \"grantType\": \"PASSWORD\",\n  \"issuer\": \"<uri>\",\n  \"logoutRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"aliqua_6c0\": \"<string>\"\n    },\n    \"method\": \"GET\",\n    \"operation\": \"EXECUTE\",\n    \"requestParams\": {\n      \"ut_bf\": \"<string>\",\n      \"ipsum_b\": \"<string>\",\n      \"nona0e\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"onlyManagementTenantAccess\": \"<boolean>\",\n  \"onNewUser\": {\n    \"dynamicMapping\": {\n      \"configuration\": {\n        \"mapRolesOnlyForNewUser\": \"<boolean>\",\n        \"manageRolesOnlyFromAccessMapping\": \"<boolean>\",\n        \"mapFromIdToken\": \"<boolean>\"\n      },\n      \"mappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"EQ\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"EQ\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenApplications\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"thenGroups\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        }\n      ],\n      \"inventoryMappings\": [\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"LTE\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        },\n        {\n          \"when\": {\n            \"childPredicates\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/JSONPredicateRepresentation detected>\"\n              }\n            ],\n            \"operator\": \"GTE\",\n            \"parameterPath\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          \"thenInventoryRoles\": [\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            },\n            {\n              \"managedObject\": \"<string>\",\n              \"roleIds\": [\n                \"<integer>\",\n                \"<integer>\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  },\n  \"redirectToPlatform\": \"<uri>\",\n  \"refreshRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"ut__cb\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"EXECUTE\",\n    \"requestParams\": {\n      \"esse_ff\": \"<string>\",\n      \"culpa_17\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"sessionConfiguration\": {\n    \"absoluteTimeoutMillis\": \"<integer>\",\n    \"maximumNumberOfParallelSessions\": \"<integer>\",\n    \"renewalTimeoutMillis\": \"<integer>\",\n    \"userAgentValidationRequired\": \"<boolean>\"\n  },\n  \"signatureVerificationConfig\": {\n    \"aad\": {\n      \"publicKeyDiscoveryUrl\": \"<uri>\"\n    },\n    \"adfsManifest\": {\n      \"manifestUrl\": \"<uri>\"\n    },\n    \"jwks\": {\n      \"jwksUrl\": \"<uri>\"\n    },\n    \"manual\": {\n      \"certIdField\": \"<string>\",\n      \"certIdFromField\": \"<boolean>\",\n      \"certificates\": {\n        \"alg\": \"RSA\",\n        \"publicKey\": \"<string>\",\n        \"validFrom\": \"<dateTime>\",\n        \"validTill\": \"<dateTime>\"\n      }\n    }\n  },\n  \"template\": \"<string>\",\n  \"tokenRequest\": {\n    \"body\": \"<string>\",\n    \"headers\": {\n      \"amet_e\": \"<string>\",\n      \"in_58a\": \"<string>\"\n    },\n    \"method\": \"POST\",\n    \"operation\": \"REDIRECT\",\n    \"requestParams\": {\n      \"iruree4a\": \"<string>\"\n    },\n    \"url\": \"<uri>\"\n  },\n  \"useIdToken\": \"<boolean>\",\n  \"userIdConfig\": {\n    \"constantValue\": \"<string>\",\n    \"jwtField\": \"<string>\",\n    \"useConstantValue\": \"<boolean>\"\n  },\n  \"userManagementSource\": \"REMOTE\",\n  \"visibleOnLoginPage\": \"<boolean>\",\n  \"externalTokenConfig\": {\n    \"enabled\": \"<boolean>\",\n    \"userOrAppIdConfig\": {\n      \"constantValue\": \"<string>\",\n      \"jwtField\": \"<string>\",\n      \"useConstantValue\": \"<boolean>\"\n    },\n    \"validationRequired\": \"<boolean>\",\n    \"validationMethod\": \"INTROSPECTION\",\n    \"tokenValidationRequest\": {\n      \"body\": \"<string>\",\n      \"headers\": {\n        \"id_84\": \"<string>\",\n        \"ex93\": \"<string>\",\n        \"consequat_8f\": \"<string>\",\n        \"commodo_39\": \"<string>\"\n      },\n      \"method\": \"GET\",\n      \"operation\": \"EXECUTE\",\n      \"requestParams\": {\n        \"Excepteur_50\": \"<string>\"\n      },\n      \"url\": \"<uri>\"\n    },\n    \"accessTokenValidityCheckIntervalInMinutes\": \"<integer>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/tenant/loginOptions",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "loginOptions"
                      ]
                    }
                  },
                  "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                  "code": 422,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Retrieve all login options",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.loginoptioncollection+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/tenant/loginOptions?management=false&tenantId=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "tenant",
                    "loginOptions"
                  ],
                  "query": [
                    {
                      "key": "management",
                      "value": "false",
                      "description": "If this is set to `true`, the management tenant login options will be returned.\n\n> **&#9432; Info:** The `tenantId` parameter must not be present in the request when using the `management` parameter, otherwise it will cause an error.\n"
                    },
                    {
                      "key": "tenantId",
                      "value": "<string>",
                      "description": "Unique identifier of a Cumulocity tenant."
                    }
                  ]
                },
                "description": "Retrieve all login options available in the tenant."
              },
              "response": [
                {
                  "name": "The request has succeeded and the login options are sent in the response.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.loginoptioncollection+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/tenant/loginOptions?management=false&tenantId=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "loginOptions"
                      ],
                      "query": [
                        {
                          "key": "management",
                          "value": "false",
                          "description": "If this is set to `true`, the management tenant login options will be returned.\n\n> **&#9432; Info:** The `tenantId` parameter must not be present in the request when using the `management` parameter, otherwise it will cause an error.\n"
                        },
                        {
                          "key": "tenantId",
                          "value": "<string>",
                          "description": "Unique identifier of a Cumulocity tenant."
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.loginoptioncollection+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"loginOptions\": [\n    {\n      \"authenticationRestrictions\": {\n        \"forbiddenClients\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"forbiddenUserAgents\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"trustedUserAgents\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"enforceStrength\": \"<boolean>\",\n      \"grantType\": \"PASSWORD\",\n      \"greenMinLength\": \"<integer>\",\n      \"id\": \"<string>\",\n      \"initRequest\": \"<string>\",\n      \"loginRedirectDomain\": \"<string>\",\n      \"self\": \"<uri>\",\n      \"sessionConfiguration\": {\n        \"absoluteTimeoutMillis\": \"<integer>\",\n        \"maximumNumberOfParallelSessions\": \"<integer>\",\n        \"renewalTimeoutMillis\": \"<integer>\",\n        \"userAgentValidationRequired\": \"<boolean>\"\n      },\n      \"strengthValidity\": \"<boolean>\",\n      \"tfaStrategy\": \"<string>\",\n      \"type\": \"<string>\",\n      \"userManagementSource\": \"<string>\",\n      \"visibleOnLoginPage\": \"<boolean>\",\n      \"_type\": \"<string>\"\n    },\n    {\n      \"authenticationRestrictions\": {\n        \"forbiddenClients\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"forbiddenUserAgents\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"trustedUserAgents\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"enforceStrength\": \"<boolean>\",\n      \"grantType\": \"AUTHORIZATION_CODE\",\n      \"greenMinLength\": \"<integer>\",\n      \"id\": \"<string>\",\n      \"initRequest\": \"<string>\",\n      \"loginRedirectDomain\": \"<string>\",\n      \"self\": \"<uri>\",\n      \"sessionConfiguration\": {\n        \"absoluteTimeoutMillis\": \"<integer>\",\n        \"maximumNumberOfParallelSessions\": \"<integer>\",\n        \"renewalTimeoutMillis\": \"<integer>\",\n        \"userAgentValidationRequired\": \"<boolean>\"\n      },\n      \"strengthValidity\": \"<boolean>\",\n      \"tfaStrategy\": \"<string>\",\n      \"type\": \"<string>\",\n      \"userManagementSource\": \"<string>\",\n      \"visibleOnLoginPage\": \"<boolean>\",\n      \"_type\": \"<string>\"\n    }\n  ],\n  \"self\": \"<uri>\"\n}"
                },
                {
                  "name": "Bad request – invalid parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/tenant/loginOptions?management=false&tenantId=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "loginOptions"
                      ],
                      "query": [
                        {
                          "key": "management",
                          "value": "false",
                          "description": "If this is set to `true`, the management tenant login options will be returned.\n\n> **&#9432; Info:** The `tenantId` parameter must not be present in the request when using the `management` parameter, otherwise it will cause an error.\n"
                        },
                        {
                          "key": "tenantId",
                          "value": "<string>",
                          "description": "Unique identifier of a Cumulocity tenant."
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "oauth",
          "item": [
            {
              "name": "token",
              "item": [
                {
                  "name": "Obtain an access token",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "key": "code",
                          "value": "<string>",
                          "description": "Used in case of SSO login. A code received from the external authentication server is exchanged to an internal access token."
                        },
                        {
                          "key": "grant_type",
                          "value": "AUTHORIZATION_CODE",
                          "description": "Dependent on the authentication type. PASSWORD is used for OAI-Secure."
                        },
                        {
                          "key": "password",
                          "value": "<string>",
                          "description": "Used in case of OAI-Secure authentication."
                        },
                        {
                          "key": "tfa_code",
                          "value": "<string>",
                          "description": "Current TFA code, sent by the user, if a TFA code is required to log in. Used in case of OAI-Secure authentication."
                        },
                        {
                          "key": "username",
                          "value": "<string>",
                          "description": "Used in case of OAI-Secure authentication."
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/tenant/oauth/token?tenant_id=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "oauth",
                        "token"
                      ],
                      "query": [
                        {
                          "key": "tenant_id",
                          "value": "<string>",
                          "description": "Unique identifier of a Cumulocity tenant. If not provided, the tenant is calculated based on the request domain."
                        }
                      ]
                    },
                    "description": "Obtain an OAI-Secure access token."
                  },
                  "response": [
                    {
                      "name": "The OAI-Secure access token is sent in the response.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/x-www-form-urlencoded"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "key": "code",
                              "value": "<string>",
                              "description": "Used in case of SSO login. A code received from the external authentication server is exchanged to an internal access token."
                            },
                            {
                              "key": "grant_type",
                              "value": "AUTHORIZATION_CODE",
                              "description": "Dependent on the authentication type. PASSWORD is used for OAI-Secure."
                            },
                            {
                              "key": "password",
                              "value": "<string>",
                              "description": "Used in case of OAI-Secure authentication."
                            },
                            {
                              "key": "tfa_code",
                              "value": "<string>",
                              "description": "Current TFA code, sent by the user, if a TFA code is required to log in. Used in case of OAI-Secure authentication."
                            },
                            {
                              "key": "username",
                              "value": "<string>",
                              "description": "Used in case of OAI-Secure authentication."
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/oauth/token?tenant_id=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "oauth",
                            "token"
                          ],
                          "query": [
                            {
                              "key": "tenant_id",
                              "value": "<string>",
                              "description": "Unique identifier of a Cumulocity tenant. If not provided, the tenant is calculated based on the request domain."
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"access_token\": \"<string>\"\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/x-www-form-urlencoded"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "key": "code",
                              "value": "<string>",
                              "description": "Used in case of SSO login. A code received from the external authentication server is exchanged to an internal access token."
                            },
                            {
                              "key": "grant_type",
                              "value": "AUTHORIZATION_CODE",
                              "description": "Dependent on the authentication type. PASSWORD is used for OAI-Secure."
                            },
                            {
                              "key": "password",
                              "value": "<string>",
                              "description": "Used in case of OAI-Secure authentication."
                            },
                            {
                              "key": "tfa_code",
                              "value": "<string>",
                              "description": "Current TFA code, sent by the user, if a TFA code is required to log in. Used in case of OAI-Secure authentication."
                            },
                            {
                              "key": "username",
                              "value": "<string>",
                              "description": "Used in case of OAI-Secure authentication."
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/oauth/token?tenant_id=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "oauth",
                            "token"
                          ],
                          "query": [
                            {
                              "key": "tenant_id",
                              "value": "<string>",
                              "description": "Unique identifier of a Cumulocity tenant. If not provided, the tenant is calculated based on the request domain."
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Obtain access tokens in cookies",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "code",
                      "value": "<string>",
                      "description": "Used in case of SSO login. A code received from the external authentication server is exchanged to an internal access token."
                    },
                    {
                      "key": "grant_type",
                      "value": "AUTHORIZATION_CODE",
                      "description": "Dependent on the authentication type. PASSWORD is used for OAI-Secure."
                    },
                    {
                      "key": "password",
                      "value": "<string>",
                      "description": "Used in case of OAI-Secure authentication."
                    },
                    {
                      "key": "tfa_code",
                      "value": "<string>",
                      "description": "Current TFA code, sent by the user, if a TFA code is required to log in. Used in case of OAI-Secure authentication."
                    },
                    {
                      "key": "username",
                      "value": "<string>",
                      "description": "Used in case of OAI-Secure authentication."
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/tenant/oauth?tenant_id=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "tenant",
                    "oauth"
                  ],
                  "query": [
                    {
                      "key": "tenant_id",
                      "value": "<string>",
                      "description": "Unique identifier of a Cumulocity tenant. If not provided, the tenant is calculated based on the request domain."
                    }
                  ]
                },
                "description": "Obtain an OAI-Secure and XSRF tokens in cookies.\n"
              },
              "response": [
                {
                  "name": "The tokens are return in cookies.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "key": "code",
                          "value": "<string>",
                          "description": "Used in case of SSO login. A code received from the external authentication server is exchanged to an internal access token."
                        },
                        {
                          "key": "grant_type",
                          "value": "AUTHORIZATION_CODE",
                          "description": "Dependent on the authentication type. PASSWORD is used for OAI-Secure."
                        },
                        {
                          "key": "password",
                          "value": "<string>",
                          "description": "Used in case of OAI-Secure authentication."
                        },
                        {
                          "key": "tfa_code",
                          "value": "<string>",
                          "description": "Current TFA code, sent by the user, if a TFA code is required to log in. Used in case of OAI-Secure authentication."
                        },
                        {
                          "key": "username",
                          "value": "<string>",
                          "description": "Used in case of OAI-Secure authentication."
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/tenant/oauth?tenant_id=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "oauth"
                      ],
                      "query": [
                        {
                          "key": "tenant_id",
                          "value": "<string>",
                          "description": "Unique identifier of a Cumulocity tenant. If not provided, the tenant is calculated based on the request domain."
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Set-Cookie",
                      "value": "<string>",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      }
                    },
                    {
                      "key": "\u0000Set-Cookie",
                      "value": "<string>",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      }
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "key": "code",
                          "value": "<string>",
                          "description": "Used in case of SSO login. A code received from the external authentication server is exchanged to an internal access token."
                        },
                        {
                          "key": "grant_type",
                          "value": "AUTHORIZATION_CODE",
                          "description": "Dependent on the authentication type. PASSWORD is used for OAI-Secure."
                        },
                        {
                          "key": "password",
                          "value": "<string>",
                          "description": "Used in case of OAI-Secure authentication."
                        },
                        {
                          "key": "tfa_code",
                          "value": "<string>",
                          "description": "Current TFA code, sent by the user, if a TFA code is required to log in. Used in case of OAI-Secure authentication."
                        },
                        {
                          "key": "username",
                          "value": "<string>",
                          "description": "Used in case of OAI-Secure authentication."
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/tenant/oauth?tenant_id=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "oauth"
                      ],
                      "query": [
                        {
                          "key": "tenant_id",
                          "value": "<string>",
                          "description": "Unique identifier of a Cumulocity tenant. If not provided, the tenant is calculated based on the request domain."
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "options",
          "item": [
            {
              "name": "{category}",
              "item": [
                {
                  "name": "{key}",
                  "item": [
                    {
                      "name": "Retrieve a specific option",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.option+json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/options/:category/:key",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "options",
                            ":category",
                            ":key"
                          ],
                          "variable": [
                            {
                              "key": "category",
                              "value": "<string>",
                              "description": "(Required) The category of the options."
                            },
                            {
                              "key": "key",
                              "value": "<string>",
                              "description": "(Required) The key of an option."
                            }
                          ]
                        },
                        "description": "Retrieve a specific option (by a given category and key) on your tenant.\n> **⚠️ Important:** Note that Enterprise Tenants are also allowed to read inherited tenant options from the management tenant.\n\n<section><h5>Required roles</h5>\nROLE_OPTION_MANAGEMENT_READ\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "The request has succeeded and the option is sent in the response.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.option+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/tenant/options/:category/:key",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "options",
                                ":category",
                                ":key"
                              ],
                              "variable": [
                                {
                                  "key": "category"
                                },
                                {
                                  "key": "key"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.option+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"category\": \"<string>\",\n  \"key\": \"<string>\",\n  \"value\": \"<string>\",\n  \"self\": \"<uri>\"\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/tenant/options/:category/:key",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "options",
                                ":category",
                                ":key"
                              ],
                              "variable": [
                                {
                                  "key": "category"
                                },
                                {
                                  "key": "key"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Option not found.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/tenant/options/:category/:key",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "options",
                                ":category",
                                ":key"
                              ],
                              "variable": [
                                {
                                  "key": "category"
                                },
                                {
                                  "key": "key"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "Update a specific option",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.option+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"value\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/options/:category/:key",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "options",
                            ":category",
                            ":key"
                          ],
                          "variable": [
                            {
                              "key": "category",
                              "value": "<string>",
                              "description": "(Required) The category of the options."
                            },
                            {
                              "key": "key",
                              "value": "<string>",
                              "description": "(Required) The key of an option."
                            }
                          ]
                        },
                        "description": "Update the value of a specific option (by a given category and key) on your tenant.\n\n<section><h5>Required roles</h5>\nROLE_OPTION_MANAGEMENT_ADMIN <b>AND</b> the option is editable\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "An option was updated.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.option+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"value\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/tenant/options/:category/:key",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "options",
                                ":category",
                                ":key"
                              ],
                              "variable": [
                                {
                                  "key": "category"
                                },
                                {
                                  "key": "key"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.option+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"category\": \"<string>\",\n  \"key\": \"<string>\",\n  \"value\": \"<string>\",\n  \"self\": \"<uri>\"\n}"
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"value\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/tenant/options/:category/:key",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "options",
                                ":category",
                                ":key"
                              ],
                              "variable": [
                                {
                                  "key": "category"
                                },
                                {
                                  "key": "key"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Option not found.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"value\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/tenant/options/:category/:key",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "options",
                                ":category",
                                ":key"
                              ],
                              "variable": [
                                {
                                  "key": "category"
                                },
                                {
                                  "key": "key"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Unprocessable Entity – invalid payload.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"value\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/tenant/options/:category/:key",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "options",
                                ":category",
                                ":key"
                              ],
                              "variable": [
                                {
                                  "key": "category"
                                },
                                {
                                  "key": "key"
                                }
                              ]
                            }
                          },
                          "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                          "code": 422,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "Remove a specific option",
                      "request": {
                        "auth": {
                          "type": "basic",
                          "basic": [
                            {
                              "key": "username",
                              "value": "{{basicAuthUsername}}",
                              "type": "string"
                            },
                            {
                              "key": "password",
                              "value": "{{basicAuthPassword}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/options/:category/:key",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "options",
                            ":category",
                            ":key"
                          ],
                          "variable": [
                            {
                              "key": "category",
                              "value": "<string>",
                              "description": "(Required) The category of the options."
                            },
                            {
                              "key": "key",
                              "value": "<string>",
                              "description": "(Required) The key of an option."
                            }
                          ]
                        },
                        "description": "Remove a specific option (by a given category and key) on your tenant.\n\n<section><h5>Required roles</h5>\nROLE_OPTION_MANAGEMENT_ADMIN\n</section>\n"
                      },
                      "response": [
                        {
                          "name": "An option was removed.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/tenant/options/:category/:key",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "options",
                                ":category",
                                ":key"
                              ],
                              "variable": [
                                {
                                  "key": "category"
                                },
                                {
                                  "key": "key"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Authentication information is missing or invalid.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.error+json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/tenant/options/:category/:key",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "options",
                                ":category",
                                ":key"
                              ],
                              "variable": [
                                {
                                  "key": "category"
                                },
                                {
                                  "key": "key"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.com.nsn.cumulocity.error+json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                        },
                        {
                          "name": "Option not found.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Basic <credentials>",
                                "description": "Added as a part of security scheme: basic"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/tenant/options/:category/:key",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "options",
                                ":category",
                                ":key"
                              ],
                              "variable": [
                                {
                                  "key": "category"
                                },
                                {
                                  "key": "key"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Retrieve all options by category",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.option+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/tenant/options/:category",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "options",
                        ":category"
                      ],
                      "variable": [
                        {
                          "key": "category",
                          "value": "<string>",
                          "description": "(Required) The category of the options."
                        }
                      ]
                    },
                    "description": "Retrieve all the options (by a specified category) on your tenant.\n> **⚠️ Important:** Note that Enterprise Tenants are also allowed to read inherited tenant options from the management tenant.\n\n<section><h5>Required roles</h5>\nROLE_OPTION_MANAGEMENT_READ\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the options are sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.option+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/options/:category",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "options",
                            ":category"
                          ],
                          "variable": [
                            {
                              "key": "category"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.option+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"et9\": {\n    \"description\": \"It is possible to specify an arbitrary number of existing options as a list of key-value pairs, for example, `\\\"key1\\\": \\\"value1\\\"`, `\\\"key2\\\": \\\"value2\\\"`.\",\n    \"x-additionalPropertiesName\": \"keyValuePairs\"\n  },\n  \"et_4\": {\n    \"description\": \"It is possible to specify an arbitrary number of existing options as a list of key-value pairs, for example, `\\\"key1\\\": \\\"value1\\\"`, `\\\"key2\\\": \\\"value2\\\"`.\",\n    \"x-additionalPropertiesName\": \"keyValuePairs\"\n  }\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/options/:category",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "options",
                            ":category"
                          ],
                          "variable": [
                            {
                              "key": "category"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Update options by category",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.option+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"et9\": {\n    \"description\": \"It is possible to specify an arbitrary number of existing options as a list of key-value pairs, for example, `\\\"key1\\\": \\\"value1\\\"`, `\\\"key2\\\": \\\"value2\\\"`.\",\n    \"x-additionalPropertiesName\": \"keyValuePairs\"\n  },\n  \"et_4\": {\n    \"description\": \"It is possible to specify an arbitrary number of existing options as a list of key-value pairs, for example, `\\\"key1\\\": \\\"value1\\\"`, `\\\"key2\\\": \\\"value2\\\"`.\",\n    \"x-additionalPropertiesName\": \"keyValuePairs\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/tenant/options/:category",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "options",
                        ":category"
                      ],
                      "variable": [
                        {
                          "key": "category",
                          "value": "<string>",
                          "description": "(Required) The category of the options."
                        }
                      ]
                    },
                    "description": "Update one or more options (by a specified category) on your tenant.\n\n<section><h5>Required roles</h5>\nROLE_OPTION_MANAGEMENT_ADMIN\n</section>\n"
                  },
                  "response": [
                    {
                      "name": "A collection of options was updated.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.option+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"et9\": {\n    \"description\": \"It is possible to specify an arbitrary number of existing options as a list of key-value pairs, for example, `\\\"key1\\\": \\\"value1\\\"`, `\\\"key2\\\": \\\"value2\\\"`.\",\n    \"x-additionalPropertiesName\": \"keyValuePairs\"\n  },\n  \"et_4\": {\n    \"description\": \"It is possible to specify an arbitrary number of existing options as a list of key-value pairs, for example, `\\\"key1\\\": \\\"value1\\\"`, `\\\"key2\\\": \\\"value2\\\"`.\",\n    \"x-additionalPropertiesName\": \"keyValuePairs\"\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/options/:category",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "options",
                            ":category"
                          ],
                          "variable": [
                            {
                              "key": "category"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.option+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"et9\": {\n    \"description\": \"It is possible to specify an arbitrary number of existing options as a list of key-value pairs, for example, `\\\"key1\\\": \\\"value1\\\"`, `\\\"key2\\\": \\\"value2\\\"`.\",\n    \"x-additionalPropertiesName\": \"keyValuePairs\"\n  },\n  \"et_4\": {\n    \"description\": \"It is possible to specify an arbitrary number of existing options as a list of key-value pairs, for example, `\\\"key1\\\": \\\"value1\\\"`, `\\\"key2\\\": \\\"value2\\\"`.\",\n    \"x-additionalPropertiesName\": \"keyValuePairs\"\n  }\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"et9\": {\n    \"description\": \"It is possible to specify an arbitrary number of existing options as a list of key-value pairs, for example, `\\\"key1\\\": \\\"value1\\\"`, `\\\"key2\\\": \\\"value2\\\"`.\",\n    \"x-additionalPropertiesName\": \"keyValuePairs\"\n  },\n  \"et_4\": {\n    \"description\": \"It is possible to specify an arbitrary number of existing options as a list of key-value pairs, for example, `\\\"key1\\\": \\\"value1\\\"`, `\\\"key2\\\": \\\"value2\\\"`.\",\n    \"x-additionalPropertiesName\": \"keyValuePairs\"\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/options/:category",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "options",
                            ":category"
                          ],
                          "variable": [
                            {
                              "key": "category"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unprocessable Entity – invalid payload.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"et9\": {\n    \"description\": \"It is possible to specify an arbitrary number of existing options as a list of key-value pairs, for example, `\\\"key1\\\": \\\"value1\\\"`, `\\\"key2\\\": \\\"value2\\\"`.\",\n    \"x-additionalPropertiesName\": \"keyValuePairs\"\n  },\n  \"et_4\": {\n    \"description\": \"It is possible to specify an arbitrary number of existing options as a list of key-value pairs, for example, `\\\"key1\\\": \\\"value1\\\"`, `\\\"key2\\\": \\\"value2\\\"`.\",\n    \"x-additionalPropertiesName\": \"keyValuePairs\"\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/tenant/options/:category",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "options",
                            ":category"
                          ],
                          "variable": [
                            {
                              "key": "category"
                            }
                          ]
                        }
                      },
                      "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                      "code": 422,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            },
            {
              "name": "Create an option",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.com.nsn.cumulocity.option+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.option+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"category\": \"<string>\",\n  \"key\": \"<string>\",\n  \"value\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/tenant/options",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "tenant",
                    "options"
                  ]
                },
                "description": "Create an option on your tenant.\n\nOptions are category-key-value tuples which store tenant configurations. Some categories of options allow the creation of new ones, while others are limited to predefined set of keys.\n\nAny option of any tenant can be defined as \"non-editable\" by the \"management\" tenant; once done, any PUT or DELETE requests made on that option by the tenant owner will result in a 403 error (Unauthorized).\n\n### Default option categories\n\n**access.control**\n\n| Key |\tDefault value |\tPredefined | Description |\n|--|--|--|--|\n| allow.origin | * | Yes | Comma separated list of domains allowed for execution of CORS. Wildcards are allowed (for example, `*.cumulocity.com`) |\n\n**alarm.type.mapping**\n\n| Key  |\tPredefined | Description |\n|--|--|--|\n| &lt;ALARM_TYPE> | No | Overrides the severity and alarm text for the alarm with type &lt;ALARM_TYPE>. The severity and text are specified as `<ALARM_SEVERITY>\\|<ALARM_TEXT>`. If either part is empty, the value will not be overridden. If the severity is NONE, the alarm will be suppressed. Example: `\"CRITICAL\\|temperature too high\"`|\n\n### Encrypted credentials\n\nAdding a \"credentials.\" prefix to the `key` will make the `value` of the option encrypted. When the option is  sent to a microservice, the \"credentials.\" prefix is removed and the `value` is decrypted. For example:\n\n```json\n{\n  \"category\": \"secrets\",\n  \"key\": \"credentials.mykey\",\n  \"value\": \"myvalue\"\n}\n```\n\nIn that particular example, the request will contain an additional header `\"Mykey\": \"myvalue\"`.\n\n<section><h5>Required roles</h5>\nROLE_OPTION_MANAGEMENT_ADMIN\n</section>\n"
              },
              "response": [
                {
                  "name": "An option was created.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.option+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.option+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"category\": \"<string>\",\n  \"key\": \"<string>\",\n  \"value\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/tenant/options",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "options"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.option+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"category\": \"<string>\",\n  \"key\": \"<string>\",\n  \"value\": \"<string>\",\n  \"self\": \"<uri>\"\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.option+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"category\": \"<string>\",\n  \"key\": \"<string>\",\n  \"value\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/tenant/options",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "options"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                },
                {
                  "name": "Unprocessable Entity – invalid payload.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.com.nsn.cumulocity.option+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"category\": \"<string>\",\n  \"key\": \"<string>\",\n  \"value\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/tenant/options",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "options"
                      ]
                    }
                  },
                  "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                  "code": 422,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Retrieve all options",
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "key": "username",
                      "value": "{{basicAuthUsername}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{basicAuthPassword}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.optioncollection+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/tenant/options?currentPage=1&pageSize=5&withTotalPages=false",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "tenant",
                    "options"
                  ],
                  "query": [
                    {
                      "key": "currentPage",
                      "value": "1",
                      "description": "The current page of the paginated results."
                    },
                    {
                      "key": "pageSize",
                      "value": "5",
                      "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                    },
                    {
                      "key": "withTotalPages",
                      "value": "false",
                      "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                    }
                  ]
                },
                "description": "Retrieve all the options available on the tenant.\n\n> **⚠️ Important:** Note that Enterprise Tenants are also allowed to read inherited tenant options from the management tenant.\n\n<section><h5>Required roles</h5>\nROLE_OPTION_MANAGEMENT_READ\n</section>\n"
              },
              "response": [
                {
                  "name": "The request has succeeded and the options are sent in the response.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.optioncollection+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/tenant/options?currentPage=1&pageSize=5&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "options"
                      ],
                      "query": [
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.optioncollection+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"next\": \"<string>\",\n  \"prev\": \"<string>\",\n  \"self\": \"<uri>\",\n  \"statistics\": {\n    \"currentPage\": \"<integer>\",\n    \"pageSize\": \"<integer>\",\n    \"totalElements\": \"<integer>\",\n    \"totalPages\": \"<integer>\"\n  },\n  \"options\": [\n    {\n      \"category\": \"<string>\",\n      \"key\": \"<string>\",\n      \"value\": \"<string>\",\n      \"self\": \"<uri>\"\n    },\n    {\n      \"category\": \"<string>\",\n      \"key\": \"<string>\",\n      \"value\": \"<string>\",\n      \"self\": \"<uri>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Authentication information is missing or invalid.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.error+json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Basic <credentials>",
                        "description": "Added as a part of security scheme: basic"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/tenant/options?currentPage=1&pageSize=5&withTotalPages=false",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "options"
                      ],
                      "query": [
                        {
                          "key": "currentPage",
                          "value": "1",
                          "description": "The current page of the paginated results."
                        },
                        {
                          "key": "pageSize",
                          "value": "5",
                          "description": "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects."
                        },
                        {
                          "key": "withTotalPages",
                          "value": "false",
                          "description": "When set to `true`, the returned result will contain in the statistics object the total number of pages. Only applicable on [range queries](https://en.wikipedia.org/wiki/Range_query_(database)).\n> **&#9432; Info:** To improve performance, the `totalPages` statistics are cached for 10 seconds.\n"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.com.nsn.cumulocity.error+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "system",
          "item": [
            {
              "name": "options",
              "item": [
                {
                  "name": "{category}",
                  "item": [
                    {
                      "name": "{key}",
                      "item": [
                        {
                          "name": "Retrieve a specific system option",
                          "request": {
                            "auth": {
                              "type": "basic",
                              "basic": [
                                {
                                  "key": "username",
                                  "value": "{{basicAuthUsername}}",
                                  "type": "string"
                                },
                                {
                                  "key": "password",
                                  "value": "{{basicAuthPassword}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/vnd.com.nsn.cumulocity.option+json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/tenant/system/options/:category/:key",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "tenant",
                                "system",
                                "options",
                                ":category",
                                ":key"
                              ],
                              "variable": [
                                {
                                  "key": "category",
                                  "value": "<string>",
                                  "description": "(Required) The category of the system options."
                                },
                                {
                                  "key": "key",
                                  "value": "<string>",
                                  "description": "(Required) The key of a system option."
                                }
                              ]
                            },
                            "description": "Retrieve a specific system option (by a given category and key) on your tenant.\n\n> **⚠️ Important:** Note that it is possible to call this endpoint without the ROLE_OPTION_MANAGEMENT_ADMIN role, but only the options that are considered not secured (see the list of options above) will be returned. Otherwise, if the option is considered secured and the user does not have the required role, an HTTP response 403 will be returned.\n<section><h5>Required roles</h5>\nROLE_OPTION_MANAGEMENT_ADMIN\n</section>\n"
                          },
                          "response": [
                            {
                              "name": "The request has succeeded and the system option is sent in the response.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.option+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/tenant/system/options/:category/:key",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "tenant",
                                    "system",
                                    "options",
                                    ":category",
                                    ":key"
                                  ],
                                  "variable": [
                                    {
                                      "key": "category"
                                    },
                                    {
                                      "key": "key"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.option+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"category\": \"<string>\",\n  \"key\": \"<string>\",\n  \"value\": \"<string>\"\n}"
                            },
                            {
                              "name": "Authentication information is missing or invalid.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                                  },
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/tenant/system/options/:category/:key",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "tenant",
                                    "system",
                                    "options",
                                    ":category",
                                    ":key"
                                  ],
                                  "variable": [
                                    {
                                      "key": "category"
                                    },
                                    {
                                      "key": "key"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                            },
                            {
                              "name": "Not authorized to perform this operation.",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Authorization",
                                    "value": "Basic <credentials>",
                                    "description": "Added as a part of security scheme: basic"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/tenant/system/options/:category/:key",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "tenant",
                                    "system",
                                    "options",
                                    ":category",
                                    ":key"
                                  ],
                                  "variable": [
                                    {
                                      "key": "category"
                                    },
                                    {
                                      "key": "key"
                                    }
                                  ]
                                }
                              },
                              "status": "Forbidden",
                              "code": 403,
                              "_postman_previewlanguage": "text",
                              "header": [],
                              "cookie": [],
                              "body": ""
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Retrieve all system options",
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}",
                          "type": "string"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/vnd.com.nsn.cumulocity.optioncollection+json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/tenant/system/options",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "tenant",
                        "system",
                        "options"
                      ]
                    },
                    "description": "Retrieve all the system options available on the tenant.\n\n> **⚠️ Important:** Note that it is possible to call this endpoint without the ROLE_OPTION_MANAGEMENT_ADMIN role, but options that are considered secured (see the list of options above) will be obfuscated with a constant value `\"<<Encrypted>>\"`.\n"
                  },
                  "response": [
                    {
                      "name": "The request has succeeded and the system options are sent in the response.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.optioncollection+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/system/options",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "system",
                            "options"
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.optioncollection+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"options\": [\n    {\n      \"category\": \"<string>\",\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"category\": \"<string>\",\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Authentication information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/vnd.com.nsn.cumulocity.error+json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Basic <credentials>",
                            "description": "Added as a part of security scheme: basic"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/tenant/system/options",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "tenant",
                            "system",
                            "options"
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.com.nsn.cumulocity.error+json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "Retrieve URIs to collections of tenants",
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "username",
                  "value": "{{basicAuthUsername}}",
                  "type": "string"
                },
                {
                  "key": "password",
                  "value": "{{basicAuthPassword}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/vnd.com.nsn.cumulocity.tenantapi+json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/tenant",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "tenant"
              ]
            },
            "description": "Retrieve URIs and URI templates to collections of tenants and options.\n\n<section><h5>Required roles</h5>\nROLE_TENANT_MANAGEMENT_READ\n</section>\n"
          },
          "response": [
            {
              "name": "The request has succeeded and the URIs are sent in the response.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.tenantapi+json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/tenant",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "tenant"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.com.nsn.cumulocity.tenantapi+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"options\": {\n    \"self\": \"<uri>\",\n    \"options\": [\n      {\n        \"category\": \"<string>\",\n        \"key\": \"<string>\",\n        \"value\": \"<string>\",\n        \"self\": \"<uri>\"\n      },\n      {\n        \"category\": \"<string>\",\n        \"key\": \"<string>\",\n        \"value\": \"<string>\",\n        \"self\": \"<uri>\"\n      }\n    ]\n  },\n  \"self\": \"<uri>\",\n  \"tenants\": {\n    \"self\": \"<uri>\",\n    \"tenants\": [\n      {\n        \"adminEmail\": \"<email>\",\n        \"adminName\": \"<string>\",\n        \"allowCreateTenants\": false,\n        \"applications\": {\n          \"references\": [\n            {\n              \"availability\": \"PRIVATE\",\n              \"contextPath\": \"<string>\",\n              \"description\": \"<string>\",\n              \"id\": \"<string>\",\n              \"key\": \"<string>\",\n              \"name\": \"<string>\",\n              \"owner\": {\n                \"self\": \"<uri>\",\n                \"tenant\": {\n                  \"id\": \"<string>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"type\": \"MICROSERVICE\",\n              \"manifest\": {\n                \"apiVersion\": \"<string>\",\n                \"billingMode\": \"RESOURCES\",\n                \"contextPath\": \"<string>\",\n                \"extensions\": [\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  },\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  }\n                ],\n                \"isolation\": \"PER_TENANT\",\n                \"livenessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"provider\": {\n                  \"name\": \"<string>\"\n                },\n                \"readinessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"requestResources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"resources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"scale\": \"NONE\",\n                \"settings\": [\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  },\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  }\n                ],\n                \"settingsCategory\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"breadcrumbs\": \"<boolean>\",\n              \"contentSecurityPolicy\": \"<string>\",\n              \"dynamicOptionsUrl\": \"<string>\",\n              \"globalTitle\": \"<string>\",\n              \"legacy\": \"<boolean>\",\n              \"rightDrawer\": \"<boolean>\",\n              \"upgrade\": \"<boolean>\",\n              \"activeVersionId\": \"<string>\",\n              \"resourcesUrl\": \"<string>\"\n            },\n            {\n              \"availability\": \"PRIVATE\",\n              \"contextPath\": \"<string>\",\n              \"description\": \"<string>\",\n              \"id\": \"<string>\",\n              \"key\": \"<string>\",\n              \"name\": \"<string>\",\n              \"owner\": {\n                \"self\": \"<uri>\",\n                \"tenant\": {\n                  \"id\": \"<string>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"type\": \"MICROSERVICE\",\n              \"manifest\": {\n                \"apiVersion\": \"<string>\",\n                \"billingMode\": \"RESOURCES\",\n                \"contextPath\": \"<string>\",\n                \"extensions\": [\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  },\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  }\n                ],\n                \"isolation\": \"PER_TENANT\",\n                \"livenessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"provider\": {\n                  \"name\": \"<string>\"\n                },\n                \"readinessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"requestResources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"resources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"scale\": \"NONE\",\n                \"settings\": [\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  },\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  }\n                ],\n                \"settingsCategory\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"breadcrumbs\": \"<boolean>\",\n              \"contentSecurityPolicy\": \"<string>\",\n              \"dynamicOptionsUrl\": \"<string>\",\n              \"globalTitle\": \"<string>\",\n              \"legacy\": \"<boolean>\",\n              \"rightDrawer\": \"<boolean>\",\n              \"upgrade\": \"<boolean>\",\n              \"activeVersionId\": \"<string>\",\n              \"resourcesUrl\": \"<string>\"\n            }\n          ],\n          \"self\": \"<uri>\"\n        },\n        \"company\": \"<string>\",\n        \"contactName\": \"<string>\",\n        \"contactPhone\": \"<string>\",\n        \"creationTime\": \"<dateTime>\",\n        \"customProperties\": {\n          \"language\": \"<string>\",\n          \"qui_e\": {\n            \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n            \"x-additionalPropertiesName\": \"customProperties\"\n          },\n          \"sed_c\": {\n            \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n            \"x-additionalPropertiesName\": \"customProperties\"\n          }\n        },\n        \"domain\": \"<hostname>\",\n        \"id\": \"<string>\",\n        \"ownedApplications\": {\n          \"references\": [\n            {\n              \"availability\": \"PRIVATE\",\n              \"contextPath\": \"<string>\",\n              \"description\": \"<string>\",\n              \"id\": \"<string>\",\n              \"key\": \"<string>\",\n              \"name\": \"<string>\",\n              \"owner\": {\n                \"self\": \"<uri>\",\n                \"tenant\": {\n                  \"id\": \"<string>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"type\": \"HOSTED\",\n              \"manifest\": {\n                \"apiVersion\": \"<string>\",\n                \"billingMode\": \"RESOURCES\",\n                \"contextPath\": \"<string>\",\n                \"extensions\": [\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  },\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  }\n                ],\n                \"isolation\": \"PER_TENANT\",\n                \"livenessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"provider\": {\n                  \"name\": \"<string>\"\n                },\n                \"readinessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"requestResources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"resources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"scale\": \"NONE\",\n                \"settings\": [\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  },\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  }\n                ],\n                \"settingsCategory\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"breadcrumbs\": \"<boolean>\",\n              \"contentSecurityPolicy\": \"<string>\",\n              \"dynamicOptionsUrl\": \"<string>\",\n              \"globalTitle\": \"<string>\",\n              \"legacy\": \"<boolean>\",\n              \"rightDrawer\": \"<boolean>\",\n              \"upgrade\": \"<boolean>\",\n              \"activeVersionId\": \"<string>\",\n              \"resourcesUrl\": \"<string>\"\n            },\n            {\n              \"availability\": \"PRIVATE\",\n              \"contextPath\": \"<string>\",\n              \"description\": \"<string>\",\n              \"id\": \"<string>\",\n              \"key\": \"<string>\",\n              \"name\": \"<string>\",\n              \"owner\": {\n                \"self\": \"<uri>\",\n                \"tenant\": {\n                  \"id\": \"<string>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"type\": \"EXTERNAL\",\n              \"manifest\": {\n                \"apiVersion\": \"<string>\",\n                \"billingMode\": \"RESOURCES\",\n                \"contextPath\": \"<string>\",\n                \"extensions\": [\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  },\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  }\n                ],\n                \"isolation\": \"MULTI_TENANT\",\n                \"livenessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"provider\": {\n                  \"name\": \"<string>\"\n                },\n                \"readinessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"requestResources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"resources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"scale\": \"NONE\",\n                \"settings\": [\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  },\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  }\n                ],\n                \"settingsCategory\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"breadcrumbs\": \"<boolean>\",\n              \"contentSecurityPolicy\": \"<string>\",\n              \"dynamicOptionsUrl\": \"<string>\",\n              \"globalTitle\": \"<string>\",\n              \"legacy\": \"<boolean>\",\n              \"rightDrawer\": \"<boolean>\",\n              \"upgrade\": \"<boolean>\",\n              \"activeVersionId\": \"<string>\",\n              \"resourcesUrl\": \"<string>\"\n            }\n          ],\n          \"self\": \"<uri>\"\n        },\n        \"parent\": \"<string>\",\n        \"self\": \"<uri>\",\n        \"status\": \"ACTIVE\"\n      },\n      {\n        \"adminEmail\": \"<email>\",\n        \"adminName\": \"<string>\",\n        \"allowCreateTenants\": false,\n        \"applications\": {\n          \"references\": [\n            {\n              \"availability\": \"PRIVATE\",\n              \"contextPath\": \"<string>\",\n              \"description\": \"<string>\",\n              \"id\": \"<string>\",\n              \"key\": \"<string>\",\n              \"name\": \"<string>\",\n              \"owner\": {\n                \"self\": \"<uri>\",\n                \"tenant\": {\n                  \"id\": \"<string>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"type\": \"MICROSERVICE\",\n              \"manifest\": {\n                \"apiVersion\": \"<string>\",\n                \"billingMode\": \"RESOURCES\",\n                \"contextPath\": \"<string>\",\n                \"extensions\": [\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  },\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  }\n                ],\n                \"isolation\": \"MULTI_TENANT\",\n                \"livenessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"provider\": {\n                  \"name\": \"<string>\"\n                },\n                \"readinessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"requestResources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"resources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"scale\": \"NONE\",\n                \"settings\": [\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  },\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  }\n                ],\n                \"settingsCategory\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"breadcrumbs\": \"<boolean>\",\n              \"contentSecurityPolicy\": \"<string>\",\n              \"dynamicOptionsUrl\": \"<string>\",\n              \"globalTitle\": \"<string>\",\n              \"legacy\": \"<boolean>\",\n              \"rightDrawer\": \"<boolean>\",\n              \"upgrade\": \"<boolean>\",\n              \"activeVersionId\": \"<string>\",\n              \"resourcesUrl\": \"<string>\"\n            },\n            {\n              \"availability\": \"PRIVATE\",\n              \"contextPath\": \"<string>\",\n              \"description\": \"<string>\",\n              \"id\": \"<string>\",\n              \"key\": \"<string>\",\n              \"name\": \"<string>\",\n              \"owner\": {\n                \"self\": \"<uri>\",\n                \"tenant\": {\n                  \"id\": \"<string>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"type\": \"HOSTED\",\n              \"manifest\": {\n                \"apiVersion\": \"<string>\",\n                \"billingMode\": \"RESOURCES\",\n                \"contextPath\": \"<string>\",\n                \"extensions\": [\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  },\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  }\n                ],\n                \"isolation\": \"MULTI_TENANT\",\n                \"livenessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"provider\": {\n                  \"name\": \"<string>\"\n                },\n                \"readinessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"requestResources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"resources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"scale\": \"NONE\",\n                \"settings\": [\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  },\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  }\n                ],\n                \"settingsCategory\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"breadcrumbs\": \"<boolean>\",\n              \"contentSecurityPolicy\": \"<string>\",\n              \"dynamicOptionsUrl\": \"<string>\",\n              \"globalTitle\": \"<string>\",\n              \"legacy\": \"<boolean>\",\n              \"rightDrawer\": \"<boolean>\",\n              \"upgrade\": \"<boolean>\",\n              \"activeVersionId\": \"<string>\",\n              \"resourcesUrl\": \"<string>\"\n            }\n          ],\n          \"self\": \"<uri>\"\n        },\n        \"company\": \"<string>\",\n        \"contactName\": \"<string>\",\n        \"contactPhone\": \"<string>\",\n        \"creationTime\": \"<dateTime>\",\n        \"customProperties\": {\n          \"language\": \"<string>\",\n          \"elit_13f\": {\n            \"description\": \"It is possible to add an arbitrary number of custom properties as a list of key-value pairs, for example, `\\\"property\\\": \\\"value\\\"`.\\n\",\n            \"x-additionalPropertiesName\": \"customProperties\"\n          }\n        },\n        \"domain\": \"<hostname>\",\n        \"id\": \"<string>\",\n        \"ownedApplications\": {\n          \"references\": [\n            {\n              \"availability\": \"PRIVATE\",\n              \"contextPath\": \"<string>\",\n              \"description\": \"<string>\",\n              \"id\": \"<string>\",\n              \"key\": \"<string>\",\n              \"name\": \"<string>\",\n              \"owner\": {\n                \"self\": \"<uri>\",\n                \"tenant\": {\n                  \"id\": \"<string>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"type\": \"HOSTED\",\n              \"manifest\": {\n                \"apiVersion\": \"<string>\",\n                \"billingMode\": \"RESOURCES\",\n                \"contextPath\": \"<string>\",\n                \"extensions\": [\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  },\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  }\n                ],\n                \"isolation\": \"MULTI_TENANT\",\n                \"livenessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"provider\": {\n                  \"name\": \"<string>\"\n                },\n                \"readinessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"requestResources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"resources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"scale\": \"NONE\",\n                \"settings\": [\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  },\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  }\n                ],\n                \"settingsCategory\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"breadcrumbs\": \"<boolean>\",\n              \"contentSecurityPolicy\": \"<string>\",\n              \"dynamicOptionsUrl\": \"<string>\",\n              \"globalTitle\": \"<string>\",\n              \"legacy\": \"<boolean>\",\n              \"rightDrawer\": \"<boolean>\",\n              \"upgrade\": \"<boolean>\",\n              \"activeVersionId\": \"<string>\",\n              \"resourcesUrl\": \"<string>\"\n            },\n            {\n              \"availability\": \"PRIVATE\",\n              \"contextPath\": \"<string>\",\n              \"description\": \"<string>\",\n              \"id\": \"<string>\",\n              \"key\": \"<string>\",\n              \"name\": \"<string>\",\n              \"owner\": {\n                \"self\": \"<uri>\",\n                \"tenant\": {\n                  \"id\": \"<string>\"\n                }\n              },\n              \"self\": \"<uri>\",\n              \"type\": \"HOSTED\",\n              \"manifest\": {\n                \"apiVersion\": \"<string>\",\n                \"billingMode\": \"RESOURCES\",\n                \"contextPath\": \"<string>\",\n                \"extensions\": [\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  },\n                  {\n                    \"path\": \"<string>\",\n                    \"type\": \"<string>\"\n                  }\n                ],\n                \"isolation\": \"MULTI_TENANT\",\n                \"livenessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"provider\": {\n                  \"name\": \"<string>\"\n                },\n                \"readinessProbe\": {\n                  \"failureThreshold\": \"<integer>\",\n                  \"periodSeconds\": \"<integer>\",\n                  \"timeoutSeconds\": \"<integer>\",\n                  \"successThreshold\": \"<integer>\",\n                  \"initialDelaySeconds\": \"<integer>\",\n                  \"httpGet\": {\n                    \"path\": \"<string>\",\n                    \"port\": \"<integer>\"\n                  }\n                },\n                \"requestResources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"resources\": {\n                  \"cpu\": \"<string>\",\n                  \"memory\": \"<string>\"\n                },\n                \"roles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"requiredRoles\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"scale\": \"NONE\",\n                \"settings\": [\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  },\n                  {\n                    \"key\": \"<string>\",\n                    \"valueSchema\": {\n                      \"type\": \"<string>\"\n                    },\n                    \"defaultValue\": \"<string>\",\n                    \"editable\": \"<boolean>\",\n                    \"inheritFromOwner\": \"<boolean>\"\n                  }\n                ],\n                \"settingsCategory\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              \"roles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"requiredRoles\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"breadcrumbs\": \"<boolean>\",\n              \"contentSecurityPolicy\": \"<string>\",\n              \"dynamicOptionsUrl\": \"<string>\",\n              \"globalTitle\": \"<string>\",\n              \"legacy\": \"<boolean>\",\n              \"rightDrawer\": \"<boolean>\",\n              \"upgrade\": \"<boolean>\",\n              \"activeVersionId\": \"<string>\",\n              \"resourcesUrl\": \"<string>\"\n            }\n          ],\n          \"self\": \"<uri>\"\n        },\n        \"parent\": \"<string>\",\n        \"self\": \"<uri>\",\n        \"status\": \"ACTIVE\"\n      }\n    ]\n  },\n  \"tenantApplications\": \"<string>\",\n  \"tenantApplicationForId\": \"<string>\",\n  \"tenantForId\": \"<string>\",\n  \"tenantOptionsForCategory\": \"<string>\",\n  \"tenantOptionForCategoryAndKey\": \"<string>\",\n  \"tenantSystemOptions\": \"<string>\",\n  \"tenantSystemOptionsForCategoryAndKey\": \"<string>\"\n}"
            },
            {
              "name": "Authentication information is missing or invalid.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.com.nsn.cumulocity.error+json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic <credentials>",
                    "description": "Added as a part of security scheme: basic"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/tenant",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "tenant"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.com.nsn.cumulocity.error+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
            }
          ]
        }
      ]
    }
  ],
  "auth": {
    "type": "basic",
    "basic": [
      {
        "key": "username",
        "value": "{{basicAuthUsername}}",
        "type": "string"
      },
      {
        "key": "password",
        "value": "{{basicAuthPassword}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://<TENANT_DOMAIN>"
    }
  ]
}